'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("dsTheriaque_Cipemg_Code"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class dsTheriaque_Cipemg_Code
    Inherits Global.System.Data.DataSet
    
    Private tableFCPMCPH_CIPEMG_CLPH As FCPMCPH_CIPEMG_CLPHDataTable
    
    Private tableFCPMCCH_CIPEMG_CLCH As FCPMCCH_CIPEMG_CLCHDataTable
    
    Private tableFCPMSAC_CIPEMG_SUBAC As FCPMSAC_CIPEMG_SUBACDataTable
    
    Private tableFCPMSAU_CIPEMG_SUBAU As FCPMSAU_CIPEMG_SUBAUDataTable
    
    Private tableFCPMPR_CIPEMG_PROD As FCPMPR_CIPEMG_PRODDataTable
    
    Private tableFCPMCH_CIPEMGCH As FCPMCH_CIPEMGCHDataTable
    
    Private tableFCPMSP_CIPEMG_SPE As FCPMSP_CIPEMG_SPEDataTable
    
    Private tableFCPMTER_FCPM_TERRAIN As FCPMTER_FCPM_TERRAINDataTable
    
    Private tableTERCOM_TERRAIN_COMMENTAIRE As TERCOM_TERRAIN_COMMENTAIREDataTable
    
    Private tableNIVCOM_NIVEAU_COMMENTAIRE As NIVCOM_NIVEAU_COMMENTAIREDataTable
    
    Private tableAUTCOM_AUTRE_COMMENTAIRE As AUTCOM_AUTRE_COMMENTAIREDataTable
    
    Private tableFCPMTX_FICHECIPEMG_TEXTE As FCPMTX_FICHECIPEMG_TEXTEDataTable
    
    Private tableFCPMAFS_CIPEMG_AFSSAPS As FCPMAFS_CIPEMG_AFSSAPSDataTable
    
    Private tableFCPM_FICHECIPEMG As FCPM_FICHECIPEMGDataTable
    
    Private relationFK_TERCOM_FCPMTER As Global.System.Data.DataRelation
    
    Private relationFK_NIVCOM_FCPMTER As Global.System.Data.DataRelation
    
    Private relationFK_AUTCOM_FCPMTER As Global.System.Data.DataRelation
    
    Private relationFK_FCPMTX_FCPMTER As Global.System.Data.DataRelation
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("FCPMCPH_CIPEMG_CLPH")) Is Nothing) Then
                MyBase.Tables.Add(New FCPMCPH_CIPEMG_CLPHDataTable(ds.Tables("FCPMCPH_CIPEMG_CLPH")))
            End If
            If (Not (ds.Tables("FCPMCCH_CIPEMG_CLCH")) Is Nothing) Then
                MyBase.Tables.Add(New FCPMCCH_CIPEMG_CLCHDataTable(ds.Tables("FCPMCCH_CIPEMG_CLCH")))
            End If
            If (Not (ds.Tables("FCPMSAC_CIPEMG_SUBAC")) Is Nothing) Then
                MyBase.Tables.Add(New FCPMSAC_CIPEMG_SUBACDataTable(ds.Tables("FCPMSAC_CIPEMG_SUBAC")))
            End If
            If (Not (ds.Tables("FCPMSAU_CIPEMG_SUBAU")) Is Nothing) Then
                MyBase.Tables.Add(New FCPMSAU_CIPEMG_SUBAUDataTable(ds.Tables("FCPMSAU_CIPEMG_SUBAU")))
            End If
            If (Not (ds.Tables("FCPMPR_CIPEMG_PROD")) Is Nothing) Then
                MyBase.Tables.Add(New FCPMPR_CIPEMG_PRODDataTable(ds.Tables("FCPMPR_CIPEMG_PROD")))
            End If
            If (Not (ds.Tables("FCPMCH_CIPEMGCH")) Is Nothing) Then
                MyBase.Tables.Add(New FCPMCH_CIPEMGCHDataTable(ds.Tables("FCPMCH_CIPEMGCH")))
            End If
            If (Not (ds.Tables("FCPMSP_CIPEMG_SPE")) Is Nothing) Then
                MyBase.Tables.Add(New FCPMSP_CIPEMG_SPEDataTable(ds.Tables("FCPMSP_CIPEMG_SPE")))
            End If
            If (Not (ds.Tables("FCPMTER_FCPM_TERRAIN")) Is Nothing) Then
                MyBase.Tables.Add(New FCPMTER_FCPM_TERRAINDataTable(ds.Tables("FCPMTER_FCPM_TERRAIN")))
            End If
            If (Not (ds.Tables("TERCOM_TERRAIN_COMMENTAIRE")) Is Nothing) Then
                MyBase.Tables.Add(New TERCOM_TERRAIN_COMMENTAIREDataTable(ds.Tables("TERCOM_TERRAIN_COMMENTAIRE")))
            End If
            If (Not (ds.Tables("NIVCOM_NIVEAU_COMMENTAIRE")) Is Nothing) Then
                MyBase.Tables.Add(New NIVCOM_NIVEAU_COMMENTAIREDataTable(ds.Tables("NIVCOM_NIVEAU_COMMENTAIRE")))
            End If
            If (Not (ds.Tables("AUTCOM_AUTRE_COMMENTAIRE")) Is Nothing) Then
                MyBase.Tables.Add(New AUTCOM_AUTRE_COMMENTAIREDataTable(ds.Tables("AUTCOM_AUTRE_COMMENTAIRE")))
            End If
            If (Not (ds.Tables("FCPMTX_FICHECIPEMG_TEXTE")) Is Nothing) Then
                MyBase.Tables.Add(New FCPMTX_FICHECIPEMG_TEXTEDataTable(ds.Tables("FCPMTX_FICHECIPEMG_TEXTE")))
            End If
            If (Not (ds.Tables("FCPMAFS_CIPEMG_AFSSAPS")) Is Nothing) Then
                MyBase.Tables.Add(New FCPMAFS_CIPEMG_AFSSAPSDataTable(ds.Tables("FCPMAFS_CIPEMG_AFSSAPS")))
            End If
            If (Not (ds.Tables("FCPM_FICHECIPEMG")) Is Nothing) Then
                MyBase.Tables.Add(New FCPM_FICHECIPEMGDataTable(ds.Tables("FCPM_FICHECIPEMG")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property FCPMCPH_CIPEMG_CLPH() As FCPMCPH_CIPEMG_CLPHDataTable
        Get
            Return Me.tableFCPMCPH_CIPEMG_CLPH
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property FCPMCCH_CIPEMG_CLCH() As FCPMCCH_CIPEMG_CLCHDataTable
        Get
            Return Me.tableFCPMCCH_CIPEMG_CLCH
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property FCPMSAC_CIPEMG_SUBAC() As FCPMSAC_CIPEMG_SUBACDataTable
        Get
            Return Me.tableFCPMSAC_CIPEMG_SUBAC
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property FCPMSAU_CIPEMG_SUBAU() As FCPMSAU_CIPEMG_SUBAUDataTable
        Get
            Return Me.tableFCPMSAU_CIPEMG_SUBAU
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property FCPMPR_CIPEMG_PROD() As FCPMPR_CIPEMG_PRODDataTable
        Get
            Return Me.tableFCPMPR_CIPEMG_PROD
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property FCPMCH_CIPEMGCH() As FCPMCH_CIPEMGCHDataTable
        Get
            Return Me.tableFCPMCH_CIPEMGCH
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property FCPMSP_CIPEMG_SPE() As FCPMSP_CIPEMG_SPEDataTable
        Get
            Return Me.tableFCPMSP_CIPEMG_SPE
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property FCPMTER_FCPM_TERRAIN() As FCPMTER_FCPM_TERRAINDataTable
        Get
            Return Me.tableFCPMTER_FCPM_TERRAIN
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property TERCOM_TERRAIN_COMMENTAIRE() As TERCOM_TERRAIN_COMMENTAIREDataTable
        Get
            Return Me.tableTERCOM_TERRAIN_COMMENTAIRE
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property NIVCOM_NIVEAU_COMMENTAIRE() As NIVCOM_NIVEAU_COMMENTAIREDataTable
        Get
            Return Me.tableNIVCOM_NIVEAU_COMMENTAIRE
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property AUTCOM_AUTRE_COMMENTAIRE() As AUTCOM_AUTRE_COMMENTAIREDataTable
        Get
            Return Me.tableAUTCOM_AUTRE_COMMENTAIRE
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property FCPMTX_FICHECIPEMG_TEXTE() As FCPMTX_FICHECIPEMG_TEXTEDataTable
        Get
            Return Me.tableFCPMTX_FICHECIPEMG_TEXTE
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property FCPMAFS_CIPEMG_AFSSAPS() As FCPMAFS_CIPEMG_AFSSAPSDataTable
        Get
            Return Me.tableFCPMAFS_CIPEMG_AFSSAPS
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property FCPM_FICHECIPEMG() As FCPM_FICHECIPEMGDataTable
        Get
            Return Me.tableFCPM_FICHECIPEMG
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As dsTheriaque_Cipemg_Code = CType(MyBase.Clone,dsTheriaque_Cipemg_Code)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("FCPMCPH_CIPEMG_CLPH")) Is Nothing) Then
                MyBase.Tables.Add(New FCPMCPH_CIPEMG_CLPHDataTable(ds.Tables("FCPMCPH_CIPEMG_CLPH")))
            End If
            If (Not (ds.Tables("FCPMCCH_CIPEMG_CLCH")) Is Nothing) Then
                MyBase.Tables.Add(New FCPMCCH_CIPEMG_CLCHDataTable(ds.Tables("FCPMCCH_CIPEMG_CLCH")))
            End If
            If (Not (ds.Tables("FCPMSAC_CIPEMG_SUBAC")) Is Nothing) Then
                MyBase.Tables.Add(New FCPMSAC_CIPEMG_SUBACDataTable(ds.Tables("FCPMSAC_CIPEMG_SUBAC")))
            End If
            If (Not (ds.Tables("FCPMSAU_CIPEMG_SUBAU")) Is Nothing) Then
                MyBase.Tables.Add(New FCPMSAU_CIPEMG_SUBAUDataTable(ds.Tables("FCPMSAU_CIPEMG_SUBAU")))
            End If
            If (Not (ds.Tables("FCPMPR_CIPEMG_PROD")) Is Nothing) Then
                MyBase.Tables.Add(New FCPMPR_CIPEMG_PRODDataTable(ds.Tables("FCPMPR_CIPEMG_PROD")))
            End If
            If (Not (ds.Tables("FCPMCH_CIPEMGCH")) Is Nothing) Then
                MyBase.Tables.Add(New FCPMCH_CIPEMGCHDataTable(ds.Tables("FCPMCH_CIPEMGCH")))
            End If
            If (Not (ds.Tables("FCPMSP_CIPEMG_SPE")) Is Nothing) Then
                MyBase.Tables.Add(New FCPMSP_CIPEMG_SPEDataTable(ds.Tables("FCPMSP_CIPEMG_SPE")))
            End If
            If (Not (ds.Tables("FCPMTER_FCPM_TERRAIN")) Is Nothing) Then
                MyBase.Tables.Add(New FCPMTER_FCPM_TERRAINDataTable(ds.Tables("FCPMTER_FCPM_TERRAIN")))
            End If
            If (Not (ds.Tables("TERCOM_TERRAIN_COMMENTAIRE")) Is Nothing) Then
                MyBase.Tables.Add(New TERCOM_TERRAIN_COMMENTAIREDataTable(ds.Tables("TERCOM_TERRAIN_COMMENTAIRE")))
            End If
            If (Not (ds.Tables("NIVCOM_NIVEAU_COMMENTAIRE")) Is Nothing) Then
                MyBase.Tables.Add(New NIVCOM_NIVEAU_COMMENTAIREDataTable(ds.Tables("NIVCOM_NIVEAU_COMMENTAIRE")))
            End If
            If (Not (ds.Tables("AUTCOM_AUTRE_COMMENTAIRE")) Is Nothing) Then
                MyBase.Tables.Add(New AUTCOM_AUTRE_COMMENTAIREDataTable(ds.Tables("AUTCOM_AUTRE_COMMENTAIRE")))
            End If
            If (Not (ds.Tables("FCPMTX_FICHECIPEMG_TEXTE")) Is Nothing) Then
                MyBase.Tables.Add(New FCPMTX_FICHECIPEMG_TEXTEDataTable(ds.Tables("FCPMTX_FICHECIPEMG_TEXTE")))
            End If
            If (Not (ds.Tables("FCPMAFS_CIPEMG_AFSSAPS")) Is Nothing) Then
                MyBase.Tables.Add(New FCPMAFS_CIPEMG_AFSSAPSDataTable(ds.Tables("FCPMAFS_CIPEMG_AFSSAPS")))
            End If
            If (Not (ds.Tables("FCPM_FICHECIPEMG")) Is Nothing) Then
                MyBase.Tables.Add(New FCPM_FICHECIPEMGDataTable(ds.Tables("FCPM_FICHECIPEMG")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableFCPMCPH_CIPEMG_CLPH = CType(MyBase.Tables("FCPMCPH_CIPEMG_CLPH"),FCPMCPH_CIPEMG_CLPHDataTable)
        If (initTable = true) Then
            If (Not (Me.tableFCPMCPH_CIPEMG_CLPH) Is Nothing) Then
                Me.tableFCPMCPH_CIPEMG_CLPH.InitVars
            End If
        End If
        Me.tableFCPMCCH_CIPEMG_CLCH = CType(MyBase.Tables("FCPMCCH_CIPEMG_CLCH"),FCPMCCH_CIPEMG_CLCHDataTable)
        If (initTable = true) Then
            If (Not (Me.tableFCPMCCH_CIPEMG_CLCH) Is Nothing) Then
                Me.tableFCPMCCH_CIPEMG_CLCH.InitVars
            End If
        End If
        Me.tableFCPMSAC_CIPEMG_SUBAC = CType(MyBase.Tables("FCPMSAC_CIPEMG_SUBAC"),FCPMSAC_CIPEMG_SUBACDataTable)
        If (initTable = true) Then
            If (Not (Me.tableFCPMSAC_CIPEMG_SUBAC) Is Nothing) Then
                Me.tableFCPMSAC_CIPEMG_SUBAC.InitVars
            End If
        End If
        Me.tableFCPMSAU_CIPEMG_SUBAU = CType(MyBase.Tables("FCPMSAU_CIPEMG_SUBAU"),FCPMSAU_CIPEMG_SUBAUDataTable)
        If (initTable = true) Then
            If (Not (Me.tableFCPMSAU_CIPEMG_SUBAU) Is Nothing) Then
                Me.tableFCPMSAU_CIPEMG_SUBAU.InitVars
            End If
        End If
        Me.tableFCPMPR_CIPEMG_PROD = CType(MyBase.Tables("FCPMPR_CIPEMG_PROD"),FCPMPR_CIPEMG_PRODDataTable)
        If (initTable = true) Then
            If (Not (Me.tableFCPMPR_CIPEMG_PROD) Is Nothing) Then
                Me.tableFCPMPR_CIPEMG_PROD.InitVars
            End If
        End If
        Me.tableFCPMCH_CIPEMGCH = CType(MyBase.Tables("FCPMCH_CIPEMGCH"),FCPMCH_CIPEMGCHDataTable)
        If (initTable = true) Then
            If (Not (Me.tableFCPMCH_CIPEMGCH) Is Nothing) Then
                Me.tableFCPMCH_CIPEMGCH.InitVars
            End If
        End If
        Me.tableFCPMSP_CIPEMG_SPE = CType(MyBase.Tables("FCPMSP_CIPEMG_SPE"),FCPMSP_CIPEMG_SPEDataTable)
        If (initTable = true) Then
            If (Not (Me.tableFCPMSP_CIPEMG_SPE) Is Nothing) Then
                Me.tableFCPMSP_CIPEMG_SPE.InitVars
            End If
        End If
        Me.tableFCPMTER_FCPM_TERRAIN = CType(MyBase.Tables("FCPMTER_FCPM_TERRAIN"),FCPMTER_FCPM_TERRAINDataTable)
        If (initTable = true) Then
            If (Not (Me.tableFCPMTER_FCPM_TERRAIN) Is Nothing) Then
                Me.tableFCPMTER_FCPM_TERRAIN.InitVars
            End If
        End If
        Me.tableTERCOM_TERRAIN_COMMENTAIRE = CType(MyBase.Tables("TERCOM_TERRAIN_COMMENTAIRE"),TERCOM_TERRAIN_COMMENTAIREDataTable)
        If (initTable = true) Then
            If (Not (Me.tableTERCOM_TERRAIN_COMMENTAIRE) Is Nothing) Then
                Me.tableTERCOM_TERRAIN_COMMENTAIRE.InitVars
            End If
        End If
        Me.tableNIVCOM_NIVEAU_COMMENTAIRE = CType(MyBase.Tables("NIVCOM_NIVEAU_COMMENTAIRE"),NIVCOM_NIVEAU_COMMENTAIREDataTable)
        If (initTable = true) Then
            If (Not (Me.tableNIVCOM_NIVEAU_COMMENTAIRE) Is Nothing) Then
                Me.tableNIVCOM_NIVEAU_COMMENTAIRE.InitVars
            End If
        End If
        Me.tableAUTCOM_AUTRE_COMMENTAIRE = CType(MyBase.Tables("AUTCOM_AUTRE_COMMENTAIRE"),AUTCOM_AUTRE_COMMENTAIREDataTable)
        If (initTable = true) Then
            If (Not (Me.tableAUTCOM_AUTRE_COMMENTAIRE) Is Nothing) Then
                Me.tableAUTCOM_AUTRE_COMMENTAIRE.InitVars
            End If
        End If
        Me.tableFCPMTX_FICHECIPEMG_TEXTE = CType(MyBase.Tables("FCPMTX_FICHECIPEMG_TEXTE"),FCPMTX_FICHECIPEMG_TEXTEDataTable)
        If (initTable = true) Then
            If (Not (Me.tableFCPMTX_FICHECIPEMG_TEXTE) Is Nothing) Then
                Me.tableFCPMTX_FICHECIPEMG_TEXTE.InitVars
            End If
        End If
        Me.tableFCPMAFS_CIPEMG_AFSSAPS = CType(MyBase.Tables("FCPMAFS_CIPEMG_AFSSAPS"),FCPMAFS_CIPEMG_AFSSAPSDataTable)
        If (initTable = true) Then
            If (Not (Me.tableFCPMAFS_CIPEMG_AFSSAPS) Is Nothing) Then
                Me.tableFCPMAFS_CIPEMG_AFSSAPS.InitVars
            End If
        End If
        Me.tableFCPM_FICHECIPEMG = CType(MyBase.Tables("FCPM_FICHECIPEMG"),FCPM_FICHECIPEMGDataTable)
        If (initTable = true) Then
            If (Not (Me.tableFCPM_FICHECIPEMG) Is Nothing) Then
                Me.tableFCPM_FICHECIPEMG.InitVars
            End If
        End If
        Me.relationFK_TERCOM_FCPMTER = Me.Relations("FK_TERCOM_FCPMTER")
        Me.relationFK_NIVCOM_FCPMTER = Me.Relations("FK_NIVCOM_FCPMTER")
        Me.relationFK_AUTCOM_FCPMTER = Me.Relations("FK_AUTCOM_FCPMTER")
        Me.relationFK_FCPMTX_FCPMTER = Me.Relations("FK_FCPMTX_FCPMTER")
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "dsTheriaque_Cipemg_Code"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/dsTheriaque_Cipemg_Code.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableFCPMCPH_CIPEMG_CLPH = New FCPMCPH_CIPEMG_CLPHDataTable()
        MyBase.Tables.Add(Me.tableFCPMCPH_CIPEMG_CLPH)
        Me.tableFCPMCCH_CIPEMG_CLCH = New FCPMCCH_CIPEMG_CLCHDataTable()
        MyBase.Tables.Add(Me.tableFCPMCCH_CIPEMG_CLCH)
        Me.tableFCPMSAC_CIPEMG_SUBAC = New FCPMSAC_CIPEMG_SUBACDataTable()
        MyBase.Tables.Add(Me.tableFCPMSAC_CIPEMG_SUBAC)
        Me.tableFCPMSAU_CIPEMG_SUBAU = New FCPMSAU_CIPEMG_SUBAUDataTable()
        MyBase.Tables.Add(Me.tableFCPMSAU_CIPEMG_SUBAU)
        Me.tableFCPMPR_CIPEMG_PROD = New FCPMPR_CIPEMG_PRODDataTable()
        MyBase.Tables.Add(Me.tableFCPMPR_CIPEMG_PROD)
        Me.tableFCPMCH_CIPEMGCH = New FCPMCH_CIPEMGCHDataTable()
        MyBase.Tables.Add(Me.tableFCPMCH_CIPEMGCH)
        Me.tableFCPMSP_CIPEMG_SPE = New FCPMSP_CIPEMG_SPEDataTable()
        MyBase.Tables.Add(Me.tableFCPMSP_CIPEMG_SPE)
        Me.tableFCPMTER_FCPM_TERRAIN = New FCPMTER_FCPM_TERRAINDataTable()
        MyBase.Tables.Add(Me.tableFCPMTER_FCPM_TERRAIN)
        Me.tableTERCOM_TERRAIN_COMMENTAIRE = New TERCOM_TERRAIN_COMMENTAIREDataTable()
        MyBase.Tables.Add(Me.tableTERCOM_TERRAIN_COMMENTAIRE)
        Me.tableNIVCOM_NIVEAU_COMMENTAIRE = New NIVCOM_NIVEAU_COMMENTAIREDataTable()
        MyBase.Tables.Add(Me.tableNIVCOM_NIVEAU_COMMENTAIRE)
        Me.tableAUTCOM_AUTRE_COMMENTAIRE = New AUTCOM_AUTRE_COMMENTAIREDataTable()
        MyBase.Tables.Add(Me.tableAUTCOM_AUTRE_COMMENTAIRE)
        Me.tableFCPMTX_FICHECIPEMG_TEXTE = New FCPMTX_FICHECIPEMG_TEXTEDataTable()
        MyBase.Tables.Add(Me.tableFCPMTX_FICHECIPEMG_TEXTE)
        Me.tableFCPMAFS_CIPEMG_AFSSAPS = New FCPMAFS_CIPEMG_AFSSAPSDataTable()
        MyBase.Tables.Add(Me.tableFCPMAFS_CIPEMG_AFSSAPS)
        Me.tableFCPM_FICHECIPEMG = New FCPM_FICHECIPEMGDataTable()
        MyBase.Tables.Add(Me.tableFCPM_FICHECIPEMG)
        Me.relationFK_TERCOM_FCPMTER = New Global.System.Data.DataRelation("FK_TERCOM_FCPMTER", New Global.System.Data.DataColumn() {Me.tableFCPMTER_FCPM_TERRAIN.FCPMTER_FCPM_CODE_FK_PKColumn, Me.tableFCPMTER_FCPM_TERRAIN.FCPMTER_CDF_TER_CODE_FK_PKColumn, Me.tableFCPMTER_FCPM_TERRAIN.FCPMTER_NATURE_CIPEMG_PKColumn, Me.tableFCPMTER_FCPM_TERRAIN.FCPMTER_NUMSEQ_PKColumn}, New Global.System.Data.DataColumn() {Me.tableTERCOM_TERRAIN_COMMENTAIRE.TERCOM_FCPM_CODE_FK_PKColumn, Me.tableTERCOM_TERRAIN_COMMENTAIRE.TERCOM_CDF_TER_CODE_FK_PKColumn, Me.tableTERCOM_TERRAIN_COMMENTAIRE.TERCOM_NATURE_CIPEMG_FK_PKColumn, Me.tableTERCOM_TERRAIN_COMMENTAIRE.TERCOM_NUMSEQ_TER_FK_PKColumn}, false)
        Me.Relations.Add(Me.relationFK_TERCOM_FCPMTER)
        Me.relationFK_NIVCOM_FCPMTER = New Global.System.Data.DataRelation("FK_NIVCOM_FCPMTER", New Global.System.Data.DataColumn() {Me.tableFCPMTER_FCPM_TERRAIN.FCPMTER_FCPM_CODE_FK_PKColumn, Me.tableFCPMTER_FCPM_TERRAIN.FCPMTER_CDF_TER_CODE_FK_PKColumn, Me.tableFCPMTER_FCPM_TERRAIN.FCPMTER_NATURE_CIPEMG_PKColumn, Me.tableFCPMTER_FCPM_TERRAIN.FCPMTER_NUMSEQ_PKColumn}, New Global.System.Data.DataColumn() {Me.tableNIVCOM_NIVEAU_COMMENTAIRE.NIVCOM_FCPM_CODE_FK_PKColumn, Me.tableNIVCOM_NIVEAU_COMMENTAIRE.NIVCOM_CDF_TER_CODE_FK_PKColumn, Me.tableNIVCOM_NIVEAU_COMMENTAIRE.NIVCOM_NATURE_CIPEMG_FK_PKColumn, Me.tableNIVCOM_NIVEAU_COMMENTAIRE.NIVCOM_NUMSEQ_TER_FK_PKColumn}, false)
        Me.Relations.Add(Me.relationFK_NIVCOM_FCPMTER)
        Me.relationFK_AUTCOM_FCPMTER = New Global.System.Data.DataRelation("FK_AUTCOM_FCPMTER", New Global.System.Data.DataColumn() {Me.tableFCPMTER_FCPM_TERRAIN.FCPMTER_FCPM_CODE_FK_PKColumn, Me.tableFCPMTER_FCPM_TERRAIN.FCPMTER_CDF_TER_CODE_FK_PKColumn, Me.tableFCPMTER_FCPM_TERRAIN.FCPMTER_NATURE_CIPEMG_PKColumn, Me.tableFCPMTER_FCPM_TERRAIN.FCPMTER_NUMSEQ_PKColumn}, New Global.System.Data.DataColumn() {Me.tableAUTCOM_AUTRE_COMMENTAIRE.AUTCOM_FCPM_CODE_FK_PKColumn, Me.tableAUTCOM_AUTRE_COMMENTAIRE.AUTCOM_CDF_TER_CODE_FK_PKColumn, Me.tableAUTCOM_AUTRE_COMMENTAIRE.AUTCOM_NATURE_CIPEMG_FK_PKColumn, Me.tableAUTCOM_AUTRE_COMMENTAIRE.AUTCOM_NUMSEQ_TER_FK_PKColumn}, false)
        Me.Relations.Add(Me.relationFK_AUTCOM_FCPMTER)
        Me.relationFK_FCPMTX_FCPMTER = New Global.System.Data.DataRelation("FK_FCPMTX_FCPMTER", New Global.System.Data.DataColumn() {Me.tableFCPMTER_FCPM_TERRAIN.FCPMTER_FCPM_CODE_FK_PKColumn, Me.tableFCPMTER_FCPM_TERRAIN.FCPMTER_CDF_TER_CODE_FK_PKColumn, Me.tableFCPMTER_FCPM_TERRAIN.FCPMTER_NATURE_CIPEMG_PKColumn, Me.tableFCPMTER_FCPM_TERRAIN.FCPMTER_NUMSEQ_PKColumn}, New Global.System.Data.DataColumn() {Me.tableFCPMTX_FICHECIPEMG_TEXTE.FCPMTX_FCPM_CODE_FK_PKColumn, Me.tableFCPMTX_FICHECIPEMG_TEXTE.FCPMTX_CDF_TER_CODE_FK_PKColumn, Me.tableFCPMTX_FICHECIPEMG_TEXTE.FCPMTX_NATURECIPEMG_FK_PKColumn, Me.tableFCPMTX_FICHECIPEMG_TEXTE.FCPMTX_NUMSEQ_TER_FK_PKColumn}, false)
        Me.Relations.Add(Me.relationFK_FCPMTX_FCPMTER)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeFCPMCPH_CIPEMG_CLPH() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeFCPMCCH_CIPEMG_CLCH() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeFCPMSAC_CIPEMG_SUBAC() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeFCPMSAU_CIPEMG_SUBAU() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeFCPMPR_CIPEMG_PROD() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeFCPMCH_CIPEMGCH() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeFCPMSP_CIPEMG_SPE() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeFCPMTER_FCPM_TERRAIN() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeTERCOM_TERRAIN_COMMENTAIRE() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeNIVCOM_NIVEAU_COMMENTAIRE() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeAUTCOM_AUTRE_COMMENTAIRE() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeFCPMTX_FICHECIPEMG_TEXTE() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeFCPMAFS_CIPEMG_AFSSAPS() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeFCPM_FICHECIPEMG() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As dsTheriaque_Cipemg_Code = New dsTheriaque_Cipemg_Code()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub FCPMCPH_CIPEMG_CLPHRowChangeEventHandler(ByVal sender As Object, ByVal e As FCPMCPH_CIPEMG_CLPHRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub FCPMCCH_CIPEMG_CLCHRowChangeEventHandler(ByVal sender As Object, ByVal e As FCPMCCH_CIPEMG_CLCHRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub FCPMSAC_CIPEMG_SUBACRowChangeEventHandler(ByVal sender As Object, ByVal e As FCPMSAC_CIPEMG_SUBACRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub FCPMSAU_CIPEMG_SUBAURowChangeEventHandler(ByVal sender As Object, ByVal e As FCPMSAU_CIPEMG_SUBAURowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub FCPMPR_CIPEMG_PRODRowChangeEventHandler(ByVal sender As Object, ByVal e As FCPMPR_CIPEMG_PRODRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub FCPMCH_CIPEMGCHRowChangeEventHandler(ByVal sender As Object, ByVal e As FCPMCH_CIPEMGCHRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub FCPMSP_CIPEMG_SPERowChangeEventHandler(ByVal sender As Object, ByVal e As FCPMSP_CIPEMG_SPERowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub FCPMTER_FCPM_TERRAINRowChangeEventHandler(ByVal sender As Object, ByVal e As FCPMTER_FCPM_TERRAINRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub TERCOM_TERRAIN_COMMENTAIRERowChangeEventHandler(ByVal sender As Object, ByVal e As TERCOM_TERRAIN_COMMENTAIRERowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub NIVCOM_NIVEAU_COMMENTAIRERowChangeEventHandler(ByVal sender As Object, ByVal e As NIVCOM_NIVEAU_COMMENTAIRERowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub AUTCOM_AUTRE_COMMENTAIRERowChangeEventHandler(ByVal sender As Object, ByVal e As AUTCOM_AUTRE_COMMENTAIRERowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub FCPMTX_FICHECIPEMG_TEXTERowChangeEventHandler(ByVal sender As Object, ByVal e As FCPMTX_FICHECIPEMG_TEXTERowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub FCPMAFS_CIPEMG_AFSSAPSRowChangeEventHandler(ByVal sender As Object, ByVal e As FCPMAFS_CIPEMG_AFSSAPSRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub FCPM_FICHECIPEMGRowChangeEventHandler(ByVal sender As Object, ByVal e As FCPM_FICHECIPEMGRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class FCPMCPH_CIPEMG_CLPHDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnFCPMCPH_FCPM_CODE_FK_PK As Global.System.Data.DataColumn
        
        Private columnFCPMCPH_CPH_CODE_FK_PK As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "FCPMCPH_CIPEMG_CLPH"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FCPMCPH_FCPM_CODE_FK_PKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFCPMCPH_FCPM_CODE_FK_PK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FCPMCPH_CPH_CODE_FK_PKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFCPMCPH_CPH_CODE_FK_PK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As FCPMCPH_CIPEMG_CLPHRow
            Get
                Return CType(Me.Rows(index),FCPMCPH_CIPEMG_CLPHRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FCPMCPH_CIPEMG_CLPHRowChanging As FCPMCPH_CIPEMG_CLPHRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FCPMCPH_CIPEMG_CLPHRowChanged As FCPMCPH_CIPEMG_CLPHRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FCPMCPH_CIPEMG_CLPHRowDeleting As FCPMCPH_CIPEMG_CLPHRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FCPMCPH_CIPEMG_CLPHRowDeleted As FCPMCPH_CIPEMG_CLPHRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddFCPMCPH_CIPEMG_CLPHRow(ByVal row As FCPMCPH_CIPEMG_CLPHRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddFCPMCPH_CIPEMG_CLPHRow(ByVal FCPMCPH_FCPM_CODE_FK_PK As Integer, ByVal FCPMCPH_CPH_CODE_FK_PK As String) As FCPMCPH_CIPEMG_CLPHRow
            Dim rowFCPMCPH_CIPEMG_CLPHRow As FCPMCPH_CIPEMG_CLPHRow = CType(Me.NewRow,FCPMCPH_CIPEMG_CLPHRow)
            Dim columnValuesArray() As Object = New Object() {FCPMCPH_FCPM_CODE_FK_PK, FCPMCPH_CPH_CODE_FK_PK}
            rowFCPMCPH_CIPEMG_CLPHRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowFCPMCPH_CIPEMG_CLPHRow)
            Return rowFCPMCPH_CIPEMG_CLPHRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByFCPMCPH_FCPM_CODE_FK_PKFCPMCPH_CPH_CODE_FK_PK(ByVal FCPMCPH_FCPM_CODE_FK_PK As Integer, ByVal FCPMCPH_CPH_CODE_FK_PK As String) As FCPMCPH_CIPEMG_CLPHRow
            Return CType(Me.Rows.Find(New Object() {FCPMCPH_FCPM_CODE_FK_PK, FCPMCPH_CPH_CODE_FK_PK}),FCPMCPH_CIPEMG_CLPHRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As FCPMCPH_CIPEMG_CLPHDataTable = CType(MyBase.Clone,FCPMCPH_CIPEMG_CLPHDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New FCPMCPH_CIPEMG_CLPHDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnFCPMCPH_FCPM_CODE_FK_PK = MyBase.Columns("FCPMCPH_FCPM_CODE_FK_PK")
            Me.columnFCPMCPH_CPH_CODE_FK_PK = MyBase.Columns("FCPMCPH_CPH_CODE_FK_PK")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnFCPMCPH_FCPM_CODE_FK_PK = New Global.System.Data.DataColumn("FCPMCPH_FCPM_CODE_FK_PK", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFCPMCPH_FCPM_CODE_FK_PK)
            Me.columnFCPMCPH_CPH_CODE_FK_PK = New Global.System.Data.DataColumn("FCPMCPH_CPH_CODE_FK_PK", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFCPMCPH_CPH_CODE_FK_PK)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnFCPMCPH_FCPM_CODE_FK_PK, Me.columnFCPMCPH_CPH_CODE_FK_PK}, true))
            Me.columnFCPMCPH_FCPM_CODE_FK_PK.AllowDBNull = false
            Me.columnFCPMCPH_CPH_CODE_FK_PK.AllowDBNull = false
            Me.columnFCPMCPH_CPH_CODE_FK_PK.MaxLength = 10
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewFCPMCPH_CIPEMG_CLPHRow() As FCPMCPH_CIPEMG_CLPHRow
            Return CType(Me.NewRow,FCPMCPH_CIPEMG_CLPHRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New FCPMCPH_CIPEMG_CLPHRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(FCPMCPH_CIPEMG_CLPHRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.FCPMCPH_CIPEMG_CLPHRowChangedEvent) Is Nothing) Then
                RaiseEvent FCPMCPH_CIPEMG_CLPHRowChanged(Me, New FCPMCPH_CIPEMG_CLPHRowChangeEvent(CType(e.Row,FCPMCPH_CIPEMG_CLPHRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.FCPMCPH_CIPEMG_CLPHRowChangingEvent) Is Nothing) Then
                RaiseEvent FCPMCPH_CIPEMG_CLPHRowChanging(Me, New FCPMCPH_CIPEMG_CLPHRowChangeEvent(CType(e.Row,FCPMCPH_CIPEMG_CLPHRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.FCPMCPH_CIPEMG_CLPHRowDeletedEvent) Is Nothing) Then
                RaiseEvent FCPMCPH_CIPEMG_CLPHRowDeleted(Me, New FCPMCPH_CIPEMG_CLPHRowChangeEvent(CType(e.Row,FCPMCPH_CIPEMG_CLPHRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.FCPMCPH_CIPEMG_CLPHRowDeletingEvent) Is Nothing) Then
                RaiseEvent FCPMCPH_CIPEMG_CLPHRowDeleting(Me, New FCPMCPH_CIPEMG_CLPHRowChangeEvent(CType(e.Row,FCPMCPH_CIPEMG_CLPHRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveFCPMCPH_CIPEMG_CLPHRow(ByVal row As FCPMCPH_CIPEMG_CLPHRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsTheriaque_Cipemg_Code = New dsTheriaque_Cipemg_Code()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "FCPMCPH_CIPEMG_CLPHDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class FCPMCCH_CIPEMG_CLCHDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnFCPMCCH_FCPM_CODE_FK_PK As Global.System.Data.DataColumn
        
        Private columnFCPMCCH_CCH_CODE_FK_PK As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "FCPMCCH_CIPEMG_CLCH"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FCPMCCH_FCPM_CODE_FK_PKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFCPMCCH_FCPM_CODE_FK_PK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FCPMCCH_CCH_CODE_FK_PKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFCPMCCH_CCH_CODE_FK_PK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As FCPMCCH_CIPEMG_CLCHRow
            Get
                Return CType(Me.Rows(index),FCPMCCH_CIPEMG_CLCHRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FCPMCCH_CIPEMG_CLCHRowChanging As FCPMCCH_CIPEMG_CLCHRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FCPMCCH_CIPEMG_CLCHRowChanged As FCPMCCH_CIPEMG_CLCHRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FCPMCCH_CIPEMG_CLCHRowDeleting As FCPMCCH_CIPEMG_CLCHRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FCPMCCH_CIPEMG_CLCHRowDeleted As FCPMCCH_CIPEMG_CLCHRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddFCPMCCH_CIPEMG_CLCHRow(ByVal row As FCPMCCH_CIPEMG_CLCHRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddFCPMCCH_CIPEMG_CLCHRow(ByVal FCPMCCH_FCPM_CODE_FK_PK As Integer, ByVal FCPMCCH_CCH_CODE_FK_PK As String) As FCPMCCH_CIPEMG_CLCHRow
            Dim rowFCPMCCH_CIPEMG_CLCHRow As FCPMCCH_CIPEMG_CLCHRow = CType(Me.NewRow,FCPMCCH_CIPEMG_CLCHRow)
            Dim columnValuesArray() As Object = New Object() {FCPMCCH_FCPM_CODE_FK_PK, FCPMCCH_CCH_CODE_FK_PK}
            rowFCPMCCH_CIPEMG_CLCHRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowFCPMCCH_CIPEMG_CLCHRow)
            Return rowFCPMCCH_CIPEMG_CLCHRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByFCPMCCH_FCPM_CODE_FK_PKFCPMCCH_CCH_CODE_FK_PK(ByVal FCPMCCH_FCPM_CODE_FK_PK As Integer, ByVal FCPMCCH_CCH_CODE_FK_PK As String) As FCPMCCH_CIPEMG_CLCHRow
            Return CType(Me.Rows.Find(New Object() {FCPMCCH_FCPM_CODE_FK_PK, FCPMCCH_CCH_CODE_FK_PK}),FCPMCCH_CIPEMG_CLCHRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As FCPMCCH_CIPEMG_CLCHDataTable = CType(MyBase.Clone,FCPMCCH_CIPEMG_CLCHDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New FCPMCCH_CIPEMG_CLCHDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnFCPMCCH_FCPM_CODE_FK_PK = MyBase.Columns("FCPMCCH_FCPM_CODE_FK_PK")
            Me.columnFCPMCCH_CCH_CODE_FK_PK = MyBase.Columns("FCPMCCH_CCH_CODE_FK_PK")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnFCPMCCH_FCPM_CODE_FK_PK = New Global.System.Data.DataColumn("FCPMCCH_FCPM_CODE_FK_PK", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFCPMCCH_FCPM_CODE_FK_PK)
            Me.columnFCPMCCH_CCH_CODE_FK_PK = New Global.System.Data.DataColumn("FCPMCCH_CCH_CODE_FK_PK", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFCPMCCH_CCH_CODE_FK_PK)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnFCPMCCH_FCPM_CODE_FK_PK, Me.columnFCPMCCH_CCH_CODE_FK_PK}, true))
            Me.columnFCPMCCH_FCPM_CODE_FK_PK.AllowDBNull = false
            Me.columnFCPMCCH_CCH_CODE_FK_PK.AllowDBNull = false
            Me.columnFCPMCCH_CCH_CODE_FK_PK.MaxLength = 10
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewFCPMCCH_CIPEMG_CLCHRow() As FCPMCCH_CIPEMG_CLCHRow
            Return CType(Me.NewRow,FCPMCCH_CIPEMG_CLCHRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New FCPMCCH_CIPEMG_CLCHRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(FCPMCCH_CIPEMG_CLCHRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.FCPMCCH_CIPEMG_CLCHRowChangedEvent) Is Nothing) Then
                RaiseEvent FCPMCCH_CIPEMG_CLCHRowChanged(Me, New FCPMCCH_CIPEMG_CLCHRowChangeEvent(CType(e.Row,FCPMCCH_CIPEMG_CLCHRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.FCPMCCH_CIPEMG_CLCHRowChangingEvent) Is Nothing) Then
                RaiseEvent FCPMCCH_CIPEMG_CLCHRowChanging(Me, New FCPMCCH_CIPEMG_CLCHRowChangeEvent(CType(e.Row,FCPMCCH_CIPEMG_CLCHRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.FCPMCCH_CIPEMG_CLCHRowDeletedEvent) Is Nothing) Then
                RaiseEvent FCPMCCH_CIPEMG_CLCHRowDeleted(Me, New FCPMCCH_CIPEMG_CLCHRowChangeEvent(CType(e.Row,FCPMCCH_CIPEMG_CLCHRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.FCPMCCH_CIPEMG_CLCHRowDeletingEvent) Is Nothing) Then
                RaiseEvent FCPMCCH_CIPEMG_CLCHRowDeleting(Me, New FCPMCCH_CIPEMG_CLCHRowChangeEvent(CType(e.Row,FCPMCCH_CIPEMG_CLCHRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveFCPMCCH_CIPEMG_CLCHRow(ByVal row As FCPMCCH_CIPEMG_CLCHRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsTheriaque_Cipemg_Code = New dsTheriaque_Cipemg_Code()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "FCPMCCH_CIPEMG_CLCHDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class FCPMSAC_CIPEMG_SUBACDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnFCPMSAC_FCPM_CODE_FK_PK As Global.System.Data.DataColumn
        
        Private columnFCPMSAC_SAC_CODE_FK_PK As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "FCPMSAC_CIPEMG_SUBAC"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FCPMSAC_FCPM_CODE_FK_PKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFCPMSAC_FCPM_CODE_FK_PK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FCPMSAC_SAC_CODE_FK_PKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFCPMSAC_SAC_CODE_FK_PK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As FCPMSAC_CIPEMG_SUBACRow
            Get
                Return CType(Me.Rows(index),FCPMSAC_CIPEMG_SUBACRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FCPMSAC_CIPEMG_SUBACRowChanging As FCPMSAC_CIPEMG_SUBACRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FCPMSAC_CIPEMG_SUBACRowChanged As FCPMSAC_CIPEMG_SUBACRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FCPMSAC_CIPEMG_SUBACRowDeleting As FCPMSAC_CIPEMG_SUBACRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FCPMSAC_CIPEMG_SUBACRowDeleted As FCPMSAC_CIPEMG_SUBACRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddFCPMSAC_CIPEMG_SUBACRow(ByVal row As FCPMSAC_CIPEMG_SUBACRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddFCPMSAC_CIPEMG_SUBACRow(ByVal FCPMSAC_FCPM_CODE_FK_PK As Integer, ByVal FCPMSAC_SAC_CODE_FK_PK As Integer) As FCPMSAC_CIPEMG_SUBACRow
            Dim rowFCPMSAC_CIPEMG_SUBACRow As FCPMSAC_CIPEMG_SUBACRow = CType(Me.NewRow,FCPMSAC_CIPEMG_SUBACRow)
            Dim columnValuesArray() As Object = New Object() {FCPMSAC_FCPM_CODE_FK_PK, FCPMSAC_SAC_CODE_FK_PK}
            rowFCPMSAC_CIPEMG_SUBACRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowFCPMSAC_CIPEMG_SUBACRow)
            Return rowFCPMSAC_CIPEMG_SUBACRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByFCPMSAC_FCPM_CODE_FK_PKFCPMSAC_SAC_CODE_FK_PK(ByVal FCPMSAC_FCPM_CODE_FK_PK As Integer, ByVal FCPMSAC_SAC_CODE_FK_PK As Integer) As FCPMSAC_CIPEMG_SUBACRow
            Return CType(Me.Rows.Find(New Object() {FCPMSAC_FCPM_CODE_FK_PK, FCPMSAC_SAC_CODE_FK_PK}),FCPMSAC_CIPEMG_SUBACRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As FCPMSAC_CIPEMG_SUBACDataTable = CType(MyBase.Clone,FCPMSAC_CIPEMG_SUBACDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New FCPMSAC_CIPEMG_SUBACDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnFCPMSAC_FCPM_CODE_FK_PK = MyBase.Columns("FCPMSAC_FCPM_CODE_FK_PK")
            Me.columnFCPMSAC_SAC_CODE_FK_PK = MyBase.Columns("FCPMSAC_SAC_CODE_FK_PK")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnFCPMSAC_FCPM_CODE_FK_PK = New Global.System.Data.DataColumn("FCPMSAC_FCPM_CODE_FK_PK", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFCPMSAC_FCPM_CODE_FK_PK)
            Me.columnFCPMSAC_SAC_CODE_FK_PK = New Global.System.Data.DataColumn("FCPMSAC_SAC_CODE_FK_PK", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFCPMSAC_SAC_CODE_FK_PK)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnFCPMSAC_FCPM_CODE_FK_PK, Me.columnFCPMSAC_SAC_CODE_FK_PK}, true))
            Me.columnFCPMSAC_FCPM_CODE_FK_PK.AllowDBNull = false
            Me.columnFCPMSAC_SAC_CODE_FK_PK.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewFCPMSAC_CIPEMG_SUBACRow() As FCPMSAC_CIPEMG_SUBACRow
            Return CType(Me.NewRow,FCPMSAC_CIPEMG_SUBACRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New FCPMSAC_CIPEMG_SUBACRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(FCPMSAC_CIPEMG_SUBACRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.FCPMSAC_CIPEMG_SUBACRowChangedEvent) Is Nothing) Then
                RaiseEvent FCPMSAC_CIPEMG_SUBACRowChanged(Me, New FCPMSAC_CIPEMG_SUBACRowChangeEvent(CType(e.Row,FCPMSAC_CIPEMG_SUBACRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.FCPMSAC_CIPEMG_SUBACRowChangingEvent) Is Nothing) Then
                RaiseEvent FCPMSAC_CIPEMG_SUBACRowChanging(Me, New FCPMSAC_CIPEMG_SUBACRowChangeEvent(CType(e.Row,FCPMSAC_CIPEMG_SUBACRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.FCPMSAC_CIPEMG_SUBACRowDeletedEvent) Is Nothing) Then
                RaiseEvent FCPMSAC_CIPEMG_SUBACRowDeleted(Me, New FCPMSAC_CIPEMG_SUBACRowChangeEvent(CType(e.Row,FCPMSAC_CIPEMG_SUBACRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.FCPMSAC_CIPEMG_SUBACRowDeletingEvent) Is Nothing) Then
                RaiseEvent FCPMSAC_CIPEMG_SUBACRowDeleting(Me, New FCPMSAC_CIPEMG_SUBACRowChangeEvent(CType(e.Row,FCPMSAC_CIPEMG_SUBACRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveFCPMSAC_CIPEMG_SUBACRow(ByVal row As FCPMSAC_CIPEMG_SUBACRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsTheriaque_Cipemg_Code = New dsTheriaque_Cipemg_Code()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "FCPMSAC_CIPEMG_SUBACDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class FCPMSAU_CIPEMG_SUBAUDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnFCPMSAU_FCPM_CODE_FK_PK As Global.System.Data.DataColumn
        
        Private columnFCPMSAU_SAU_CODE_FK_PK As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "FCPMSAU_CIPEMG_SUBAU"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FCPMSAU_FCPM_CODE_FK_PKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFCPMSAU_FCPM_CODE_FK_PK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FCPMSAU_SAU_CODE_FK_PKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFCPMSAU_SAU_CODE_FK_PK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As FCPMSAU_CIPEMG_SUBAURow
            Get
                Return CType(Me.Rows(index),FCPMSAU_CIPEMG_SUBAURow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FCPMSAU_CIPEMG_SUBAURowChanging As FCPMSAU_CIPEMG_SUBAURowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FCPMSAU_CIPEMG_SUBAURowChanged As FCPMSAU_CIPEMG_SUBAURowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FCPMSAU_CIPEMG_SUBAURowDeleting As FCPMSAU_CIPEMG_SUBAURowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FCPMSAU_CIPEMG_SUBAURowDeleted As FCPMSAU_CIPEMG_SUBAURowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddFCPMSAU_CIPEMG_SUBAURow(ByVal row As FCPMSAU_CIPEMG_SUBAURow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddFCPMSAU_CIPEMG_SUBAURow(ByVal FCPMSAU_FCPM_CODE_FK_PK As Integer, ByVal FCPMSAU_SAU_CODE_FK_PK As Integer) As FCPMSAU_CIPEMG_SUBAURow
            Dim rowFCPMSAU_CIPEMG_SUBAURow As FCPMSAU_CIPEMG_SUBAURow = CType(Me.NewRow,FCPMSAU_CIPEMG_SUBAURow)
            Dim columnValuesArray() As Object = New Object() {FCPMSAU_FCPM_CODE_FK_PK, FCPMSAU_SAU_CODE_FK_PK}
            rowFCPMSAU_CIPEMG_SUBAURow.ItemArray = columnValuesArray
            Me.Rows.Add(rowFCPMSAU_CIPEMG_SUBAURow)
            Return rowFCPMSAU_CIPEMG_SUBAURow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByFCPMSAU_FCPM_CODE_FK_PKFCPMSAU_SAU_CODE_FK_PK(ByVal FCPMSAU_FCPM_CODE_FK_PK As Integer, ByVal FCPMSAU_SAU_CODE_FK_PK As Integer) As FCPMSAU_CIPEMG_SUBAURow
            Return CType(Me.Rows.Find(New Object() {FCPMSAU_FCPM_CODE_FK_PK, FCPMSAU_SAU_CODE_FK_PK}),FCPMSAU_CIPEMG_SUBAURow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As FCPMSAU_CIPEMG_SUBAUDataTable = CType(MyBase.Clone,FCPMSAU_CIPEMG_SUBAUDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New FCPMSAU_CIPEMG_SUBAUDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnFCPMSAU_FCPM_CODE_FK_PK = MyBase.Columns("FCPMSAU_FCPM_CODE_FK_PK")
            Me.columnFCPMSAU_SAU_CODE_FK_PK = MyBase.Columns("FCPMSAU_SAU_CODE_FK_PK")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnFCPMSAU_FCPM_CODE_FK_PK = New Global.System.Data.DataColumn("FCPMSAU_FCPM_CODE_FK_PK", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFCPMSAU_FCPM_CODE_FK_PK)
            Me.columnFCPMSAU_SAU_CODE_FK_PK = New Global.System.Data.DataColumn("FCPMSAU_SAU_CODE_FK_PK", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFCPMSAU_SAU_CODE_FK_PK)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnFCPMSAU_FCPM_CODE_FK_PK, Me.columnFCPMSAU_SAU_CODE_FK_PK}, true))
            Me.columnFCPMSAU_FCPM_CODE_FK_PK.AllowDBNull = false
            Me.columnFCPMSAU_SAU_CODE_FK_PK.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewFCPMSAU_CIPEMG_SUBAURow() As FCPMSAU_CIPEMG_SUBAURow
            Return CType(Me.NewRow,FCPMSAU_CIPEMG_SUBAURow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New FCPMSAU_CIPEMG_SUBAURow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(FCPMSAU_CIPEMG_SUBAURow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.FCPMSAU_CIPEMG_SUBAURowChangedEvent) Is Nothing) Then
                RaiseEvent FCPMSAU_CIPEMG_SUBAURowChanged(Me, New FCPMSAU_CIPEMG_SUBAURowChangeEvent(CType(e.Row,FCPMSAU_CIPEMG_SUBAURow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.FCPMSAU_CIPEMG_SUBAURowChangingEvent) Is Nothing) Then
                RaiseEvent FCPMSAU_CIPEMG_SUBAURowChanging(Me, New FCPMSAU_CIPEMG_SUBAURowChangeEvent(CType(e.Row,FCPMSAU_CIPEMG_SUBAURow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.FCPMSAU_CIPEMG_SUBAURowDeletedEvent) Is Nothing) Then
                RaiseEvent FCPMSAU_CIPEMG_SUBAURowDeleted(Me, New FCPMSAU_CIPEMG_SUBAURowChangeEvent(CType(e.Row,FCPMSAU_CIPEMG_SUBAURow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.FCPMSAU_CIPEMG_SUBAURowDeletingEvent) Is Nothing) Then
                RaiseEvent FCPMSAU_CIPEMG_SUBAURowDeleting(Me, New FCPMSAU_CIPEMG_SUBAURowChangeEvent(CType(e.Row,FCPMSAU_CIPEMG_SUBAURow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveFCPMSAU_CIPEMG_SUBAURow(ByVal row As FCPMSAU_CIPEMG_SUBAURow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsTheriaque_Cipemg_Code = New dsTheriaque_Cipemg_Code()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "FCPMSAU_CIPEMG_SUBAUDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class FCPMPR_CIPEMG_PRODDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnFCPMPR_FCPM_CODE_FK_PK As Global.System.Data.DataColumn
        
        Private columnFCPMPR_PR_CODE_FK_PK As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "FCPMPR_CIPEMG_PROD"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FCPMPR_FCPM_CODE_FK_PKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFCPMPR_FCPM_CODE_FK_PK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FCPMPR_PR_CODE_FK_PKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFCPMPR_PR_CODE_FK_PK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As FCPMPR_CIPEMG_PRODRow
            Get
                Return CType(Me.Rows(index),FCPMPR_CIPEMG_PRODRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FCPMPR_CIPEMG_PRODRowChanging As FCPMPR_CIPEMG_PRODRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FCPMPR_CIPEMG_PRODRowChanged As FCPMPR_CIPEMG_PRODRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FCPMPR_CIPEMG_PRODRowDeleting As FCPMPR_CIPEMG_PRODRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FCPMPR_CIPEMG_PRODRowDeleted As FCPMPR_CIPEMG_PRODRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddFCPMPR_CIPEMG_PRODRow(ByVal row As FCPMPR_CIPEMG_PRODRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddFCPMPR_CIPEMG_PRODRow(ByVal FCPMPR_FCPM_CODE_FK_PK As Integer, ByVal FCPMPR_PR_CODE_FK_PK As Integer) As FCPMPR_CIPEMG_PRODRow
            Dim rowFCPMPR_CIPEMG_PRODRow As FCPMPR_CIPEMG_PRODRow = CType(Me.NewRow,FCPMPR_CIPEMG_PRODRow)
            Dim columnValuesArray() As Object = New Object() {FCPMPR_FCPM_CODE_FK_PK, FCPMPR_PR_CODE_FK_PK}
            rowFCPMPR_CIPEMG_PRODRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowFCPMPR_CIPEMG_PRODRow)
            Return rowFCPMPR_CIPEMG_PRODRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByFCPMPR_FCPM_CODE_FK_PKFCPMPR_PR_CODE_FK_PK(ByVal FCPMPR_FCPM_CODE_FK_PK As Integer, ByVal FCPMPR_PR_CODE_FK_PK As Integer) As FCPMPR_CIPEMG_PRODRow
            Return CType(Me.Rows.Find(New Object() {FCPMPR_FCPM_CODE_FK_PK, FCPMPR_PR_CODE_FK_PK}),FCPMPR_CIPEMG_PRODRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As FCPMPR_CIPEMG_PRODDataTable = CType(MyBase.Clone,FCPMPR_CIPEMG_PRODDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New FCPMPR_CIPEMG_PRODDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnFCPMPR_FCPM_CODE_FK_PK = MyBase.Columns("FCPMPR_FCPM_CODE_FK_PK")
            Me.columnFCPMPR_PR_CODE_FK_PK = MyBase.Columns("FCPMPR_PR_CODE_FK_PK")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnFCPMPR_FCPM_CODE_FK_PK = New Global.System.Data.DataColumn("FCPMPR_FCPM_CODE_FK_PK", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFCPMPR_FCPM_CODE_FK_PK)
            Me.columnFCPMPR_PR_CODE_FK_PK = New Global.System.Data.DataColumn("FCPMPR_PR_CODE_FK_PK", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFCPMPR_PR_CODE_FK_PK)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnFCPMPR_FCPM_CODE_FK_PK, Me.columnFCPMPR_PR_CODE_FK_PK}, true))
            Me.columnFCPMPR_FCPM_CODE_FK_PK.AllowDBNull = false
            Me.columnFCPMPR_PR_CODE_FK_PK.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewFCPMPR_CIPEMG_PRODRow() As FCPMPR_CIPEMG_PRODRow
            Return CType(Me.NewRow,FCPMPR_CIPEMG_PRODRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New FCPMPR_CIPEMG_PRODRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(FCPMPR_CIPEMG_PRODRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.FCPMPR_CIPEMG_PRODRowChangedEvent) Is Nothing) Then
                RaiseEvent FCPMPR_CIPEMG_PRODRowChanged(Me, New FCPMPR_CIPEMG_PRODRowChangeEvent(CType(e.Row,FCPMPR_CIPEMG_PRODRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.FCPMPR_CIPEMG_PRODRowChangingEvent) Is Nothing) Then
                RaiseEvent FCPMPR_CIPEMG_PRODRowChanging(Me, New FCPMPR_CIPEMG_PRODRowChangeEvent(CType(e.Row,FCPMPR_CIPEMG_PRODRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.FCPMPR_CIPEMG_PRODRowDeletedEvent) Is Nothing) Then
                RaiseEvent FCPMPR_CIPEMG_PRODRowDeleted(Me, New FCPMPR_CIPEMG_PRODRowChangeEvent(CType(e.Row,FCPMPR_CIPEMG_PRODRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.FCPMPR_CIPEMG_PRODRowDeletingEvent) Is Nothing) Then
                RaiseEvent FCPMPR_CIPEMG_PRODRowDeleting(Me, New FCPMPR_CIPEMG_PRODRowChangeEvent(CType(e.Row,FCPMPR_CIPEMG_PRODRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveFCPMPR_CIPEMG_PRODRow(ByVal row As FCPMPR_CIPEMG_PRODRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsTheriaque_Cipemg_Code = New dsTheriaque_Cipemg_Code()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "FCPMPR_CIPEMG_PRODDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class FCPMCH_CIPEMGCHDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnFCPMCH_FCPM_CODE_FK_PK As Global.System.Data.DataColumn
        
        Private columnFCPMCH_CH_CODE_FK_PK As Global.System.Data.DataColumn
        
        Private columnFCPMCH_NUMORD As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "FCPMCH_CIPEMGCH"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FCPMCH_FCPM_CODE_FK_PKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFCPMCH_FCPM_CODE_FK_PK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FCPMCH_CH_CODE_FK_PKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFCPMCH_CH_CODE_FK_PK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FCPMCH_NUMORDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFCPMCH_NUMORD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As FCPMCH_CIPEMGCHRow
            Get
                Return CType(Me.Rows(index),FCPMCH_CIPEMGCHRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FCPMCH_CIPEMGCHRowChanging As FCPMCH_CIPEMGCHRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FCPMCH_CIPEMGCHRowChanged As FCPMCH_CIPEMGCHRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FCPMCH_CIPEMGCHRowDeleting As FCPMCH_CIPEMGCHRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FCPMCH_CIPEMGCHRowDeleted As FCPMCH_CIPEMGCHRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddFCPMCH_CIPEMGCHRow(ByVal row As FCPMCH_CIPEMGCHRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddFCPMCH_CIPEMGCHRow(ByVal FCPMCH_FCPM_CODE_FK_PK As Integer, ByVal FCPMCH_CH_CODE_FK_PK As Integer, ByVal FCPMCH_NUMORD As Short) As FCPMCH_CIPEMGCHRow
            Dim rowFCPMCH_CIPEMGCHRow As FCPMCH_CIPEMGCHRow = CType(Me.NewRow,FCPMCH_CIPEMGCHRow)
            Dim columnValuesArray() As Object = New Object() {FCPMCH_FCPM_CODE_FK_PK, FCPMCH_CH_CODE_FK_PK, FCPMCH_NUMORD}
            rowFCPMCH_CIPEMGCHRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowFCPMCH_CIPEMGCHRow)
            Return rowFCPMCH_CIPEMGCHRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByFCPMCH_FCPM_CODE_FK_PKFCPMCH_CH_CODE_FK_PK(ByVal FCPMCH_FCPM_CODE_FK_PK As Integer, ByVal FCPMCH_CH_CODE_FK_PK As Integer) As FCPMCH_CIPEMGCHRow
            Return CType(Me.Rows.Find(New Object() {FCPMCH_FCPM_CODE_FK_PK, FCPMCH_CH_CODE_FK_PK}),FCPMCH_CIPEMGCHRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As FCPMCH_CIPEMGCHDataTable = CType(MyBase.Clone,FCPMCH_CIPEMGCHDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New FCPMCH_CIPEMGCHDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnFCPMCH_FCPM_CODE_FK_PK = MyBase.Columns("FCPMCH_FCPM_CODE_FK_PK")
            Me.columnFCPMCH_CH_CODE_FK_PK = MyBase.Columns("FCPMCH_CH_CODE_FK_PK")
            Me.columnFCPMCH_NUMORD = MyBase.Columns("FCPMCH_NUMORD")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnFCPMCH_FCPM_CODE_FK_PK = New Global.System.Data.DataColumn("FCPMCH_FCPM_CODE_FK_PK", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFCPMCH_FCPM_CODE_FK_PK)
            Me.columnFCPMCH_CH_CODE_FK_PK = New Global.System.Data.DataColumn("FCPMCH_CH_CODE_FK_PK", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFCPMCH_CH_CODE_FK_PK)
            Me.columnFCPMCH_NUMORD = New Global.System.Data.DataColumn("FCPMCH_NUMORD", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFCPMCH_NUMORD)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnFCPMCH_FCPM_CODE_FK_PK, Me.columnFCPMCH_CH_CODE_FK_PK}, true))
            Me.columnFCPMCH_FCPM_CODE_FK_PK.AllowDBNull = false
            Me.columnFCPMCH_CH_CODE_FK_PK.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewFCPMCH_CIPEMGCHRow() As FCPMCH_CIPEMGCHRow
            Return CType(Me.NewRow,FCPMCH_CIPEMGCHRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New FCPMCH_CIPEMGCHRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(FCPMCH_CIPEMGCHRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.FCPMCH_CIPEMGCHRowChangedEvent) Is Nothing) Then
                RaiseEvent FCPMCH_CIPEMGCHRowChanged(Me, New FCPMCH_CIPEMGCHRowChangeEvent(CType(e.Row,FCPMCH_CIPEMGCHRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.FCPMCH_CIPEMGCHRowChangingEvent) Is Nothing) Then
                RaiseEvent FCPMCH_CIPEMGCHRowChanging(Me, New FCPMCH_CIPEMGCHRowChangeEvent(CType(e.Row,FCPMCH_CIPEMGCHRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.FCPMCH_CIPEMGCHRowDeletedEvent) Is Nothing) Then
                RaiseEvent FCPMCH_CIPEMGCHRowDeleted(Me, New FCPMCH_CIPEMGCHRowChangeEvent(CType(e.Row,FCPMCH_CIPEMGCHRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.FCPMCH_CIPEMGCHRowDeletingEvent) Is Nothing) Then
                RaiseEvent FCPMCH_CIPEMGCHRowDeleting(Me, New FCPMCH_CIPEMGCHRowChangeEvent(CType(e.Row,FCPMCH_CIPEMGCHRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveFCPMCH_CIPEMGCHRow(ByVal row As FCPMCH_CIPEMGCHRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsTheriaque_Cipemg_Code = New dsTheriaque_Cipemg_Code()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "FCPMCH_CIPEMGCHDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class FCPMSP_CIPEMG_SPEDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnFCPMSP_FCPM_CODE_FK_PK As Global.System.Data.DataColumn
        
        Private columnFCPMSP_SP_CODE_FK_PK As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "FCPMSP_CIPEMG_SPE"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FCPMSP_FCPM_CODE_FK_PKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFCPMSP_FCPM_CODE_FK_PK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FCPMSP_SP_CODE_FK_PKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFCPMSP_SP_CODE_FK_PK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As FCPMSP_CIPEMG_SPERow
            Get
                Return CType(Me.Rows(index),FCPMSP_CIPEMG_SPERow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FCPMSP_CIPEMG_SPERowChanging As FCPMSP_CIPEMG_SPERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FCPMSP_CIPEMG_SPERowChanged As FCPMSP_CIPEMG_SPERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FCPMSP_CIPEMG_SPERowDeleting As FCPMSP_CIPEMG_SPERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FCPMSP_CIPEMG_SPERowDeleted As FCPMSP_CIPEMG_SPERowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddFCPMSP_CIPEMG_SPERow(ByVal row As FCPMSP_CIPEMG_SPERow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddFCPMSP_CIPEMG_SPERow(ByVal FCPMSP_FCPM_CODE_FK_PK As Integer, ByVal FCPMSP_SP_CODE_FK_PK As Integer) As FCPMSP_CIPEMG_SPERow
            Dim rowFCPMSP_CIPEMG_SPERow As FCPMSP_CIPEMG_SPERow = CType(Me.NewRow,FCPMSP_CIPEMG_SPERow)
            Dim columnValuesArray() As Object = New Object() {FCPMSP_FCPM_CODE_FK_PK, FCPMSP_SP_CODE_FK_PK}
            rowFCPMSP_CIPEMG_SPERow.ItemArray = columnValuesArray
            Me.Rows.Add(rowFCPMSP_CIPEMG_SPERow)
            Return rowFCPMSP_CIPEMG_SPERow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByFCPMSP_FCPM_CODE_FK_PKFCPMSP_SP_CODE_FK_PK(ByVal FCPMSP_FCPM_CODE_FK_PK As Integer, ByVal FCPMSP_SP_CODE_FK_PK As Integer) As FCPMSP_CIPEMG_SPERow
            Return CType(Me.Rows.Find(New Object() {FCPMSP_FCPM_CODE_FK_PK, FCPMSP_SP_CODE_FK_PK}),FCPMSP_CIPEMG_SPERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As FCPMSP_CIPEMG_SPEDataTable = CType(MyBase.Clone,FCPMSP_CIPEMG_SPEDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New FCPMSP_CIPEMG_SPEDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnFCPMSP_FCPM_CODE_FK_PK = MyBase.Columns("FCPMSP_FCPM_CODE_FK_PK")
            Me.columnFCPMSP_SP_CODE_FK_PK = MyBase.Columns("FCPMSP_SP_CODE_FK_PK")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnFCPMSP_FCPM_CODE_FK_PK = New Global.System.Data.DataColumn("FCPMSP_FCPM_CODE_FK_PK", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFCPMSP_FCPM_CODE_FK_PK)
            Me.columnFCPMSP_SP_CODE_FK_PK = New Global.System.Data.DataColumn("FCPMSP_SP_CODE_FK_PK", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFCPMSP_SP_CODE_FK_PK)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnFCPMSP_FCPM_CODE_FK_PK, Me.columnFCPMSP_SP_CODE_FK_PK}, true))
            Me.columnFCPMSP_FCPM_CODE_FK_PK.AllowDBNull = false
            Me.columnFCPMSP_SP_CODE_FK_PK.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewFCPMSP_CIPEMG_SPERow() As FCPMSP_CIPEMG_SPERow
            Return CType(Me.NewRow,FCPMSP_CIPEMG_SPERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New FCPMSP_CIPEMG_SPERow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(FCPMSP_CIPEMG_SPERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.FCPMSP_CIPEMG_SPERowChangedEvent) Is Nothing) Then
                RaiseEvent FCPMSP_CIPEMG_SPERowChanged(Me, New FCPMSP_CIPEMG_SPERowChangeEvent(CType(e.Row,FCPMSP_CIPEMG_SPERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.FCPMSP_CIPEMG_SPERowChangingEvent) Is Nothing) Then
                RaiseEvent FCPMSP_CIPEMG_SPERowChanging(Me, New FCPMSP_CIPEMG_SPERowChangeEvent(CType(e.Row,FCPMSP_CIPEMG_SPERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.FCPMSP_CIPEMG_SPERowDeletedEvent) Is Nothing) Then
                RaiseEvent FCPMSP_CIPEMG_SPERowDeleted(Me, New FCPMSP_CIPEMG_SPERowChangeEvent(CType(e.Row,FCPMSP_CIPEMG_SPERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.FCPMSP_CIPEMG_SPERowDeletingEvent) Is Nothing) Then
                RaiseEvent FCPMSP_CIPEMG_SPERowDeleting(Me, New FCPMSP_CIPEMG_SPERowChangeEvent(CType(e.Row,FCPMSP_CIPEMG_SPERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveFCPMSP_CIPEMG_SPERow(ByVal row As FCPMSP_CIPEMG_SPERow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsTheriaque_Cipemg_Code = New dsTheriaque_Cipemg_Code()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "FCPMSP_CIPEMG_SPEDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class FCPMTER_FCPM_TERRAINDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnFCPMTER_FCPM_CODE_FK_PK As Global.System.Data.DataColumn
        
        Private columnFCPMTER_CDF_TER_CODE_FK_PK As Global.System.Data.DataColumn
        
        Private columnFCPMTER_NATURE_CIPEMG_PK As Global.System.Data.DataColumn
        
        Private columnFCPMTER_NUMSEQ_PK As Global.System.Data.DataColumn
        
        Private columnFCPMTER_NUMORD As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "FCPMTER_FCPM_TERRAIN"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FCPMTER_FCPM_CODE_FK_PKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFCPMTER_FCPM_CODE_FK_PK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FCPMTER_CDF_TER_CODE_FK_PKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFCPMTER_CDF_TER_CODE_FK_PK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FCPMTER_NATURE_CIPEMG_PKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFCPMTER_NATURE_CIPEMG_PK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FCPMTER_NUMSEQ_PKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFCPMTER_NUMSEQ_PK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FCPMTER_NUMORDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFCPMTER_NUMORD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As FCPMTER_FCPM_TERRAINRow
            Get
                Return CType(Me.Rows(index),FCPMTER_FCPM_TERRAINRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FCPMTER_FCPM_TERRAINRowChanging As FCPMTER_FCPM_TERRAINRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FCPMTER_FCPM_TERRAINRowChanged As FCPMTER_FCPM_TERRAINRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FCPMTER_FCPM_TERRAINRowDeleting As FCPMTER_FCPM_TERRAINRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FCPMTER_FCPM_TERRAINRowDeleted As FCPMTER_FCPM_TERRAINRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddFCPMTER_FCPM_TERRAINRow(ByVal row As FCPMTER_FCPM_TERRAINRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddFCPMTER_FCPM_TERRAINRow(ByVal FCPMTER_FCPM_CODE_FK_PK As Integer, ByVal FCPMTER_CDF_TER_CODE_FK_PK As String, ByVal FCPMTER_NATURE_CIPEMG_PK As String, ByVal FCPMTER_NUMSEQ_PK As Short, ByVal FCPMTER_NUMORD As Short) As FCPMTER_FCPM_TERRAINRow
            Dim rowFCPMTER_FCPM_TERRAINRow As FCPMTER_FCPM_TERRAINRow = CType(Me.NewRow,FCPMTER_FCPM_TERRAINRow)
            Dim columnValuesArray() As Object = New Object() {FCPMTER_FCPM_CODE_FK_PK, FCPMTER_CDF_TER_CODE_FK_PK, FCPMTER_NATURE_CIPEMG_PK, FCPMTER_NUMSEQ_PK, FCPMTER_NUMORD}
            rowFCPMTER_FCPM_TERRAINRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowFCPMTER_FCPM_TERRAINRow)
            Return rowFCPMTER_FCPM_TERRAINRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByFCPMTER_FCPM_CODE_FK_PKFCPMTER_CDF_TER_CODE_FK_PKFCPMTER_NATURE_CIPEMG_PKFCPMTER_NUMSEQ_PK(ByVal FCPMTER_FCPM_CODE_FK_PK As Integer, ByVal FCPMTER_CDF_TER_CODE_FK_PK As String, ByVal FCPMTER_NATURE_CIPEMG_PK As String, ByVal FCPMTER_NUMSEQ_PK As Short) As FCPMTER_FCPM_TERRAINRow
            Return CType(Me.Rows.Find(New Object() {FCPMTER_FCPM_CODE_FK_PK, FCPMTER_CDF_TER_CODE_FK_PK, FCPMTER_NATURE_CIPEMG_PK, FCPMTER_NUMSEQ_PK}),FCPMTER_FCPM_TERRAINRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As FCPMTER_FCPM_TERRAINDataTable = CType(MyBase.Clone,FCPMTER_FCPM_TERRAINDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New FCPMTER_FCPM_TERRAINDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnFCPMTER_FCPM_CODE_FK_PK = MyBase.Columns("FCPMTER_FCPM_CODE_FK_PK")
            Me.columnFCPMTER_CDF_TER_CODE_FK_PK = MyBase.Columns("FCPMTER_CDF_TER_CODE_FK_PK")
            Me.columnFCPMTER_NATURE_CIPEMG_PK = MyBase.Columns("FCPMTER_NATURE_CIPEMG_PK")
            Me.columnFCPMTER_NUMSEQ_PK = MyBase.Columns("FCPMTER_NUMSEQ_PK")
            Me.columnFCPMTER_NUMORD = MyBase.Columns("FCPMTER_NUMORD")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnFCPMTER_FCPM_CODE_FK_PK = New Global.System.Data.DataColumn("FCPMTER_FCPM_CODE_FK_PK", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFCPMTER_FCPM_CODE_FK_PK)
            Me.columnFCPMTER_CDF_TER_CODE_FK_PK = New Global.System.Data.DataColumn("FCPMTER_CDF_TER_CODE_FK_PK", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFCPMTER_CDF_TER_CODE_FK_PK)
            Me.columnFCPMTER_NATURE_CIPEMG_PK = New Global.System.Data.DataColumn("FCPMTER_NATURE_CIPEMG_PK", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFCPMTER_NATURE_CIPEMG_PK)
            Me.columnFCPMTER_NUMSEQ_PK = New Global.System.Data.DataColumn("FCPMTER_NUMSEQ_PK", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFCPMTER_NUMSEQ_PK)
            Me.columnFCPMTER_NUMORD = New Global.System.Data.DataColumn("FCPMTER_NUMORD", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFCPMTER_NUMORD)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnFCPMTER_FCPM_CODE_FK_PK, Me.columnFCPMTER_CDF_TER_CODE_FK_PK, Me.columnFCPMTER_NATURE_CIPEMG_PK, Me.columnFCPMTER_NUMSEQ_PK}, true))
            Me.columnFCPMTER_FCPM_CODE_FK_PK.AllowDBNull = false
            Me.columnFCPMTER_CDF_TER_CODE_FK_PK.AllowDBNull = false
            Me.columnFCPMTER_CDF_TER_CODE_FK_PK.MaxLength = 10
            Me.columnFCPMTER_NATURE_CIPEMG_PK.AllowDBNull = false
            Me.columnFCPMTER_NATURE_CIPEMG_PK.MaxLength = 1
            Me.columnFCPMTER_NUMSEQ_PK.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewFCPMTER_FCPM_TERRAINRow() As FCPMTER_FCPM_TERRAINRow
            Return CType(Me.NewRow,FCPMTER_FCPM_TERRAINRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New FCPMTER_FCPM_TERRAINRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(FCPMTER_FCPM_TERRAINRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.FCPMTER_FCPM_TERRAINRowChangedEvent) Is Nothing) Then
                RaiseEvent FCPMTER_FCPM_TERRAINRowChanged(Me, New FCPMTER_FCPM_TERRAINRowChangeEvent(CType(e.Row,FCPMTER_FCPM_TERRAINRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.FCPMTER_FCPM_TERRAINRowChangingEvent) Is Nothing) Then
                RaiseEvent FCPMTER_FCPM_TERRAINRowChanging(Me, New FCPMTER_FCPM_TERRAINRowChangeEvent(CType(e.Row,FCPMTER_FCPM_TERRAINRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.FCPMTER_FCPM_TERRAINRowDeletedEvent) Is Nothing) Then
                RaiseEvent FCPMTER_FCPM_TERRAINRowDeleted(Me, New FCPMTER_FCPM_TERRAINRowChangeEvent(CType(e.Row,FCPMTER_FCPM_TERRAINRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.FCPMTER_FCPM_TERRAINRowDeletingEvent) Is Nothing) Then
                RaiseEvent FCPMTER_FCPM_TERRAINRowDeleting(Me, New FCPMTER_FCPM_TERRAINRowChangeEvent(CType(e.Row,FCPMTER_FCPM_TERRAINRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveFCPMTER_FCPM_TERRAINRow(ByVal row As FCPMTER_FCPM_TERRAINRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsTheriaque_Cipemg_Code = New dsTheriaque_Cipemg_Code()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "FCPMTER_FCPM_TERRAINDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class TERCOM_TERRAIN_COMMENTAIREDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnTERCOM_FCPM_CODE_FK_PK As Global.System.Data.DataColumn
        
        Private columnTERCOM_CDF_TER_CODE_FK_PK As Global.System.Data.DataColumn
        
        Private columnTERCOM_NUMSEQ_TER_FK_PK As Global.System.Data.DataColumn
        
        Private columnTERCOM_CDF_COM_CODE_FK_PK As Global.System.Data.DataColumn
        
        Private columnTERCOM_NATURE_CIPEMG_FK_PK As Global.System.Data.DataColumn
        
        Private columnTERCOM_NUMSEQ As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "TERCOM_TERRAIN_COMMENTAIRE"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TERCOM_FCPM_CODE_FK_PKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTERCOM_FCPM_CODE_FK_PK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TERCOM_CDF_TER_CODE_FK_PKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTERCOM_CDF_TER_CODE_FK_PK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TERCOM_NUMSEQ_TER_FK_PKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTERCOM_NUMSEQ_TER_FK_PK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TERCOM_CDF_COM_CODE_FK_PKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTERCOM_CDF_COM_CODE_FK_PK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TERCOM_NATURE_CIPEMG_FK_PKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTERCOM_NATURE_CIPEMG_FK_PK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TERCOM_NUMSEQColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTERCOM_NUMSEQ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As TERCOM_TERRAIN_COMMENTAIRERow
            Get
                Return CType(Me.Rows(index),TERCOM_TERRAIN_COMMENTAIRERow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event TERCOM_TERRAIN_COMMENTAIRERowChanging As TERCOM_TERRAIN_COMMENTAIRERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event TERCOM_TERRAIN_COMMENTAIRERowChanged As TERCOM_TERRAIN_COMMENTAIRERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event TERCOM_TERRAIN_COMMENTAIRERowDeleting As TERCOM_TERRAIN_COMMENTAIRERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event TERCOM_TERRAIN_COMMENTAIRERowDeleted As TERCOM_TERRAIN_COMMENTAIRERowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddTERCOM_TERRAIN_COMMENTAIRERow(ByVal row As TERCOM_TERRAIN_COMMENTAIRERow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddTERCOM_TERRAIN_COMMENTAIRERow(ByVal TERCOM_FCPM_CODE_FK_PK As Integer, ByVal TERCOM_CDF_TER_CODE_FK_PK As String, ByVal TERCOM_NUMSEQ_TER_FK_PK As Short, ByVal TERCOM_CDF_COM_CODE_FK_PK As String, ByVal TERCOM_NATURE_CIPEMG_FK_PK As String, ByVal TERCOM_NUMSEQ As Short) As TERCOM_TERRAIN_COMMENTAIRERow
            Dim rowTERCOM_TERRAIN_COMMENTAIRERow As TERCOM_TERRAIN_COMMENTAIRERow = CType(Me.NewRow,TERCOM_TERRAIN_COMMENTAIRERow)
            Dim columnValuesArray() As Object = New Object() {TERCOM_FCPM_CODE_FK_PK, TERCOM_CDF_TER_CODE_FK_PK, TERCOM_NUMSEQ_TER_FK_PK, TERCOM_CDF_COM_CODE_FK_PK, TERCOM_NATURE_CIPEMG_FK_PK, TERCOM_NUMSEQ}
            rowTERCOM_TERRAIN_COMMENTAIRERow.ItemArray = columnValuesArray
            Me.Rows.Add(rowTERCOM_TERRAIN_COMMENTAIRERow)
            Return rowTERCOM_TERRAIN_COMMENTAIRERow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByTERCOM_FCPM_CODE_FK_PKTERCOM_CDF_TER_CODE_FK_PKTERCOM_NUMSEQ_TER_FK_PKTERCOM_CDF_COM_CODE_FK_PKTERCOM_NATURE_CIPEMG_FK_PK(ByVal TERCOM_FCPM_CODE_FK_PK As Integer, ByVal TERCOM_CDF_TER_CODE_FK_PK As String, ByVal TERCOM_NUMSEQ_TER_FK_PK As Short, ByVal TERCOM_CDF_COM_CODE_FK_PK As String, ByVal TERCOM_NATURE_CIPEMG_FK_PK As String) As TERCOM_TERRAIN_COMMENTAIRERow
            Return CType(Me.Rows.Find(New Object() {TERCOM_FCPM_CODE_FK_PK, TERCOM_CDF_TER_CODE_FK_PK, TERCOM_NUMSEQ_TER_FK_PK, TERCOM_CDF_COM_CODE_FK_PK, TERCOM_NATURE_CIPEMG_FK_PK}),TERCOM_TERRAIN_COMMENTAIRERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As TERCOM_TERRAIN_COMMENTAIREDataTable = CType(MyBase.Clone,TERCOM_TERRAIN_COMMENTAIREDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New TERCOM_TERRAIN_COMMENTAIREDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnTERCOM_FCPM_CODE_FK_PK = MyBase.Columns("TERCOM_FCPM_CODE_FK_PK")
            Me.columnTERCOM_CDF_TER_CODE_FK_PK = MyBase.Columns("TERCOM_CDF_TER_CODE_FK_PK")
            Me.columnTERCOM_NUMSEQ_TER_FK_PK = MyBase.Columns("TERCOM_NUMSEQ_TER_FK_PK")
            Me.columnTERCOM_CDF_COM_CODE_FK_PK = MyBase.Columns("TERCOM_CDF_COM_CODE_FK_PK")
            Me.columnTERCOM_NATURE_CIPEMG_FK_PK = MyBase.Columns("TERCOM_NATURE_CIPEMG_FK_PK")
            Me.columnTERCOM_NUMSEQ = MyBase.Columns("TERCOM_NUMSEQ")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnTERCOM_FCPM_CODE_FK_PK = New Global.System.Data.DataColumn("TERCOM_FCPM_CODE_FK_PK", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTERCOM_FCPM_CODE_FK_PK)
            Me.columnTERCOM_CDF_TER_CODE_FK_PK = New Global.System.Data.DataColumn("TERCOM_CDF_TER_CODE_FK_PK", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTERCOM_CDF_TER_CODE_FK_PK)
            Me.columnTERCOM_NUMSEQ_TER_FK_PK = New Global.System.Data.DataColumn("TERCOM_NUMSEQ_TER_FK_PK", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTERCOM_NUMSEQ_TER_FK_PK)
            Me.columnTERCOM_CDF_COM_CODE_FK_PK = New Global.System.Data.DataColumn("TERCOM_CDF_COM_CODE_FK_PK", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTERCOM_CDF_COM_CODE_FK_PK)
            Me.columnTERCOM_NATURE_CIPEMG_FK_PK = New Global.System.Data.DataColumn("TERCOM_NATURE_CIPEMG_FK_PK", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTERCOM_NATURE_CIPEMG_FK_PK)
            Me.columnTERCOM_NUMSEQ = New Global.System.Data.DataColumn("TERCOM_NUMSEQ", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTERCOM_NUMSEQ)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnTERCOM_FCPM_CODE_FK_PK, Me.columnTERCOM_CDF_TER_CODE_FK_PK, Me.columnTERCOM_NUMSEQ_TER_FK_PK, Me.columnTERCOM_CDF_COM_CODE_FK_PK, Me.columnTERCOM_NATURE_CIPEMG_FK_PK}, true))
            Me.columnTERCOM_FCPM_CODE_FK_PK.AllowDBNull = false
            Me.columnTERCOM_CDF_TER_CODE_FK_PK.AllowDBNull = false
            Me.columnTERCOM_CDF_TER_CODE_FK_PK.MaxLength = 10
            Me.columnTERCOM_NUMSEQ_TER_FK_PK.AllowDBNull = false
            Me.columnTERCOM_CDF_COM_CODE_FK_PK.AllowDBNull = false
            Me.columnTERCOM_CDF_COM_CODE_FK_PK.MaxLength = 10
            Me.columnTERCOM_NATURE_CIPEMG_FK_PK.AllowDBNull = false
            Me.columnTERCOM_NATURE_CIPEMG_FK_PK.MaxLength = 1
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewTERCOM_TERRAIN_COMMENTAIRERow() As TERCOM_TERRAIN_COMMENTAIRERow
            Return CType(Me.NewRow,TERCOM_TERRAIN_COMMENTAIRERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New TERCOM_TERRAIN_COMMENTAIRERow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(TERCOM_TERRAIN_COMMENTAIRERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.TERCOM_TERRAIN_COMMENTAIRERowChangedEvent) Is Nothing) Then
                RaiseEvent TERCOM_TERRAIN_COMMENTAIRERowChanged(Me, New TERCOM_TERRAIN_COMMENTAIRERowChangeEvent(CType(e.Row,TERCOM_TERRAIN_COMMENTAIRERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.TERCOM_TERRAIN_COMMENTAIRERowChangingEvent) Is Nothing) Then
                RaiseEvent TERCOM_TERRAIN_COMMENTAIRERowChanging(Me, New TERCOM_TERRAIN_COMMENTAIRERowChangeEvent(CType(e.Row,TERCOM_TERRAIN_COMMENTAIRERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.TERCOM_TERRAIN_COMMENTAIRERowDeletedEvent) Is Nothing) Then
                RaiseEvent TERCOM_TERRAIN_COMMENTAIRERowDeleted(Me, New TERCOM_TERRAIN_COMMENTAIRERowChangeEvent(CType(e.Row,TERCOM_TERRAIN_COMMENTAIRERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.TERCOM_TERRAIN_COMMENTAIRERowDeletingEvent) Is Nothing) Then
                RaiseEvent TERCOM_TERRAIN_COMMENTAIRERowDeleting(Me, New TERCOM_TERRAIN_COMMENTAIRERowChangeEvent(CType(e.Row,TERCOM_TERRAIN_COMMENTAIRERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveTERCOM_TERRAIN_COMMENTAIRERow(ByVal row As TERCOM_TERRAIN_COMMENTAIRERow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsTheriaque_Cipemg_Code = New dsTheriaque_Cipemg_Code()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "TERCOM_TERRAIN_COMMENTAIREDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class NIVCOM_NIVEAU_COMMENTAIREDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnNIVCOM_FCPM_CODE_FK_PK As Global.System.Data.DataColumn
        
        Private columnNIVCOM_CDF_TER_CODE_FK_PK As Global.System.Data.DataColumn
        
        Private columnNIVCOM_NUMSEQ_TER_FK_PK As Global.System.Data.DataColumn
        
        Private columnNIVCOM_CDF_COM_CODE_FK_PK As Global.System.Data.DataColumn
        
        Private columnNIVCOM_NATURE_CIPEMG_FK_PK As Global.System.Data.DataColumn
        
        Private columnNIVCOM_NUMSEQ As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "NIVCOM_NIVEAU_COMMENTAIRE"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NIVCOM_FCPM_CODE_FK_PKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNIVCOM_FCPM_CODE_FK_PK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NIVCOM_CDF_TER_CODE_FK_PKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNIVCOM_CDF_TER_CODE_FK_PK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NIVCOM_NUMSEQ_TER_FK_PKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNIVCOM_NUMSEQ_TER_FK_PK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NIVCOM_CDF_COM_CODE_FK_PKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNIVCOM_CDF_COM_CODE_FK_PK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NIVCOM_NATURE_CIPEMG_FK_PKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNIVCOM_NATURE_CIPEMG_FK_PK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NIVCOM_NUMSEQColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNIVCOM_NUMSEQ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As NIVCOM_NIVEAU_COMMENTAIRERow
            Get
                Return CType(Me.Rows(index),NIVCOM_NIVEAU_COMMENTAIRERow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event NIVCOM_NIVEAU_COMMENTAIRERowChanging As NIVCOM_NIVEAU_COMMENTAIRERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event NIVCOM_NIVEAU_COMMENTAIRERowChanged As NIVCOM_NIVEAU_COMMENTAIRERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event NIVCOM_NIVEAU_COMMENTAIRERowDeleting As NIVCOM_NIVEAU_COMMENTAIRERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event NIVCOM_NIVEAU_COMMENTAIRERowDeleted As NIVCOM_NIVEAU_COMMENTAIRERowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddNIVCOM_NIVEAU_COMMENTAIRERow(ByVal row As NIVCOM_NIVEAU_COMMENTAIRERow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddNIVCOM_NIVEAU_COMMENTAIRERow(ByVal NIVCOM_FCPM_CODE_FK_PK As Integer, ByVal NIVCOM_CDF_TER_CODE_FK_PK As String, ByVal NIVCOM_NUMSEQ_TER_FK_PK As Short, ByVal NIVCOM_CDF_COM_CODE_FK_PK As String, ByVal NIVCOM_NATURE_CIPEMG_FK_PK As String, ByVal NIVCOM_NUMSEQ As Short) As NIVCOM_NIVEAU_COMMENTAIRERow
            Dim rowNIVCOM_NIVEAU_COMMENTAIRERow As NIVCOM_NIVEAU_COMMENTAIRERow = CType(Me.NewRow,NIVCOM_NIVEAU_COMMENTAIRERow)
            Dim columnValuesArray() As Object = New Object() {NIVCOM_FCPM_CODE_FK_PK, NIVCOM_CDF_TER_CODE_FK_PK, NIVCOM_NUMSEQ_TER_FK_PK, NIVCOM_CDF_COM_CODE_FK_PK, NIVCOM_NATURE_CIPEMG_FK_PK, NIVCOM_NUMSEQ}
            rowNIVCOM_NIVEAU_COMMENTAIRERow.ItemArray = columnValuesArray
            Me.Rows.Add(rowNIVCOM_NIVEAU_COMMENTAIRERow)
            Return rowNIVCOM_NIVEAU_COMMENTAIRERow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByNIVCOM_FCPM_CODE_FK_PKNIVCOM_CDF_TER_CODE_FK_PKNIVCOM_NUMSEQ_TER_FK_PKNIVCOM_CDF_COM_CODE_FK_PKNIVCOM_NATURE_CIPEMG_FK_PK(ByVal NIVCOM_FCPM_CODE_FK_PK As Integer, ByVal NIVCOM_CDF_TER_CODE_FK_PK As String, ByVal NIVCOM_NUMSEQ_TER_FK_PK As Short, ByVal NIVCOM_CDF_COM_CODE_FK_PK As String, ByVal NIVCOM_NATURE_CIPEMG_FK_PK As String) As NIVCOM_NIVEAU_COMMENTAIRERow
            Return CType(Me.Rows.Find(New Object() {NIVCOM_FCPM_CODE_FK_PK, NIVCOM_CDF_TER_CODE_FK_PK, NIVCOM_NUMSEQ_TER_FK_PK, NIVCOM_CDF_COM_CODE_FK_PK, NIVCOM_NATURE_CIPEMG_FK_PK}),NIVCOM_NIVEAU_COMMENTAIRERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As NIVCOM_NIVEAU_COMMENTAIREDataTable = CType(MyBase.Clone,NIVCOM_NIVEAU_COMMENTAIREDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New NIVCOM_NIVEAU_COMMENTAIREDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnNIVCOM_FCPM_CODE_FK_PK = MyBase.Columns("NIVCOM_FCPM_CODE_FK_PK")
            Me.columnNIVCOM_CDF_TER_CODE_FK_PK = MyBase.Columns("NIVCOM_CDF_TER_CODE_FK_PK")
            Me.columnNIVCOM_NUMSEQ_TER_FK_PK = MyBase.Columns("NIVCOM_NUMSEQ_TER_FK_PK")
            Me.columnNIVCOM_CDF_COM_CODE_FK_PK = MyBase.Columns("NIVCOM_CDF_COM_CODE_FK_PK")
            Me.columnNIVCOM_NATURE_CIPEMG_FK_PK = MyBase.Columns("NIVCOM_NATURE_CIPEMG_FK_PK")
            Me.columnNIVCOM_NUMSEQ = MyBase.Columns("NIVCOM_NUMSEQ")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnNIVCOM_FCPM_CODE_FK_PK = New Global.System.Data.DataColumn("NIVCOM_FCPM_CODE_FK_PK", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNIVCOM_FCPM_CODE_FK_PK)
            Me.columnNIVCOM_CDF_TER_CODE_FK_PK = New Global.System.Data.DataColumn("NIVCOM_CDF_TER_CODE_FK_PK", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNIVCOM_CDF_TER_CODE_FK_PK)
            Me.columnNIVCOM_NUMSEQ_TER_FK_PK = New Global.System.Data.DataColumn("NIVCOM_NUMSEQ_TER_FK_PK", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNIVCOM_NUMSEQ_TER_FK_PK)
            Me.columnNIVCOM_CDF_COM_CODE_FK_PK = New Global.System.Data.DataColumn("NIVCOM_CDF_COM_CODE_FK_PK", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNIVCOM_CDF_COM_CODE_FK_PK)
            Me.columnNIVCOM_NATURE_CIPEMG_FK_PK = New Global.System.Data.DataColumn("NIVCOM_NATURE_CIPEMG_FK_PK", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNIVCOM_NATURE_CIPEMG_FK_PK)
            Me.columnNIVCOM_NUMSEQ = New Global.System.Data.DataColumn("NIVCOM_NUMSEQ", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNIVCOM_NUMSEQ)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnNIVCOM_FCPM_CODE_FK_PK, Me.columnNIVCOM_CDF_TER_CODE_FK_PK, Me.columnNIVCOM_NUMSEQ_TER_FK_PK, Me.columnNIVCOM_CDF_COM_CODE_FK_PK, Me.columnNIVCOM_NATURE_CIPEMG_FK_PK}, true))
            Me.columnNIVCOM_FCPM_CODE_FK_PK.AllowDBNull = false
            Me.columnNIVCOM_CDF_TER_CODE_FK_PK.AllowDBNull = false
            Me.columnNIVCOM_CDF_TER_CODE_FK_PK.MaxLength = 10
            Me.columnNIVCOM_NUMSEQ_TER_FK_PK.AllowDBNull = false
            Me.columnNIVCOM_CDF_COM_CODE_FK_PK.AllowDBNull = false
            Me.columnNIVCOM_CDF_COM_CODE_FK_PK.MaxLength = 10
            Me.columnNIVCOM_NATURE_CIPEMG_FK_PK.AllowDBNull = false
            Me.columnNIVCOM_NATURE_CIPEMG_FK_PK.MaxLength = 1
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewNIVCOM_NIVEAU_COMMENTAIRERow() As NIVCOM_NIVEAU_COMMENTAIRERow
            Return CType(Me.NewRow,NIVCOM_NIVEAU_COMMENTAIRERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New NIVCOM_NIVEAU_COMMENTAIRERow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(NIVCOM_NIVEAU_COMMENTAIRERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.NIVCOM_NIVEAU_COMMENTAIRERowChangedEvent) Is Nothing) Then
                RaiseEvent NIVCOM_NIVEAU_COMMENTAIRERowChanged(Me, New NIVCOM_NIVEAU_COMMENTAIRERowChangeEvent(CType(e.Row,NIVCOM_NIVEAU_COMMENTAIRERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.NIVCOM_NIVEAU_COMMENTAIRERowChangingEvent) Is Nothing) Then
                RaiseEvent NIVCOM_NIVEAU_COMMENTAIRERowChanging(Me, New NIVCOM_NIVEAU_COMMENTAIRERowChangeEvent(CType(e.Row,NIVCOM_NIVEAU_COMMENTAIRERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.NIVCOM_NIVEAU_COMMENTAIRERowDeletedEvent) Is Nothing) Then
                RaiseEvent NIVCOM_NIVEAU_COMMENTAIRERowDeleted(Me, New NIVCOM_NIVEAU_COMMENTAIRERowChangeEvent(CType(e.Row,NIVCOM_NIVEAU_COMMENTAIRERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.NIVCOM_NIVEAU_COMMENTAIRERowDeletingEvent) Is Nothing) Then
                RaiseEvent NIVCOM_NIVEAU_COMMENTAIRERowDeleting(Me, New NIVCOM_NIVEAU_COMMENTAIRERowChangeEvent(CType(e.Row,NIVCOM_NIVEAU_COMMENTAIRERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveNIVCOM_NIVEAU_COMMENTAIRERow(ByVal row As NIVCOM_NIVEAU_COMMENTAIRERow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsTheriaque_Cipemg_Code = New dsTheriaque_Cipemg_Code()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "NIVCOM_NIVEAU_COMMENTAIREDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class AUTCOM_AUTRE_COMMENTAIREDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnAUTCOM_FCPM_CODE_FK_PK As Global.System.Data.DataColumn
        
        Private columnAUTCOM_CDF_TER_CODE_FK_PK As Global.System.Data.DataColumn
        
        Private columnAUTCOM_NUMSEQ_TER_FK_PK As Global.System.Data.DataColumn
        
        Private columnAUTCOM_CDF_COM_CODE_FK_PK As Global.System.Data.DataColumn
        
        Private columnAUTCOM_NATURE_CIPEMG_FK_PK As Global.System.Data.DataColumn
        
        Private columnAUTCOM_NUMSEQ As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "AUTCOM_AUTRE_COMMENTAIRE"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AUTCOM_FCPM_CODE_FK_PKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUTCOM_FCPM_CODE_FK_PK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AUTCOM_CDF_TER_CODE_FK_PKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUTCOM_CDF_TER_CODE_FK_PK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AUTCOM_NUMSEQ_TER_FK_PKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUTCOM_NUMSEQ_TER_FK_PK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AUTCOM_CDF_COM_CODE_FK_PKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUTCOM_CDF_COM_CODE_FK_PK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AUTCOM_NATURE_CIPEMG_FK_PKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUTCOM_NATURE_CIPEMG_FK_PK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AUTCOM_NUMSEQColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUTCOM_NUMSEQ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As AUTCOM_AUTRE_COMMENTAIRERow
            Get
                Return CType(Me.Rows(index),AUTCOM_AUTRE_COMMENTAIRERow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event AUTCOM_AUTRE_COMMENTAIRERowChanging As AUTCOM_AUTRE_COMMENTAIRERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event AUTCOM_AUTRE_COMMENTAIRERowChanged As AUTCOM_AUTRE_COMMENTAIRERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event AUTCOM_AUTRE_COMMENTAIRERowDeleting As AUTCOM_AUTRE_COMMENTAIRERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event AUTCOM_AUTRE_COMMENTAIRERowDeleted As AUTCOM_AUTRE_COMMENTAIRERowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddAUTCOM_AUTRE_COMMENTAIRERow(ByVal row As AUTCOM_AUTRE_COMMENTAIRERow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddAUTCOM_AUTRE_COMMENTAIRERow(ByVal AUTCOM_FCPM_CODE_FK_PK As Integer, ByVal AUTCOM_CDF_TER_CODE_FK_PK As String, ByVal AUTCOM_NUMSEQ_TER_FK_PK As Short, ByVal AUTCOM_CDF_COM_CODE_FK_PK As String, ByVal AUTCOM_NATURE_CIPEMG_FK_PK As String, ByVal AUTCOM_NUMSEQ As Short) As AUTCOM_AUTRE_COMMENTAIRERow
            Dim rowAUTCOM_AUTRE_COMMENTAIRERow As AUTCOM_AUTRE_COMMENTAIRERow = CType(Me.NewRow,AUTCOM_AUTRE_COMMENTAIRERow)
            Dim columnValuesArray() As Object = New Object() {AUTCOM_FCPM_CODE_FK_PK, AUTCOM_CDF_TER_CODE_FK_PK, AUTCOM_NUMSEQ_TER_FK_PK, AUTCOM_CDF_COM_CODE_FK_PK, AUTCOM_NATURE_CIPEMG_FK_PK, AUTCOM_NUMSEQ}
            rowAUTCOM_AUTRE_COMMENTAIRERow.ItemArray = columnValuesArray
            Me.Rows.Add(rowAUTCOM_AUTRE_COMMENTAIRERow)
            Return rowAUTCOM_AUTRE_COMMENTAIRERow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByAUTCOM_FCPM_CODE_FK_PKAUTCOM_CDF_TER_CODE_FK_PKAUTCOM_NUMSEQ_TER_FK_PKAUTCOM_CDF_COM_CODE_FK_PKAUTCOM_NATURE_CIPEMG_FK_PK(ByVal AUTCOM_FCPM_CODE_FK_PK As Integer, ByVal AUTCOM_CDF_TER_CODE_FK_PK As String, ByVal AUTCOM_NUMSEQ_TER_FK_PK As Short, ByVal AUTCOM_CDF_COM_CODE_FK_PK As String, ByVal AUTCOM_NATURE_CIPEMG_FK_PK As String) As AUTCOM_AUTRE_COMMENTAIRERow
            Return CType(Me.Rows.Find(New Object() {AUTCOM_FCPM_CODE_FK_PK, AUTCOM_CDF_TER_CODE_FK_PK, AUTCOM_NUMSEQ_TER_FK_PK, AUTCOM_CDF_COM_CODE_FK_PK, AUTCOM_NATURE_CIPEMG_FK_PK}),AUTCOM_AUTRE_COMMENTAIRERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As AUTCOM_AUTRE_COMMENTAIREDataTable = CType(MyBase.Clone,AUTCOM_AUTRE_COMMENTAIREDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New AUTCOM_AUTRE_COMMENTAIREDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnAUTCOM_FCPM_CODE_FK_PK = MyBase.Columns("AUTCOM_FCPM_CODE_FK_PK")
            Me.columnAUTCOM_CDF_TER_CODE_FK_PK = MyBase.Columns("AUTCOM_CDF_TER_CODE_FK_PK")
            Me.columnAUTCOM_NUMSEQ_TER_FK_PK = MyBase.Columns("AUTCOM_NUMSEQ_TER_FK_PK")
            Me.columnAUTCOM_CDF_COM_CODE_FK_PK = MyBase.Columns("AUTCOM_CDF_COM_CODE_FK_PK")
            Me.columnAUTCOM_NATURE_CIPEMG_FK_PK = MyBase.Columns("AUTCOM_NATURE_CIPEMG_FK_PK")
            Me.columnAUTCOM_NUMSEQ = MyBase.Columns("AUTCOM_NUMSEQ")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnAUTCOM_FCPM_CODE_FK_PK = New Global.System.Data.DataColumn("AUTCOM_FCPM_CODE_FK_PK", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUTCOM_FCPM_CODE_FK_PK)
            Me.columnAUTCOM_CDF_TER_CODE_FK_PK = New Global.System.Data.DataColumn("AUTCOM_CDF_TER_CODE_FK_PK", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUTCOM_CDF_TER_CODE_FK_PK)
            Me.columnAUTCOM_NUMSEQ_TER_FK_PK = New Global.System.Data.DataColumn("AUTCOM_NUMSEQ_TER_FK_PK", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUTCOM_NUMSEQ_TER_FK_PK)
            Me.columnAUTCOM_CDF_COM_CODE_FK_PK = New Global.System.Data.DataColumn("AUTCOM_CDF_COM_CODE_FK_PK", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUTCOM_CDF_COM_CODE_FK_PK)
            Me.columnAUTCOM_NATURE_CIPEMG_FK_PK = New Global.System.Data.DataColumn("AUTCOM_NATURE_CIPEMG_FK_PK", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUTCOM_NATURE_CIPEMG_FK_PK)
            Me.columnAUTCOM_NUMSEQ = New Global.System.Data.DataColumn("AUTCOM_NUMSEQ", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUTCOM_NUMSEQ)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnAUTCOM_FCPM_CODE_FK_PK, Me.columnAUTCOM_CDF_TER_CODE_FK_PK, Me.columnAUTCOM_NUMSEQ_TER_FK_PK, Me.columnAUTCOM_CDF_COM_CODE_FK_PK, Me.columnAUTCOM_NATURE_CIPEMG_FK_PK}, true))
            Me.columnAUTCOM_FCPM_CODE_FK_PK.AllowDBNull = false
            Me.columnAUTCOM_CDF_TER_CODE_FK_PK.AllowDBNull = false
            Me.columnAUTCOM_CDF_TER_CODE_FK_PK.MaxLength = 10
            Me.columnAUTCOM_NUMSEQ_TER_FK_PK.AllowDBNull = false
            Me.columnAUTCOM_CDF_COM_CODE_FK_PK.AllowDBNull = false
            Me.columnAUTCOM_CDF_COM_CODE_FK_PK.MaxLength = 10
            Me.columnAUTCOM_NATURE_CIPEMG_FK_PK.AllowDBNull = false
            Me.columnAUTCOM_NATURE_CIPEMG_FK_PK.MaxLength = 1
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewAUTCOM_AUTRE_COMMENTAIRERow() As AUTCOM_AUTRE_COMMENTAIRERow
            Return CType(Me.NewRow,AUTCOM_AUTRE_COMMENTAIRERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New AUTCOM_AUTRE_COMMENTAIRERow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(AUTCOM_AUTRE_COMMENTAIRERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.AUTCOM_AUTRE_COMMENTAIRERowChangedEvent) Is Nothing) Then
                RaiseEvent AUTCOM_AUTRE_COMMENTAIRERowChanged(Me, New AUTCOM_AUTRE_COMMENTAIRERowChangeEvent(CType(e.Row,AUTCOM_AUTRE_COMMENTAIRERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.AUTCOM_AUTRE_COMMENTAIRERowChangingEvent) Is Nothing) Then
                RaiseEvent AUTCOM_AUTRE_COMMENTAIRERowChanging(Me, New AUTCOM_AUTRE_COMMENTAIRERowChangeEvent(CType(e.Row,AUTCOM_AUTRE_COMMENTAIRERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.AUTCOM_AUTRE_COMMENTAIRERowDeletedEvent) Is Nothing) Then
                RaiseEvent AUTCOM_AUTRE_COMMENTAIRERowDeleted(Me, New AUTCOM_AUTRE_COMMENTAIRERowChangeEvent(CType(e.Row,AUTCOM_AUTRE_COMMENTAIRERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.AUTCOM_AUTRE_COMMENTAIRERowDeletingEvent) Is Nothing) Then
                RaiseEvent AUTCOM_AUTRE_COMMENTAIRERowDeleting(Me, New AUTCOM_AUTRE_COMMENTAIRERowChangeEvent(CType(e.Row,AUTCOM_AUTRE_COMMENTAIRERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveAUTCOM_AUTRE_COMMENTAIRERow(ByVal row As AUTCOM_AUTRE_COMMENTAIRERow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsTheriaque_Cipemg_Code = New dsTheriaque_Cipemg_Code()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "AUTCOM_AUTRE_COMMENTAIREDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class FCPMTX_FICHECIPEMG_TEXTEDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnFCPMTX_FCPM_CODE_FK_PK As Global.System.Data.DataColumn
        
        Private columnFCPMTX_CDF_TER_CODE_FK_PK As Global.System.Data.DataColumn
        
        Private columnFCPMTX_NUMSEQ_TER_FK_PK As Global.System.Data.DataColumn
        
        Private columnFCPMTX_NATURECIPEMG_FK_PK As Global.System.Data.DataColumn
        
        Private columnFCPMTX_TEXTE As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "FCPMTX_FICHECIPEMG_TEXTE"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FCPMTX_FCPM_CODE_FK_PKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFCPMTX_FCPM_CODE_FK_PK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FCPMTX_CDF_TER_CODE_FK_PKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFCPMTX_CDF_TER_CODE_FK_PK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FCPMTX_NUMSEQ_TER_FK_PKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFCPMTX_NUMSEQ_TER_FK_PK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FCPMTX_NATURECIPEMG_FK_PKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFCPMTX_NATURECIPEMG_FK_PK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FCPMTX_TEXTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFCPMTX_TEXTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As FCPMTX_FICHECIPEMG_TEXTERow
            Get
                Return CType(Me.Rows(index),FCPMTX_FICHECIPEMG_TEXTERow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FCPMTX_FICHECIPEMG_TEXTERowChanging As FCPMTX_FICHECIPEMG_TEXTERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FCPMTX_FICHECIPEMG_TEXTERowChanged As FCPMTX_FICHECIPEMG_TEXTERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FCPMTX_FICHECIPEMG_TEXTERowDeleting As FCPMTX_FICHECIPEMG_TEXTERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FCPMTX_FICHECIPEMG_TEXTERowDeleted As FCPMTX_FICHECIPEMG_TEXTERowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddFCPMTX_FICHECIPEMG_TEXTERow(ByVal row As FCPMTX_FICHECIPEMG_TEXTERow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddFCPMTX_FICHECIPEMG_TEXTERow(ByVal FCPMTX_FCPM_CODE_FK_PK As Integer, ByVal FCPMTX_CDF_TER_CODE_FK_PK As String, ByVal FCPMTX_NUMSEQ_TER_FK_PK As Short, ByVal FCPMTX_NATURECIPEMG_FK_PK As String, ByVal FCPMTX_TEXTE As String) As FCPMTX_FICHECIPEMG_TEXTERow
            Dim rowFCPMTX_FICHECIPEMG_TEXTERow As FCPMTX_FICHECIPEMG_TEXTERow = CType(Me.NewRow,FCPMTX_FICHECIPEMG_TEXTERow)
            Dim columnValuesArray() As Object = New Object() {FCPMTX_FCPM_CODE_FK_PK, FCPMTX_CDF_TER_CODE_FK_PK, FCPMTX_NUMSEQ_TER_FK_PK, FCPMTX_NATURECIPEMG_FK_PK, FCPMTX_TEXTE}
            rowFCPMTX_FICHECIPEMG_TEXTERow.ItemArray = columnValuesArray
            Me.Rows.Add(rowFCPMTX_FICHECIPEMG_TEXTERow)
            Return rowFCPMTX_FICHECIPEMG_TEXTERow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByFCPMTX_FCPM_CODE_FK_PKFCPMTX_CDF_TER_CODE_FK_PKFCPMTX_NUMSEQ_TER_FK_PKFCPMTX_NATURECIPEMG_FK_PK(ByVal FCPMTX_FCPM_CODE_FK_PK As Integer, ByVal FCPMTX_CDF_TER_CODE_FK_PK As String, ByVal FCPMTX_NUMSEQ_TER_FK_PK As Short, ByVal FCPMTX_NATURECIPEMG_FK_PK As String) As FCPMTX_FICHECIPEMG_TEXTERow
            Return CType(Me.Rows.Find(New Object() {FCPMTX_FCPM_CODE_FK_PK, FCPMTX_CDF_TER_CODE_FK_PK, FCPMTX_NUMSEQ_TER_FK_PK, FCPMTX_NATURECIPEMG_FK_PK}),FCPMTX_FICHECIPEMG_TEXTERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As FCPMTX_FICHECIPEMG_TEXTEDataTable = CType(MyBase.Clone,FCPMTX_FICHECIPEMG_TEXTEDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New FCPMTX_FICHECIPEMG_TEXTEDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnFCPMTX_FCPM_CODE_FK_PK = MyBase.Columns("FCPMTX_FCPM_CODE_FK_PK")
            Me.columnFCPMTX_CDF_TER_CODE_FK_PK = MyBase.Columns("FCPMTX_CDF_TER_CODE_FK_PK")
            Me.columnFCPMTX_NUMSEQ_TER_FK_PK = MyBase.Columns("FCPMTX_NUMSEQ_TER_FK_PK")
            Me.columnFCPMTX_NATURECIPEMG_FK_PK = MyBase.Columns("FCPMTX_NATURECIPEMG_FK_PK")
            Me.columnFCPMTX_TEXTE = MyBase.Columns("FCPMTX_TEXTE")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnFCPMTX_FCPM_CODE_FK_PK = New Global.System.Data.DataColumn("FCPMTX_FCPM_CODE_FK_PK", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFCPMTX_FCPM_CODE_FK_PK)
            Me.columnFCPMTX_CDF_TER_CODE_FK_PK = New Global.System.Data.DataColumn("FCPMTX_CDF_TER_CODE_FK_PK", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFCPMTX_CDF_TER_CODE_FK_PK)
            Me.columnFCPMTX_NUMSEQ_TER_FK_PK = New Global.System.Data.DataColumn("FCPMTX_NUMSEQ_TER_FK_PK", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFCPMTX_NUMSEQ_TER_FK_PK)
            Me.columnFCPMTX_NATURECIPEMG_FK_PK = New Global.System.Data.DataColumn("FCPMTX_NATURECIPEMG_FK_PK", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFCPMTX_NATURECIPEMG_FK_PK)
            Me.columnFCPMTX_TEXTE = New Global.System.Data.DataColumn("FCPMTX_TEXTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFCPMTX_TEXTE)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnFCPMTX_FCPM_CODE_FK_PK, Me.columnFCPMTX_CDF_TER_CODE_FK_PK, Me.columnFCPMTX_NUMSEQ_TER_FK_PK, Me.columnFCPMTX_NATURECIPEMG_FK_PK}, true))
            Me.columnFCPMTX_FCPM_CODE_FK_PK.AllowDBNull = false
            Me.columnFCPMTX_CDF_TER_CODE_FK_PK.AllowDBNull = false
            Me.columnFCPMTX_CDF_TER_CODE_FK_PK.MaxLength = 10
            Me.columnFCPMTX_NUMSEQ_TER_FK_PK.AllowDBNull = false
            Me.columnFCPMTX_NATURECIPEMG_FK_PK.AllowDBNull = false
            Me.columnFCPMTX_NATURECIPEMG_FK_PK.MaxLength = 1
            Me.columnFCPMTX_TEXTE.AllowDBNull = false
            Me.columnFCPMTX_TEXTE.MaxLength = 2147483647
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewFCPMTX_FICHECIPEMG_TEXTERow() As FCPMTX_FICHECIPEMG_TEXTERow
            Return CType(Me.NewRow,FCPMTX_FICHECIPEMG_TEXTERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New FCPMTX_FICHECIPEMG_TEXTERow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(FCPMTX_FICHECIPEMG_TEXTERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.FCPMTX_FICHECIPEMG_TEXTERowChangedEvent) Is Nothing) Then
                RaiseEvent FCPMTX_FICHECIPEMG_TEXTERowChanged(Me, New FCPMTX_FICHECIPEMG_TEXTERowChangeEvent(CType(e.Row,FCPMTX_FICHECIPEMG_TEXTERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.FCPMTX_FICHECIPEMG_TEXTERowChangingEvent) Is Nothing) Then
                RaiseEvent FCPMTX_FICHECIPEMG_TEXTERowChanging(Me, New FCPMTX_FICHECIPEMG_TEXTERowChangeEvent(CType(e.Row,FCPMTX_FICHECIPEMG_TEXTERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.FCPMTX_FICHECIPEMG_TEXTERowDeletedEvent) Is Nothing) Then
                RaiseEvent FCPMTX_FICHECIPEMG_TEXTERowDeleted(Me, New FCPMTX_FICHECIPEMG_TEXTERowChangeEvent(CType(e.Row,FCPMTX_FICHECIPEMG_TEXTERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.FCPMTX_FICHECIPEMG_TEXTERowDeletingEvent) Is Nothing) Then
                RaiseEvent FCPMTX_FICHECIPEMG_TEXTERowDeleting(Me, New FCPMTX_FICHECIPEMG_TEXTERowChangeEvent(CType(e.Row,FCPMTX_FICHECIPEMG_TEXTERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveFCPMTX_FICHECIPEMG_TEXTERow(ByVal row As FCPMTX_FICHECIPEMG_TEXTERow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsTheriaque_Cipemg_Code = New dsTheriaque_Cipemg_Code()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "FCPMTX_FICHECIPEMG_TEXTEDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class FCPMAFS_CIPEMG_AFSSAPSDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnFCPMAFS_FCPM_CODE_FK_PK As Global.System.Data.DataColumn
        
        Private columnFCPMAFS_SP_CODE_FK_PK As Global.System.Data.DataColumn
        
        Private columnFCPMAFS_DATE_PK As Global.System.Data.DataColumn
        
        Private columnFCPMAFS_CDF_DOCUMENT_FK_PK As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "FCPMAFS_CIPEMG_AFSSAPS"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FCPMAFS_FCPM_CODE_FK_PKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFCPMAFS_FCPM_CODE_FK_PK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FCPMAFS_SP_CODE_FK_PKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFCPMAFS_SP_CODE_FK_PK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FCPMAFS_DATE_PKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFCPMAFS_DATE_PK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FCPMAFS_CDF_DOCUMENT_FK_PKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFCPMAFS_CDF_DOCUMENT_FK_PK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As FCPMAFS_CIPEMG_AFSSAPSRow
            Get
                Return CType(Me.Rows(index),FCPMAFS_CIPEMG_AFSSAPSRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FCPMAFS_CIPEMG_AFSSAPSRowChanging As FCPMAFS_CIPEMG_AFSSAPSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FCPMAFS_CIPEMG_AFSSAPSRowChanged As FCPMAFS_CIPEMG_AFSSAPSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FCPMAFS_CIPEMG_AFSSAPSRowDeleting As FCPMAFS_CIPEMG_AFSSAPSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FCPMAFS_CIPEMG_AFSSAPSRowDeleted As FCPMAFS_CIPEMG_AFSSAPSRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddFCPMAFS_CIPEMG_AFSSAPSRow(ByVal row As FCPMAFS_CIPEMG_AFSSAPSRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddFCPMAFS_CIPEMG_AFSSAPSRow(ByVal FCPMAFS_FCPM_CODE_FK_PK As Integer, ByVal FCPMAFS_SP_CODE_FK_PK As Integer, ByVal FCPMAFS_DATE_PK As Date, ByVal FCPMAFS_CDF_DOCUMENT_FK_PK As String) As FCPMAFS_CIPEMG_AFSSAPSRow
            Dim rowFCPMAFS_CIPEMG_AFSSAPSRow As FCPMAFS_CIPEMG_AFSSAPSRow = CType(Me.NewRow,FCPMAFS_CIPEMG_AFSSAPSRow)
            Dim columnValuesArray() As Object = New Object() {FCPMAFS_FCPM_CODE_FK_PK, FCPMAFS_SP_CODE_FK_PK, FCPMAFS_DATE_PK, FCPMAFS_CDF_DOCUMENT_FK_PK}
            rowFCPMAFS_CIPEMG_AFSSAPSRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowFCPMAFS_CIPEMG_AFSSAPSRow)
            Return rowFCPMAFS_CIPEMG_AFSSAPSRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByFCPMAFS_FCPM_CODE_FK_PKFCPMAFS_SP_CODE_FK_PKFCPMAFS_DATE_PKFCPMAFS_CDF_DOCUMENT_FK_PK(ByVal FCPMAFS_FCPM_CODE_FK_PK As Integer, ByVal FCPMAFS_SP_CODE_FK_PK As Integer, ByVal FCPMAFS_DATE_PK As Date, ByVal FCPMAFS_CDF_DOCUMENT_FK_PK As String) As FCPMAFS_CIPEMG_AFSSAPSRow
            Return CType(Me.Rows.Find(New Object() {FCPMAFS_FCPM_CODE_FK_PK, FCPMAFS_SP_CODE_FK_PK, FCPMAFS_DATE_PK, FCPMAFS_CDF_DOCUMENT_FK_PK}),FCPMAFS_CIPEMG_AFSSAPSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As FCPMAFS_CIPEMG_AFSSAPSDataTable = CType(MyBase.Clone,FCPMAFS_CIPEMG_AFSSAPSDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New FCPMAFS_CIPEMG_AFSSAPSDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnFCPMAFS_FCPM_CODE_FK_PK = MyBase.Columns("FCPMAFS_FCPM_CODE_FK_PK")
            Me.columnFCPMAFS_SP_CODE_FK_PK = MyBase.Columns("FCPMAFS_SP_CODE_FK_PK")
            Me.columnFCPMAFS_DATE_PK = MyBase.Columns("FCPMAFS_DATE_PK")
            Me.columnFCPMAFS_CDF_DOCUMENT_FK_PK = MyBase.Columns("FCPMAFS_CDF_DOCUMENT_FK_PK")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnFCPMAFS_FCPM_CODE_FK_PK = New Global.System.Data.DataColumn("FCPMAFS_FCPM_CODE_FK_PK", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFCPMAFS_FCPM_CODE_FK_PK)
            Me.columnFCPMAFS_SP_CODE_FK_PK = New Global.System.Data.DataColumn("FCPMAFS_SP_CODE_FK_PK", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFCPMAFS_SP_CODE_FK_PK)
            Me.columnFCPMAFS_DATE_PK = New Global.System.Data.DataColumn("FCPMAFS_DATE_PK", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFCPMAFS_DATE_PK)
            Me.columnFCPMAFS_CDF_DOCUMENT_FK_PK = New Global.System.Data.DataColumn("FCPMAFS_CDF_DOCUMENT_FK_PK", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFCPMAFS_CDF_DOCUMENT_FK_PK)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnFCPMAFS_FCPM_CODE_FK_PK, Me.columnFCPMAFS_SP_CODE_FK_PK, Me.columnFCPMAFS_DATE_PK, Me.columnFCPMAFS_CDF_DOCUMENT_FK_PK}, true))
            Me.columnFCPMAFS_FCPM_CODE_FK_PK.AllowDBNull = false
            Me.columnFCPMAFS_SP_CODE_FK_PK.AllowDBNull = false
            Me.columnFCPMAFS_DATE_PK.AllowDBNull = false
            Me.columnFCPMAFS_CDF_DOCUMENT_FK_PK.AllowDBNull = false
            Me.columnFCPMAFS_CDF_DOCUMENT_FK_PK.MaxLength = 10
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewFCPMAFS_CIPEMG_AFSSAPSRow() As FCPMAFS_CIPEMG_AFSSAPSRow
            Return CType(Me.NewRow,FCPMAFS_CIPEMG_AFSSAPSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New FCPMAFS_CIPEMG_AFSSAPSRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(FCPMAFS_CIPEMG_AFSSAPSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.FCPMAFS_CIPEMG_AFSSAPSRowChangedEvent) Is Nothing) Then
                RaiseEvent FCPMAFS_CIPEMG_AFSSAPSRowChanged(Me, New FCPMAFS_CIPEMG_AFSSAPSRowChangeEvent(CType(e.Row,FCPMAFS_CIPEMG_AFSSAPSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.FCPMAFS_CIPEMG_AFSSAPSRowChangingEvent) Is Nothing) Then
                RaiseEvent FCPMAFS_CIPEMG_AFSSAPSRowChanging(Me, New FCPMAFS_CIPEMG_AFSSAPSRowChangeEvent(CType(e.Row,FCPMAFS_CIPEMG_AFSSAPSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.FCPMAFS_CIPEMG_AFSSAPSRowDeletedEvent) Is Nothing) Then
                RaiseEvent FCPMAFS_CIPEMG_AFSSAPSRowDeleted(Me, New FCPMAFS_CIPEMG_AFSSAPSRowChangeEvent(CType(e.Row,FCPMAFS_CIPEMG_AFSSAPSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.FCPMAFS_CIPEMG_AFSSAPSRowDeletingEvent) Is Nothing) Then
                RaiseEvent FCPMAFS_CIPEMG_AFSSAPSRowDeleting(Me, New FCPMAFS_CIPEMG_AFSSAPSRowChangeEvent(CType(e.Row,FCPMAFS_CIPEMG_AFSSAPSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveFCPMAFS_CIPEMG_AFSSAPSRow(ByVal row As FCPMAFS_CIPEMG_AFSSAPSRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsTheriaque_Cipemg_Code = New dsTheriaque_Cipemg_Code()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "FCPMAFS_CIPEMG_AFSSAPSDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class FCPM_FICHECIPEMGDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnFCPM_CODE_SQ_PK As Global.System.Data.DataColumn
        
        Private columnFCPM_DATECR As Global.System.Data.DataColumn
        
        Private columnFCPM_DATEMJ As Global.System.Data.DataColumn
        
        Private columnFCPM_ORIGINE As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "FCPM_FICHECIPEMG"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FCPM_CODE_SQ_PKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFCPM_CODE_SQ_PK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FCPM_DATECRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFCPM_DATECR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FCPM_DATEMJColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFCPM_DATEMJ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FCPM_ORIGINEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFCPM_ORIGINE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As FCPM_FICHECIPEMGRow
            Get
                Return CType(Me.Rows(index),FCPM_FICHECIPEMGRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FCPM_FICHECIPEMGRowChanging As FCPM_FICHECIPEMGRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FCPM_FICHECIPEMGRowChanged As FCPM_FICHECIPEMGRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FCPM_FICHECIPEMGRowDeleting As FCPM_FICHECIPEMGRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FCPM_FICHECIPEMGRowDeleted As FCPM_FICHECIPEMGRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddFCPM_FICHECIPEMGRow(ByVal row As FCPM_FICHECIPEMGRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddFCPM_FICHECIPEMGRow(ByVal FCPM_CODE_SQ_PK As Integer, ByVal FCPM_DATECR As Date, ByVal FCPM_DATEMJ As Date, ByVal FCPM_ORIGINE As String) As FCPM_FICHECIPEMGRow
            Dim rowFCPM_FICHECIPEMGRow As FCPM_FICHECIPEMGRow = CType(Me.NewRow,FCPM_FICHECIPEMGRow)
            Dim columnValuesArray() As Object = New Object() {FCPM_CODE_SQ_PK, FCPM_DATECR, FCPM_DATEMJ, FCPM_ORIGINE}
            rowFCPM_FICHECIPEMGRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowFCPM_FICHECIPEMGRow)
            Return rowFCPM_FICHECIPEMGRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByFCPM_CODE_SQ_PK(ByVal FCPM_CODE_SQ_PK As Integer) As FCPM_FICHECIPEMGRow
            Return CType(Me.Rows.Find(New Object() {FCPM_CODE_SQ_PK}),FCPM_FICHECIPEMGRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As FCPM_FICHECIPEMGDataTable = CType(MyBase.Clone,FCPM_FICHECIPEMGDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New FCPM_FICHECIPEMGDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnFCPM_CODE_SQ_PK = MyBase.Columns("FCPM_CODE_SQ_PK")
            Me.columnFCPM_DATECR = MyBase.Columns("FCPM_DATECR")
            Me.columnFCPM_DATEMJ = MyBase.Columns("FCPM_DATEMJ")
            Me.columnFCPM_ORIGINE = MyBase.Columns("FCPM_ORIGINE")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnFCPM_CODE_SQ_PK = New Global.System.Data.DataColumn("FCPM_CODE_SQ_PK", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFCPM_CODE_SQ_PK)
            Me.columnFCPM_DATECR = New Global.System.Data.DataColumn("FCPM_DATECR", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFCPM_DATECR)
            Me.columnFCPM_DATEMJ = New Global.System.Data.DataColumn("FCPM_DATEMJ", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFCPM_DATEMJ)
            Me.columnFCPM_ORIGINE = New Global.System.Data.DataColumn("FCPM_ORIGINE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFCPM_ORIGINE)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnFCPM_CODE_SQ_PK}, true))
            Me.columnFCPM_CODE_SQ_PK.AllowDBNull = false
            Me.columnFCPM_CODE_SQ_PK.Unique = true
            Me.columnFCPM_DATECR.AllowDBNull = false
            Me.columnFCPM_ORIGINE.AllowDBNull = false
            Me.columnFCPM_ORIGINE.MaxLength = 1
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewFCPM_FICHECIPEMGRow() As FCPM_FICHECIPEMGRow
            Return CType(Me.NewRow,FCPM_FICHECIPEMGRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New FCPM_FICHECIPEMGRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(FCPM_FICHECIPEMGRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.FCPM_FICHECIPEMGRowChangedEvent) Is Nothing) Then
                RaiseEvent FCPM_FICHECIPEMGRowChanged(Me, New FCPM_FICHECIPEMGRowChangeEvent(CType(e.Row,FCPM_FICHECIPEMGRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.FCPM_FICHECIPEMGRowChangingEvent) Is Nothing) Then
                RaiseEvent FCPM_FICHECIPEMGRowChanging(Me, New FCPM_FICHECIPEMGRowChangeEvent(CType(e.Row,FCPM_FICHECIPEMGRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.FCPM_FICHECIPEMGRowDeletedEvent) Is Nothing) Then
                RaiseEvent FCPM_FICHECIPEMGRowDeleted(Me, New FCPM_FICHECIPEMGRowChangeEvent(CType(e.Row,FCPM_FICHECIPEMGRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.FCPM_FICHECIPEMGRowDeletingEvent) Is Nothing) Then
                RaiseEvent FCPM_FICHECIPEMGRowDeleting(Me, New FCPM_FICHECIPEMGRowChangeEvent(CType(e.Row,FCPM_FICHECIPEMGRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveFCPM_FICHECIPEMGRow(ByVal row As FCPM_FICHECIPEMGRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsTheriaque_Cipemg_Code = New dsTheriaque_Cipemg_Code()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "FCPM_FICHECIPEMGDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class FCPMCPH_CIPEMG_CLPHRow
        Inherits Global.System.Data.DataRow
        
        Private tableFCPMCPH_CIPEMG_CLPH As FCPMCPH_CIPEMG_CLPHDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableFCPMCPH_CIPEMG_CLPH = CType(Me.Table,FCPMCPH_CIPEMG_CLPHDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FCPMCPH_FCPM_CODE_FK_PK() As Integer
            Get
                Return CType(Me(Me.tableFCPMCPH_CIPEMG_CLPH.FCPMCPH_FCPM_CODE_FK_PKColumn),Integer)
            End Get
            Set
                Me(Me.tableFCPMCPH_CIPEMG_CLPH.FCPMCPH_FCPM_CODE_FK_PKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FCPMCPH_CPH_CODE_FK_PK() As String
            Get
                Return CType(Me(Me.tableFCPMCPH_CIPEMG_CLPH.FCPMCPH_CPH_CODE_FK_PKColumn),String)
            End Get
            Set
                Me(Me.tableFCPMCPH_CIPEMG_CLPH.FCPMCPH_CPH_CODE_FK_PKColumn) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class FCPMCCH_CIPEMG_CLCHRow
        Inherits Global.System.Data.DataRow
        
        Private tableFCPMCCH_CIPEMG_CLCH As FCPMCCH_CIPEMG_CLCHDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableFCPMCCH_CIPEMG_CLCH = CType(Me.Table,FCPMCCH_CIPEMG_CLCHDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FCPMCCH_FCPM_CODE_FK_PK() As Integer
            Get
                Return CType(Me(Me.tableFCPMCCH_CIPEMG_CLCH.FCPMCCH_FCPM_CODE_FK_PKColumn),Integer)
            End Get
            Set
                Me(Me.tableFCPMCCH_CIPEMG_CLCH.FCPMCCH_FCPM_CODE_FK_PKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FCPMCCH_CCH_CODE_FK_PK() As String
            Get
                Return CType(Me(Me.tableFCPMCCH_CIPEMG_CLCH.FCPMCCH_CCH_CODE_FK_PKColumn),String)
            End Get
            Set
                Me(Me.tableFCPMCCH_CIPEMG_CLCH.FCPMCCH_CCH_CODE_FK_PKColumn) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class FCPMSAC_CIPEMG_SUBACRow
        Inherits Global.System.Data.DataRow
        
        Private tableFCPMSAC_CIPEMG_SUBAC As FCPMSAC_CIPEMG_SUBACDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableFCPMSAC_CIPEMG_SUBAC = CType(Me.Table,FCPMSAC_CIPEMG_SUBACDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FCPMSAC_FCPM_CODE_FK_PK() As Integer
            Get
                Return CType(Me(Me.tableFCPMSAC_CIPEMG_SUBAC.FCPMSAC_FCPM_CODE_FK_PKColumn),Integer)
            End Get
            Set
                Me(Me.tableFCPMSAC_CIPEMG_SUBAC.FCPMSAC_FCPM_CODE_FK_PKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FCPMSAC_SAC_CODE_FK_PK() As Integer
            Get
                Return CType(Me(Me.tableFCPMSAC_CIPEMG_SUBAC.FCPMSAC_SAC_CODE_FK_PKColumn),Integer)
            End Get
            Set
                Me(Me.tableFCPMSAC_CIPEMG_SUBAC.FCPMSAC_SAC_CODE_FK_PKColumn) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class FCPMSAU_CIPEMG_SUBAURow
        Inherits Global.System.Data.DataRow
        
        Private tableFCPMSAU_CIPEMG_SUBAU As FCPMSAU_CIPEMG_SUBAUDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableFCPMSAU_CIPEMG_SUBAU = CType(Me.Table,FCPMSAU_CIPEMG_SUBAUDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FCPMSAU_FCPM_CODE_FK_PK() As Integer
            Get
                Return CType(Me(Me.tableFCPMSAU_CIPEMG_SUBAU.FCPMSAU_FCPM_CODE_FK_PKColumn),Integer)
            End Get
            Set
                Me(Me.tableFCPMSAU_CIPEMG_SUBAU.FCPMSAU_FCPM_CODE_FK_PKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FCPMSAU_SAU_CODE_FK_PK() As Integer
            Get
                Return CType(Me(Me.tableFCPMSAU_CIPEMG_SUBAU.FCPMSAU_SAU_CODE_FK_PKColumn),Integer)
            End Get
            Set
                Me(Me.tableFCPMSAU_CIPEMG_SUBAU.FCPMSAU_SAU_CODE_FK_PKColumn) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class FCPMPR_CIPEMG_PRODRow
        Inherits Global.System.Data.DataRow
        
        Private tableFCPMPR_CIPEMG_PROD As FCPMPR_CIPEMG_PRODDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableFCPMPR_CIPEMG_PROD = CType(Me.Table,FCPMPR_CIPEMG_PRODDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FCPMPR_FCPM_CODE_FK_PK() As Integer
            Get
                Return CType(Me(Me.tableFCPMPR_CIPEMG_PROD.FCPMPR_FCPM_CODE_FK_PKColumn),Integer)
            End Get
            Set
                Me(Me.tableFCPMPR_CIPEMG_PROD.FCPMPR_FCPM_CODE_FK_PKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FCPMPR_PR_CODE_FK_PK() As Integer
            Get
                Return CType(Me(Me.tableFCPMPR_CIPEMG_PROD.FCPMPR_PR_CODE_FK_PKColumn),Integer)
            End Get
            Set
                Me(Me.tableFCPMPR_CIPEMG_PROD.FCPMPR_PR_CODE_FK_PKColumn) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class FCPMCH_CIPEMGCHRow
        Inherits Global.System.Data.DataRow
        
        Private tableFCPMCH_CIPEMGCH As FCPMCH_CIPEMGCHDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableFCPMCH_CIPEMGCH = CType(Me.Table,FCPMCH_CIPEMGCHDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FCPMCH_FCPM_CODE_FK_PK() As Integer
            Get
                Return CType(Me(Me.tableFCPMCH_CIPEMGCH.FCPMCH_FCPM_CODE_FK_PKColumn),Integer)
            End Get
            Set
                Me(Me.tableFCPMCH_CIPEMGCH.FCPMCH_FCPM_CODE_FK_PKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FCPMCH_CH_CODE_FK_PK() As Integer
            Get
                Return CType(Me(Me.tableFCPMCH_CIPEMGCH.FCPMCH_CH_CODE_FK_PKColumn),Integer)
            End Get
            Set
                Me(Me.tableFCPMCH_CIPEMGCH.FCPMCH_CH_CODE_FK_PKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FCPMCH_NUMORD() As Short
            Get
                Try 
                    Return CType(Me(Me.tableFCPMCH_CIPEMGCH.FCPMCH_NUMORDColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FCPMCH_NUMORD' in table 'FCPMCH_CIPEMGCH' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFCPMCH_CIPEMGCH.FCPMCH_NUMORDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFCPMCH_NUMORDNull() As Boolean
            Return Me.IsNull(Me.tableFCPMCH_CIPEMGCH.FCPMCH_NUMORDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFCPMCH_NUMORDNull()
            Me(Me.tableFCPMCH_CIPEMGCH.FCPMCH_NUMORDColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class FCPMSP_CIPEMG_SPERow
        Inherits Global.System.Data.DataRow
        
        Private tableFCPMSP_CIPEMG_SPE As FCPMSP_CIPEMG_SPEDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableFCPMSP_CIPEMG_SPE = CType(Me.Table,FCPMSP_CIPEMG_SPEDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FCPMSP_FCPM_CODE_FK_PK() As Integer
            Get
                Return CType(Me(Me.tableFCPMSP_CIPEMG_SPE.FCPMSP_FCPM_CODE_FK_PKColumn),Integer)
            End Get
            Set
                Me(Me.tableFCPMSP_CIPEMG_SPE.FCPMSP_FCPM_CODE_FK_PKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FCPMSP_SP_CODE_FK_PK() As Integer
            Get
                Return CType(Me(Me.tableFCPMSP_CIPEMG_SPE.FCPMSP_SP_CODE_FK_PKColumn),Integer)
            End Get
            Set
                Me(Me.tableFCPMSP_CIPEMG_SPE.FCPMSP_SP_CODE_FK_PKColumn) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class FCPMTER_FCPM_TERRAINRow
        Inherits Global.System.Data.DataRow
        
        Private tableFCPMTER_FCPM_TERRAIN As FCPMTER_FCPM_TERRAINDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableFCPMTER_FCPM_TERRAIN = CType(Me.Table,FCPMTER_FCPM_TERRAINDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FCPMTER_FCPM_CODE_FK_PK() As Integer
            Get
                Return CType(Me(Me.tableFCPMTER_FCPM_TERRAIN.FCPMTER_FCPM_CODE_FK_PKColumn),Integer)
            End Get
            Set
                Me(Me.tableFCPMTER_FCPM_TERRAIN.FCPMTER_FCPM_CODE_FK_PKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FCPMTER_CDF_TER_CODE_FK_PK() As String
            Get
                Return CType(Me(Me.tableFCPMTER_FCPM_TERRAIN.FCPMTER_CDF_TER_CODE_FK_PKColumn),String)
            End Get
            Set
                Me(Me.tableFCPMTER_FCPM_TERRAIN.FCPMTER_CDF_TER_CODE_FK_PKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FCPMTER_NATURE_CIPEMG_PK() As String
            Get
                Return CType(Me(Me.tableFCPMTER_FCPM_TERRAIN.FCPMTER_NATURE_CIPEMG_PKColumn),String)
            End Get
            Set
                Me(Me.tableFCPMTER_FCPM_TERRAIN.FCPMTER_NATURE_CIPEMG_PKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FCPMTER_NUMSEQ_PK() As Short
            Get
                Return CType(Me(Me.tableFCPMTER_FCPM_TERRAIN.FCPMTER_NUMSEQ_PKColumn),Short)
            End Get
            Set
                Me(Me.tableFCPMTER_FCPM_TERRAIN.FCPMTER_NUMSEQ_PKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FCPMTER_NUMORD() As Short
            Get
                Try 
                    Return CType(Me(Me.tableFCPMTER_FCPM_TERRAIN.FCPMTER_NUMORDColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FCPMTER_NUMORD' in table 'FCPMTER_FCPM_TERRAIN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFCPMTER_FCPM_TERRAIN.FCPMTER_NUMORDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFCPMTER_NUMORDNull() As Boolean
            Return Me.IsNull(Me.tableFCPMTER_FCPM_TERRAIN.FCPMTER_NUMORDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFCPMTER_NUMORDNull()
            Me(Me.tableFCPMTER_FCPM_TERRAIN.FCPMTER_NUMORDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetTERCOM_TERRAIN_COMMENTAIRERows() As TERCOM_TERRAIN_COMMENTAIRERow()
            If (Me.Table.ChildRelations("FK_TERCOM_FCPMTER") Is Nothing) Then
                Return New TERCOM_TERRAIN_COMMENTAIRERow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_TERCOM_FCPMTER")),TERCOM_TERRAIN_COMMENTAIRERow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetNIVCOM_NIVEAU_COMMENTAIRERows() As NIVCOM_NIVEAU_COMMENTAIRERow()
            If (Me.Table.ChildRelations("FK_NIVCOM_FCPMTER") Is Nothing) Then
                Return New NIVCOM_NIVEAU_COMMENTAIRERow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_NIVCOM_FCPMTER")),NIVCOM_NIVEAU_COMMENTAIRERow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetAUTCOM_AUTRE_COMMENTAIRERows() As AUTCOM_AUTRE_COMMENTAIRERow()
            If (Me.Table.ChildRelations("FK_AUTCOM_FCPMTER") Is Nothing) Then
                Return New AUTCOM_AUTRE_COMMENTAIRERow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_AUTCOM_FCPMTER")),AUTCOM_AUTRE_COMMENTAIRERow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetFCPMTX_FICHECIPEMG_TEXTERows() As FCPMTX_FICHECIPEMG_TEXTERow()
            If (Me.Table.ChildRelations("FK_FCPMTX_FCPMTER") Is Nothing) Then
                Return New FCPMTX_FICHECIPEMG_TEXTERow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_FCPMTX_FCPMTER")),FCPMTX_FICHECIPEMG_TEXTERow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class TERCOM_TERRAIN_COMMENTAIRERow
        Inherits Global.System.Data.DataRow
        
        Private tableTERCOM_TERRAIN_COMMENTAIRE As TERCOM_TERRAIN_COMMENTAIREDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableTERCOM_TERRAIN_COMMENTAIRE = CType(Me.Table,TERCOM_TERRAIN_COMMENTAIREDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TERCOM_FCPM_CODE_FK_PK() As Integer
            Get
                Return CType(Me(Me.tableTERCOM_TERRAIN_COMMENTAIRE.TERCOM_FCPM_CODE_FK_PKColumn),Integer)
            End Get
            Set
                Me(Me.tableTERCOM_TERRAIN_COMMENTAIRE.TERCOM_FCPM_CODE_FK_PKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TERCOM_CDF_TER_CODE_FK_PK() As String
            Get
                Return CType(Me(Me.tableTERCOM_TERRAIN_COMMENTAIRE.TERCOM_CDF_TER_CODE_FK_PKColumn),String)
            End Get
            Set
                Me(Me.tableTERCOM_TERRAIN_COMMENTAIRE.TERCOM_CDF_TER_CODE_FK_PKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TERCOM_NUMSEQ_TER_FK_PK() As Short
            Get
                Return CType(Me(Me.tableTERCOM_TERRAIN_COMMENTAIRE.TERCOM_NUMSEQ_TER_FK_PKColumn),Short)
            End Get
            Set
                Me(Me.tableTERCOM_TERRAIN_COMMENTAIRE.TERCOM_NUMSEQ_TER_FK_PKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TERCOM_CDF_COM_CODE_FK_PK() As String
            Get
                Return CType(Me(Me.tableTERCOM_TERRAIN_COMMENTAIRE.TERCOM_CDF_COM_CODE_FK_PKColumn),String)
            End Get
            Set
                Me(Me.tableTERCOM_TERRAIN_COMMENTAIRE.TERCOM_CDF_COM_CODE_FK_PKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TERCOM_NATURE_CIPEMG_FK_PK() As String
            Get
                Return CType(Me(Me.tableTERCOM_TERRAIN_COMMENTAIRE.TERCOM_NATURE_CIPEMG_FK_PKColumn),String)
            End Get
            Set
                Me(Me.tableTERCOM_TERRAIN_COMMENTAIRE.TERCOM_NATURE_CIPEMG_FK_PKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TERCOM_NUMSEQ() As Short
            Get
                Try 
                    Return CType(Me(Me.tableTERCOM_TERRAIN_COMMENTAIRE.TERCOM_NUMSEQColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TERCOM_NUMSEQ' in table 'TERCOM_TERRAIN_COMMENTAIRE' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTERCOM_TERRAIN_COMMENTAIRE.TERCOM_NUMSEQColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FCPMTER_FCPM_TERRAINRowParent() As FCPMTER_FCPM_TERRAINRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_TERCOM_FCPMTER")),FCPMTER_FCPM_TERRAINRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_TERCOM_FCPMTER"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTERCOM_NUMSEQNull() As Boolean
            Return Me.IsNull(Me.tableTERCOM_TERRAIN_COMMENTAIRE.TERCOM_NUMSEQColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTERCOM_NUMSEQNull()
            Me(Me.tableTERCOM_TERRAIN_COMMENTAIRE.TERCOM_NUMSEQColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class NIVCOM_NIVEAU_COMMENTAIRERow
        Inherits Global.System.Data.DataRow
        
        Private tableNIVCOM_NIVEAU_COMMENTAIRE As NIVCOM_NIVEAU_COMMENTAIREDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableNIVCOM_NIVEAU_COMMENTAIRE = CType(Me.Table,NIVCOM_NIVEAU_COMMENTAIREDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NIVCOM_FCPM_CODE_FK_PK() As Integer
            Get
                Return CType(Me(Me.tableNIVCOM_NIVEAU_COMMENTAIRE.NIVCOM_FCPM_CODE_FK_PKColumn),Integer)
            End Get
            Set
                Me(Me.tableNIVCOM_NIVEAU_COMMENTAIRE.NIVCOM_FCPM_CODE_FK_PKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NIVCOM_CDF_TER_CODE_FK_PK() As String
            Get
                Return CType(Me(Me.tableNIVCOM_NIVEAU_COMMENTAIRE.NIVCOM_CDF_TER_CODE_FK_PKColumn),String)
            End Get
            Set
                Me(Me.tableNIVCOM_NIVEAU_COMMENTAIRE.NIVCOM_CDF_TER_CODE_FK_PKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NIVCOM_NUMSEQ_TER_FK_PK() As Short
            Get
                Return CType(Me(Me.tableNIVCOM_NIVEAU_COMMENTAIRE.NIVCOM_NUMSEQ_TER_FK_PKColumn),Short)
            End Get
            Set
                Me(Me.tableNIVCOM_NIVEAU_COMMENTAIRE.NIVCOM_NUMSEQ_TER_FK_PKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NIVCOM_CDF_COM_CODE_FK_PK() As String
            Get
                Return CType(Me(Me.tableNIVCOM_NIVEAU_COMMENTAIRE.NIVCOM_CDF_COM_CODE_FK_PKColumn),String)
            End Get
            Set
                Me(Me.tableNIVCOM_NIVEAU_COMMENTAIRE.NIVCOM_CDF_COM_CODE_FK_PKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NIVCOM_NATURE_CIPEMG_FK_PK() As String
            Get
                Return CType(Me(Me.tableNIVCOM_NIVEAU_COMMENTAIRE.NIVCOM_NATURE_CIPEMG_FK_PKColumn),String)
            End Get
            Set
                Me(Me.tableNIVCOM_NIVEAU_COMMENTAIRE.NIVCOM_NATURE_CIPEMG_FK_PKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NIVCOM_NUMSEQ() As Short
            Get
                Try 
                    Return CType(Me(Me.tableNIVCOM_NIVEAU_COMMENTAIRE.NIVCOM_NUMSEQColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NIVCOM_NUMSEQ' in table 'NIVCOM_NIVEAU_COMMENTAIRE' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableNIVCOM_NIVEAU_COMMENTAIRE.NIVCOM_NUMSEQColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FCPMTER_FCPM_TERRAINRowParent() As FCPMTER_FCPM_TERRAINRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_NIVCOM_FCPMTER")),FCPMTER_FCPM_TERRAINRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_NIVCOM_FCPMTER"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNIVCOM_NUMSEQNull() As Boolean
            Return Me.IsNull(Me.tableNIVCOM_NIVEAU_COMMENTAIRE.NIVCOM_NUMSEQColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNIVCOM_NUMSEQNull()
            Me(Me.tableNIVCOM_NIVEAU_COMMENTAIRE.NIVCOM_NUMSEQColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class AUTCOM_AUTRE_COMMENTAIRERow
        Inherits Global.System.Data.DataRow
        
        Private tableAUTCOM_AUTRE_COMMENTAIRE As AUTCOM_AUTRE_COMMENTAIREDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableAUTCOM_AUTRE_COMMENTAIRE = CType(Me.Table,AUTCOM_AUTRE_COMMENTAIREDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AUTCOM_FCPM_CODE_FK_PK() As Integer
            Get
                Return CType(Me(Me.tableAUTCOM_AUTRE_COMMENTAIRE.AUTCOM_FCPM_CODE_FK_PKColumn),Integer)
            End Get
            Set
                Me(Me.tableAUTCOM_AUTRE_COMMENTAIRE.AUTCOM_FCPM_CODE_FK_PKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AUTCOM_CDF_TER_CODE_FK_PK() As String
            Get
                Return CType(Me(Me.tableAUTCOM_AUTRE_COMMENTAIRE.AUTCOM_CDF_TER_CODE_FK_PKColumn),String)
            End Get
            Set
                Me(Me.tableAUTCOM_AUTRE_COMMENTAIRE.AUTCOM_CDF_TER_CODE_FK_PKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AUTCOM_NUMSEQ_TER_FK_PK() As Short
            Get
                Return CType(Me(Me.tableAUTCOM_AUTRE_COMMENTAIRE.AUTCOM_NUMSEQ_TER_FK_PKColumn),Short)
            End Get
            Set
                Me(Me.tableAUTCOM_AUTRE_COMMENTAIRE.AUTCOM_NUMSEQ_TER_FK_PKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AUTCOM_CDF_COM_CODE_FK_PK() As String
            Get
                Return CType(Me(Me.tableAUTCOM_AUTRE_COMMENTAIRE.AUTCOM_CDF_COM_CODE_FK_PKColumn),String)
            End Get
            Set
                Me(Me.tableAUTCOM_AUTRE_COMMENTAIRE.AUTCOM_CDF_COM_CODE_FK_PKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AUTCOM_NATURE_CIPEMG_FK_PK() As String
            Get
                Return CType(Me(Me.tableAUTCOM_AUTRE_COMMENTAIRE.AUTCOM_NATURE_CIPEMG_FK_PKColumn),String)
            End Get
            Set
                Me(Me.tableAUTCOM_AUTRE_COMMENTAIRE.AUTCOM_NATURE_CIPEMG_FK_PKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AUTCOM_NUMSEQ() As Short
            Get
                Try 
                    Return CType(Me(Me.tableAUTCOM_AUTRE_COMMENTAIRE.AUTCOM_NUMSEQColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AUTCOM_NUMSEQ' in table 'AUTCOM_AUTRE_COMMENTAIRE' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableAUTCOM_AUTRE_COMMENTAIRE.AUTCOM_NUMSEQColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FCPMTER_FCPM_TERRAINRowParent() As FCPMTER_FCPM_TERRAINRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_AUTCOM_FCPMTER")),FCPMTER_FCPM_TERRAINRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_AUTCOM_FCPMTER"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAUTCOM_NUMSEQNull() As Boolean
            Return Me.IsNull(Me.tableAUTCOM_AUTRE_COMMENTAIRE.AUTCOM_NUMSEQColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAUTCOM_NUMSEQNull()
            Me(Me.tableAUTCOM_AUTRE_COMMENTAIRE.AUTCOM_NUMSEQColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class FCPMTX_FICHECIPEMG_TEXTERow
        Inherits Global.System.Data.DataRow
        
        Private tableFCPMTX_FICHECIPEMG_TEXTE As FCPMTX_FICHECIPEMG_TEXTEDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableFCPMTX_FICHECIPEMG_TEXTE = CType(Me.Table,FCPMTX_FICHECIPEMG_TEXTEDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FCPMTX_FCPM_CODE_FK_PK() As Integer
            Get
                Return CType(Me(Me.tableFCPMTX_FICHECIPEMG_TEXTE.FCPMTX_FCPM_CODE_FK_PKColumn),Integer)
            End Get
            Set
                Me(Me.tableFCPMTX_FICHECIPEMG_TEXTE.FCPMTX_FCPM_CODE_FK_PKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FCPMTX_CDF_TER_CODE_FK_PK() As String
            Get
                Return CType(Me(Me.tableFCPMTX_FICHECIPEMG_TEXTE.FCPMTX_CDF_TER_CODE_FK_PKColumn),String)
            End Get
            Set
                Me(Me.tableFCPMTX_FICHECIPEMG_TEXTE.FCPMTX_CDF_TER_CODE_FK_PKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FCPMTX_NUMSEQ_TER_FK_PK() As Short
            Get
                Return CType(Me(Me.tableFCPMTX_FICHECIPEMG_TEXTE.FCPMTX_NUMSEQ_TER_FK_PKColumn),Short)
            End Get
            Set
                Me(Me.tableFCPMTX_FICHECIPEMG_TEXTE.FCPMTX_NUMSEQ_TER_FK_PKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FCPMTX_NATURECIPEMG_FK_PK() As String
            Get
                Return CType(Me(Me.tableFCPMTX_FICHECIPEMG_TEXTE.FCPMTX_NATURECIPEMG_FK_PKColumn),String)
            End Get
            Set
                Me(Me.tableFCPMTX_FICHECIPEMG_TEXTE.FCPMTX_NATURECIPEMG_FK_PKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FCPMTX_TEXTE() As String
            Get
                Return CType(Me(Me.tableFCPMTX_FICHECIPEMG_TEXTE.FCPMTX_TEXTEColumn),String)
            End Get
            Set
                Me(Me.tableFCPMTX_FICHECIPEMG_TEXTE.FCPMTX_TEXTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FCPMTER_FCPM_TERRAINRowParent() As FCPMTER_FCPM_TERRAINRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_FCPMTX_FCPMTER")),FCPMTER_FCPM_TERRAINRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_FCPMTX_FCPMTER"))
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class FCPMAFS_CIPEMG_AFSSAPSRow
        Inherits Global.System.Data.DataRow
        
        Private tableFCPMAFS_CIPEMG_AFSSAPS As FCPMAFS_CIPEMG_AFSSAPSDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableFCPMAFS_CIPEMG_AFSSAPS = CType(Me.Table,FCPMAFS_CIPEMG_AFSSAPSDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FCPMAFS_FCPM_CODE_FK_PK() As Integer
            Get
                Return CType(Me(Me.tableFCPMAFS_CIPEMG_AFSSAPS.FCPMAFS_FCPM_CODE_FK_PKColumn),Integer)
            End Get
            Set
                Me(Me.tableFCPMAFS_CIPEMG_AFSSAPS.FCPMAFS_FCPM_CODE_FK_PKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FCPMAFS_SP_CODE_FK_PK() As Integer
            Get
                Return CType(Me(Me.tableFCPMAFS_CIPEMG_AFSSAPS.FCPMAFS_SP_CODE_FK_PKColumn),Integer)
            End Get
            Set
                Me(Me.tableFCPMAFS_CIPEMG_AFSSAPS.FCPMAFS_SP_CODE_FK_PKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FCPMAFS_DATE_PK() As Date
            Get
                Return CType(Me(Me.tableFCPMAFS_CIPEMG_AFSSAPS.FCPMAFS_DATE_PKColumn),Date)
            End Get
            Set
                Me(Me.tableFCPMAFS_CIPEMG_AFSSAPS.FCPMAFS_DATE_PKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FCPMAFS_CDF_DOCUMENT_FK_PK() As String
            Get
                Return CType(Me(Me.tableFCPMAFS_CIPEMG_AFSSAPS.FCPMAFS_CDF_DOCUMENT_FK_PKColumn),String)
            End Get
            Set
                Me(Me.tableFCPMAFS_CIPEMG_AFSSAPS.FCPMAFS_CDF_DOCUMENT_FK_PKColumn) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class FCPM_FICHECIPEMGRow
        Inherits Global.System.Data.DataRow
        
        Private tableFCPM_FICHECIPEMG As FCPM_FICHECIPEMGDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableFCPM_FICHECIPEMG = CType(Me.Table,FCPM_FICHECIPEMGDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FCPM_CODE_SQ_PK() As Integer
            Get
                Return CType(Me(Me.tableFCPM_FICHECIPEMG.FCPM_CODE_SQ_PKColumn),Integer)
            End Get
            Set
                Me(Me.tableFCPM_FICHECIPEMG.FCPM_CODE_SQ_PKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FCPM_DATECR() As Date
            Get
                Return CType(Me(Me.tableFCPM_FICHECIPEMG.FCPM_DATECRColumn),Date)
            End Get
            Set
                Me(Me.tableFCPM_FICHECIPEMG.FCPM_DATECRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FCPM_DATEMJ() As Date
            Get
                Try 
                    Return CType(Me(Me.tableFCPM_FICHECIPEMG.FCPM_DATEMJColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FCPM_DATEMJ' in table 'FCPM_FICHECIPEMG' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFCPM_FICHECIPEMG.FCPM_DATEMJColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FCPM_ORIGINE() As String
            Get
                Return CType(Me(Me.tableFCPM_FICHECIPEMG.FCPM_ORIGINEColumn),String)
            End Get
            Set
                Me(Me.tableFCPM_FICHECIPEMG.FCPM_ORIGINEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFCPM_DATEMJNull() As Boolean
            Return Me.IsNull(Me.tableFCPM_FICHECIPEMG.FCPM_DATEMJColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFCPM_DATEMJNull()
            Me(Me.tableFCPM_FICHECIPEMG.FCPM_DATEMJColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class FCPMCPH_CIPEMG_CLPHRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As FCPMCPH_CIPEMG_CLPHRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As FCPMCPH_CIPEMG_CLPHRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As FCPMCPH_CIPEMG_CLPHRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class FCPMCCH_CIPEMG_CLCHRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As FCPMCCH_CIPEMG_CLCHRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As FCPMCCH_CIPEMG_CLCHRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As FCPMCCH_CIPEMG_CLCHRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class FCPMSAC_CIPEMG_SUBACRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As FCPMSAC_CIPEMG_SUBACRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As FCPMSAC_CIPEMG_SUBACRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As FCPMSAC_CIPEMG_SUBACRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class FCPMSAU_CIPEMG_SUBAURowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As FCPMSAU_CIPEMG_SUBAURow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As FCPMSAU_CIPEMG_SUBAURow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As FCPMSAU_CIPEMG_SUBAURow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class FCPMPR_CIPEMG_PRODRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As FCPMPR_CIPEMG_PRODRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As FCPMPR_CIPEMG_PRODRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As FCPMPR_CIPEMG_PRODRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class FCPMCH_CIPEMGCHRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As FCPMCH_CIPEMGCHRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As FCPMCH_CIPEMGCHRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As FCPMCH_CIPEMGCHRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class FCPMSP_CIPEMG_SPERowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As FCPMSP_CIPEMG_SPERow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As FCPMSP_CIPEMG_SPERow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As FCPMSP_CIPEMG_SPERow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class FCPMTER_FCPM_TERRAINRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As FCPMTER_FCPM_TERRAINRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As FCPMTER_FCPM_TERRAINRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As FCPMTER_FCPM_TERRAINRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class TERCOM_TERRAIN_COMMENTAIRERowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As TERCOM_TERRAIN_COMMENTAIRERow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As TERCOM_TERRAIN_COMMENTAIRERow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As TERCOM_TERRAIN_COMMENTAIRERow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class NIVCOM_NIVEAU_COMMENTAIRERowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As NIVCOM_NIVEAU_COMMENTAIRERow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As NIVCOM_NIVEAU_COMMENTAIRERow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As NIVCOM_NIVEAU_COMMENTAIRERow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class AUTCOM_AUTRE_COMMENTAIRERowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As AUTCOM_AUTRE_COMMENTAIRERow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As AUTCOM_AUTRE_COMMENTAIRERow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As AUTCOM_AUTRE_COMMENTAIRERow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class FCPMTX_FICHECIPEMG_TEXTERowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As FCPMTX_FICHECIPEMG_TEXTERow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As FCPMTX_FICHECIPEMG_TEXTERow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As FCPMTX_FICHECIPEMG_TEXTERow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class FCPMAFS_CIPEMG_AFSSAPSRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As FCPMAFS_CIPEMG_AFSSAPSRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As FCPMAFS_CIPEMG_AFSSAPSRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As FCPMAFS_CIPEMG_AFSSAPSRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class FCPM_FICHECIPEMGRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As FCPM_FICHECIPEMGRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As FCPM_FICHECIPEMGRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As FCPM_FICHECIPEMGRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace dsTheriaque_Cipemg_CodeTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class FCPMCPH_CIPEMG_CLPHTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "FCPMCPH_CIPEMG_CLPH"
            tableMapping.ColumnMappings.Add("FCPMCPH_FCPM_CODE_FK_PK", "FCPMCPH_FCPM_CODE_FK_PK")
            tableMapping.ColumnMappings.Add("FCPMCPH_CPH_CODE_FK_PK", "FCPMCPH_CPH_CODE_FK_PK")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [THERIAQUE].[FCPMCPH_CIPEMG_CLPH] WHERE (([FCPMCPH_FCPM_CODE_FK_PK] ="& _ 
                " @Original_FCPMCPH_FCPM_CODE_FK_PK) AND ([FCPMCPH_CPH_CODE_FK_PK] = @Original_FC"& _ 
                "PMCPH_CPH_CODE_FK_PK))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FCPMCPH_FCPM_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMCPH_FCPM_CODE_FK_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FCPMCPH_CPH_CODE_FK_PK", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMCPH_CPH_CODE_FK_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [THERIAQUE].[FCPMCPH_CIPEMG_CLPH] ([FCPMCPH_FCPM_CODE_FK_PK], [FCPMCP"& _ 
                "H_CPH_CODE_FK_PK]) VALUES (@FCPMCPH_FCPM_CODE_FK_PK, @FCPMCPH_CPH_CODE_FK_PK);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)& _ 
                "SELECT FCPMCPH_FCPM_CODE_FK_PK, FCPMCPH_CPH_CODE_FK_PK FROM THERIAQUE.FCPMCPH_CI"& _ 
                "PEMG_CLPH WHERE (FCPMCPH_CPH_CODE_FK_PK = @FCPMCPH_CPH_CODE_FK_PK) AND (FCPMCPH_"& _ 
                "FCPM_CODE_FK_PK = @FCPMCPH_FCPM_CODE_FK_PK)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FCPMCPH_FCPM_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMCPH_FCPM_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FCPMCPH_CPH_CODE_FK_PK", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMCPH_CPH_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [THERIAQUE].[FCPMCPH_CIPEMG_CLPH] SET [FCPMCPH_FCPM_CODE_FK_PK] = @FCPMCPH"& _ 
                "_FCPM_CODE_FK_PK, [FCPMCPH_CPH_CODE_FK_PK] = @FCPMCPH_CPH_CODE_FK_PK WHERE (([FC"& _ 
                "PMCPH_FCPM_CODE_FK_PK] = @Original_FCPMCPH_FCPM_CODE_FK_PK) AND ([FCPMCPH_CPH_CO"& _ 
                "DE_FK_PK] = @Original_FCPMCPH_CPH_CODE_FK_PK));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT FCPMCPH_FCPM_CODE_FK_PK,"& _ 
                " FCPMCPH_CPH_CODE_FK_PK FROM THERIAQUE.FCPMCPH_CIPEMG_CLPH WHERE (FCPMCPH_CPH_CO"& _ 
                "DE_FK_PK = @FCPMCPH_CPH_CODE_FK_PK) AND (FCPMCPH_FCPM_CODE_FK_PK = @FCPMCPH_FCPM"& _ 
                "_CODE_FK_PK)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FCPMCPH_FCPM_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMCPH_FCPM_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FCPMCPH_CPH_CODE_FK_PK", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMCPH_CPH_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FCPMCPH_FCPM_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMCPH_FCPM_CODE_FK_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FCPMCPH_CPH_CODE_FK_PK", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMCPH_CPH_CODE_FK_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Theriaque.My.MySettings.Default.ConnectionString5
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT FCPMCPH_FCPM_CODE_FK_PK, FCPMCPH_CPH_CODE_FK_PK FROM THERIAQUE.FCPMCPH_CIP"& _ 
                "EMG_CLPH"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT FCPMCPH_FCPM_CODE_FK_PK, FCPMCPH_CPH_CODE_FK_PK FROM THERIAQUE.FCPMCPH_CIP"& _ 
                "EMG_CLPH"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE FCPMCPH_FCPM_CODE_FK_PK = @FCPMCPH_FCPM_CODE_FK_PK"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FCPMCPH_FCPM_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMCPH_FCPM_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsTheriaque_Cipemg_Code.FCPMCPH_CIPEMG_CLPHDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsTheriaque_Cipemg_Code.FCPMCPH_CIPEMG_CLPHDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsTheriaque_Cipemg_Code.FCPMCPH_CIPEMG_CLPHDataTable = New dsTheriaque_Cipemg_Code.FCPMCPH_CIPEMG_CLPHDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByCode(ByVal dataTable As dsTheriaque_Cipemg_Code.FCPMCPH_CIPEMG_CLPHDataTable, ByVal FCPMCPH_FCPM_CODE_FK_PK As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(FCPMCPH_FCPM_CODE_FK_PK,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByCode(ByVal FCPMCPH_FCPM_CODE_FK_PK As Integer) As dsTheriaque_Cipemg_Code.FCPMCPH_CIPEMG_CLPHDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(FCPMCPH_FCPM_CODE_FK_PK,Integer)
            Dim dataTable As dsTheriaque_Cipemg_Code.FCPMCPH_CIPEMG_CLPHDataTable = New dsTheriaque_Cipemg_Code.FCPMCPH_CIPEMG_CLPHDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsTheriaque_Cipemg_Code.FCPMCPH_CIPEMG_CLPHDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsTheriaque_Cipemg_Code) As Integer
            Return Me.Adapter.Update(dataSet, "FCPMCPH_CIPEMG_CLPH")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_FCPMCPH_FCPM_CODE_FK_PK As Integer, ByVal Original_FCPMCPH_CPH_CODE_FK_PK As String) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_FCPMCPH_FCPM_CODE_FK_PK,Integer)
            If (Original_FCPMCPH_CPH_CODE_FK_PK Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_FCPMCPH_CPH_CODE_FK_PK")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_FCPMCPH_CPH_CODE_FK_PK,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal FCPMCPH_FCPM_CODE_FK_PK As Integer, ByVal FCPMCPH_CPH_CODE_FK_PK As String) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(FCPMCPH_FCPM_CODE_FK_PK,Integer)
            If (FCPMCPH_CPH_CODE_FK_PK Is Nothing) Then
                Throw New Global.System.ArgumentNullException("FCPMCPH_CPH_CODE_FK_PK")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(FCPMCPH_CPH_CODE_FK_PK,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal FCPMCPH_FCPM_CODE_FK_PK As Integer, ByVal FCPMCPH_CPH_CODE_FK_PK As String, ByVal Original_FCPMCPH_FCPM_CODE_FK_PK As Integer, ByVal Original_FCPMCPH_CPH_CODE_FK_PK As String) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(FCPMCPH_FCPM_CODE_FK_PK,Integer)
            If (FCPMCPH_CPH_CODE_FK_PK Is Nothing) Then
                Throw New Global.System.ArgumentNullException("FCPMCPH_CPH_CODE_FK_PK")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(FCPMCPH_CPH_CODE_FK_PK,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Original_FCPMCPH_FCPM_CODE_FK_PK,Integer)
            If (Original_FCPMCPH_CPH_CODE_FK_PK Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_FCPMCPH_CPH_CODE_FK_PK")
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(Original_FCPMCPH_CPH_CODE_FK_PK,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal Original_FCPMCPH_FCPM_CODE_FK_PK As Integer, ByVal Original_FCPMCPH_CPH_CODE_FK_PK As String) As Integer
            Return Me.Update(Original_FCPMCPH_FCPM_CODE_FK_PK, Original_FCPMCPH_CPH_CODE_FK_PK, Original_FCPMCPH_FCPM_CODE_FK_PK, Original_FCPMCPH_CPH_CODE_FK_PK)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class FCPMCCH_CIPEMG_CLCHTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "FCPMCCH_CIPEMG_CLCH"
            tableMapping.ColumnMappings.Add("FCPMCCH_FCPM_CODE_FK_PK", "FCPMCCH_FCPM_CODE_FK_PK")
            tableMapping.ColumnMappings.Add("FCPMCCH_CCH_CODE_FK_PK", "FCPMCCH_CCH_CODE_FK_PK")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [THERIAQUE].[FCPMCCH_CIPEMG_CLCH] WHERE (([FCPMCCH_FCPM_CODE_FK_PK] ="& _ 
                " @Original_FCPMCCH_FCPM_CODE_FK_PK) AND ([FCPMCCH_CCH_CODE_FK_PK] = @Original_FC"& _ 
                "PMCCH_CCH_CODE_FK_PK))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FCPMCCH_FCPM_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMCCH_FCPM_CODE_FK_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FCPMCCH_CCH_CODE_FK_PK", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMCCH_CCH_CODE_FK_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [THERIAQUE].[FCPMCCH_CIPEMG_CLCH] ([FCPMCCH_FCPM_CODE_FK_PK], [FCPMCC"& _ 
                "H_CCH_CODE_FK_PK]) VALUES (@FCPMCCH_FCPM_CODE_FK_PK, @FCPMCCH_CCH_CODE_FK_PK);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)& _ 
                "SELECT FCPMCCH_FCPM_CODE_FK_PK, FCPMCCH_CCH_CODE_FK_PK FROM THERIAQUE.FCPMCCH_CI"& _ 
                "PEMG_CLCH WHERE (FCPMCCH_CCH_CODE_FK_PK = @FCPMCCH_CCH_CODE_FK_PK) AND (FCPMCCH_"& _ 
                "FCPM_CODE_FK_PK = @FCPMCCH_FCPM_CODE_FK_PK)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FCPMCCH_FCPM_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMCCH_FCPM_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FCPMCCH_CCH_CODE_FK_PK", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMCCH_CCH_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [THERIAQUE].[FCPMCCH_CIPEMG_CLCH] SET [FCPMCCH_FCPM_CODE_FK_PK] = @FCPMCCH"& _ 
                "_FCPM_CODE_FK_PK, [FCPMCCH_CCH_CODE_FK_PK] = @FCPMCCH_CCH_CODE_FK_PK WHERE (([FC"& _ 
                "PMCCH_FCPM_CODE_FK_PK] = @Original_FCPMCCH_FCPM_CODE_FK_PK) AND ([FCPMCCH_CCH_CO"& _ 
                "DE_FK_PK] = @Original_FCPMCCH_CCH_CODE_FK_PK));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT FCPMCCH_FCPM_CODE_FK_PK,"& _ 
                " FCPMCCH_CCH_CODE_FK_PK FROM THERIAQUE.FCPMCCH_CIPEMG_CLCH WHERE (FCPMCCH_CCH_CO"& _ 
                "DE_FK_PK = @FCPMCCH_CCH_CODE_FK_PK) AND (FCPMCCH_FCPM_CODE_FK_PK = @FCPMCCH_FCPM"& _ 
                "_CODE_FK_PK)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FCPMCCH_FCPM_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMCCH_FCPM_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FCPMCCH_CCH_CODE_FK_PK", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMCCH_CCH_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FCPMCCH_FCPM_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMCCH_FCPM_CODE_FK_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FCPMCCH_CCH_CODE_FK_PK", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMCCH_CCH_CODE_FK_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Theriaque.My.MySettings.Default.ConnectionString5
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT FCPMCCH_FCPM_CODE_FK_PK, FCPMCCH_CCH_CODE_FK_PK FROM THERIAQUE.FCPMCCH_CIP"& _ 
                "EMG_CLCH"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT FCPMCCH_FCPM_CODE_FK_PK, FCPMCCH_CCH_CODE_FK_PK FROM THERIAQUE.FCPMCCH_CIP"& _ 
                "EMG_CLCH"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE FCPMCCH_FCPM_CODE_FK_PK = @FCPMCCH_FCPM_CODE_FK_PK"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FCPMCCH_FCPM_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMCCH_FCPM_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsTheriaque_Cipemg_Code.FCPMCCH_CIPEMG_CLCHDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsTheriaque_Cipemg_Code.FCPMCCH_CIPEMG_CLCHDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsTheriaque_Cipemg_Code.FCPMCCH_CIPEMG_CLCHDataTable = New dsTheriaque_Cipemg_Code.FCPMCCH_CIPEMG_CLCHDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByCode(ByVal dataTable As dsTheriaque_Cipemg_Code.FCPMCCH_CIPEMG_CLCHDataTable, ByVal FCPMCCH_FCPM_CODE_FK_PK As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(FCPMCCH_FCPM_CODE_FK_PK,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByCode(ByVal FCPMCCH_FCPM_CODE_FK_PK As Integer) As dsTheriaque_Cipemg_Code.FCPMCCH_CIPEMG_CLCHDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(FCPMCCH_FCPM_CODE_FK_PK,Integer)
            Dim dataTable As dsTheriaque_Cipemg_Code.FCPMCCH_CIPEMG_CLCHDataTable = New dsTheriaque_Cipemg_Code.FCPMCCH_CIPEMG_CLCHDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsTheriaque_Cipemg_Code.FCPMCCH_CIPEMG_CLCHDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsTheriaque_Cipemg_Code) As Integer
            Return Me.Adapter.Update(dataSet, "FCPMCCH_CIPEMG_CLCH")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_FCPMCCH_FCPM_CODE_FK_PK As Integer, ByVal Original_FCPMCCH_CCH_CODE_FK_PK As String) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_FCPMCCH_FCPM_CODE_FK_PK,Integer)
            If (Original_FCPMCCH_CCH_CODE_FK_PK Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_FCPMCCH_CCH_CODE_FK_PK")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_FCPMCCH_CCH_CODE_FK_PK,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal FCPMCCH_FCPM_CODE_FK_PK As Integer, ByVal FCPMCCH_CCH_CODE_FK_PK As String) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(FCPMCCH_FCPM_CODE_FK_PK,Integer)
            If (FCPMCCH_CCH_CODE_FK_PK Is Nothing) Then
                Throw New Global.System.ArgumentNullException("FCPMCCH_CCH_CODE_FK_PK")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(FCPMCCH_CCH_CODE_FK_PK,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal FCPMCCH_FCPM_CODE_FK_PK As Integer, ByVal FCPMCCH_CCH_CODE_FK_PK As String, ByVal Original_FCPMCCH_FCPM_CODE_FK_PK As Integer, ByVal Original_FCPMCCH_CCH_CODE_FK_PK As String) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(FCPMCCH_FCPM_CODE_FK_PK,Integer)
            If (FCPMCCH_CCH_CODE_FK_PK Is Nothing) Then
                Throw New Global.System.ArgumentNullException("FCPMCCH_CCH_CODE_FK_PK")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(FCPMCCH_CCH_CODE_FK_PK,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Original_FCPMCCH_FCPM_CODE_FK_PK,Integer)
            If (Original_FCPMCCH_CCH_CODE_FK_PK Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_FCPMCCH_CCH_CODE_FK_PK")
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(Original_FCPMCCH_CCH_CODE_FK_PK,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal Original_FCPMCCH_FCPM_CODE_FK_PK As Integer, ByVal Original_FCPMCCH_CCH_CODE_FK_PK As String) As Integer
            Return Me.Update(Original_FCPMCCH_FCPM_CODE_FK_PK, Original_FCPMCCH_CCH_CODE_FK_PK, Original_FCPMCCH_FCPM_CODE_FK_PK, Original_FCPMCCH_CCH_CODE_FK_PK)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class FCPMSAC_CIPEMG_SUBACTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "FCPMSAC_CIPEMG_SUBAC"
            tableMapping.ColumnMappings.Add("FCPMSAC_FCPM_CODE_FK_PK", "FCPMSAC_FCPM_CODE_FK_PK")
            tableMapping.ColumnMappings.Add("FCPMSAC_SAC_CODE_FK_PK", "FCPMSAC_SAC_CODE_FK_PK")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [THERIAQUE].[FCPMSAC_CIPEMG_SUBAC] WHERE (([FCPMSAC_FCPM_CODE_FK_PK] "& _ 
                "= @Original_FCPMSAC_FCPM_CODE_FK_PK) AND ([FCPMSAC_SAC_CODE_FK_PK] = @Original_F"& _ 
                "CPMSAC_SAC_CODE_FK_PK))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FCPMSAC_FCPM_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMSAC_FCPM_CODE_FK_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FCPMSAC_SAC_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMSAC_SAC_CODE_FK_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [THERIAQUE].[FCPMSAC_CIPEMG_SUBAC] ([FCPMSAC_FCPM_CODE_FK_PK], [FCPMS"& _ 
                "AC_SAC_CODE_FK_PK]) VALUES (@FCPMSAC_FCPM_CODE_FK_PK, @FCPMSAC_SAC_CODE_FK_PK);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT FCPMSAC_FCPM_CODE_FK_PK, FCPMSAC_SAC_CODE_FK_PK FROM THERIAQUE.FCPMSAC_C"& _ 
                "IPEMG_SUBAC WHERE (FCPMSAC_FCPM_CODE_FK_PK = @FCPMSAC_FCPM_CODE_FK_PK) AND (FCPM"& _ 
                "SAC_SAC_CODE_FK_PK = @FCPMSAC_SAC_CODE_FK_PK)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FCPMSAC_FCPM_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMSAC_FCPM_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FCPMSAC_SAC_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMSAC_SAC_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [THERIAQUE].[FCPMSAC_CIPEMG_SUBAC] SET [FCPMSAC_FCPM_CODE_FK_PK] = @FCPMSA"& _ 
                "C_FCPM_CODE_FK_PK, [FCPMSAC_SAC_CODE_FK_PK] = @FCPMSAC_SAC_CODE_FK_PK WHERE (([F"& _ 
                "CPMSAC_FCPM_CODE_FK_PK] = @Original_FCPMSAC_FCPM_CODE_FK_PK) AND ([FCPMSAC_SAC_C"& _ 
                "ODE_FK_PK] = @Original_FCPMSAC_SAC_CODE_FK_PK));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT FCPMSAC_FCPM_CODE_FK_PK"& _ 
                ", FCPMSAC_SAC_CODE_FK_PK FROM THERIAQUE.FCPMSAC_CIPEMG_SUBAC WHERE (FCPMSAC_FCPM"& _ 
                "_CODE_FK_PK = @FCPMSAC_FCPM_CODE_FK_PK) AND (FCPMSAC_SAC_CODE_FK_PK = @FCPMSAC_S"& _ 
                "AC_CODE_FK_PK)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FCPMSAC_FCPM_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMSAC_FCPM_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FCPMSAC_SAC_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMSAC_SAC_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FCPMSAC_FCPM_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMSAC_FCPM_CODE_FK_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FCPMSAC_SAC_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMSAC_SAC_CODE_FK_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Theriaque.My.MySettings.Default.ConnectionString5
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT FCPMSAC_FCPM_CODE_FK_PK, FCPMSAC_SAC_CODE_FK_PK FROM THERIAQUE.FCPMSAC_CIP"& _ 
                "EMG_SUBAC"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT FCPMSAC_FCPM_CODE_FK_PK, FCPMSAC_SAC_CODE_FK_PK FROM THERIAQUE.FCPMSAC_CIP"& _ 
                "EMG_SUBAC"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE FCPMSAC_FCPM_CODE_FK_PK = @FCPMSAC_FCPM_CODE_FK_PK"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FCPMSAC_FCPM_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMSAC_FCPM_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsTheriaque_Cipemg_Code.FCPMSAC_CIPEMG_SUBACDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsTheriaque_Cipemg_Code.FCPMSAC_CIPEMG_SUBACDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsTheriaque_Cipemg_Code.FCPMSAC_CIPEMG_SUBACDataTable = New dsTheriaque_Cipemg_Code.FCPMSAC_CIPEMG_SUBACDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByCode(ByVal dataTable As dsTheriaque_Cipemg_Code.FCPMSAC_CIPEMG_SUBACDataTable, ByVal FCPMSAC_FCPM_CODE_FK_PK As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(FCPMSAC_FCPM_CODE_FK_PK,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByCode(ByVal FCPMSAC_FCPM_CODE_FK_PK As Integer) As dsTheriaque_Cipemg_Code.FCPMSAC_CIPEMG_SUBACDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(FCPMSAC_FCPM_CODE_FK_PK,Integer)
            Dim dataTable As dsTheriaque_Cipemg_Code.FCPMSAC_CIPEMG_SUBACDataTable = New dsTheriaque_Cipemg_Code.FCPMSAC_CIPEMG_SUBACDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsTheriaque_Cipemg_Code.FCPMSAC_CIPEMG_SUBACDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsTheriaque_Cipemg_Code) As Integer
            Return Me.Adapter.Update(dataSet, "FCPMSAC_CIPEMG_SUBAC")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_FCPMSAC_FCPM_CODE_FK_PK As Integer, ByVal Original_FCPMSAC_SAC_CODE_FK_PK As Integer) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_FCPMSAC_FCPM_CODE_FK_PK,Integer)
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_FCPMSAC_SAC_CODE_FK_PK,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal FCPMSAC_FCPM_CODE_FK_PK As Integer, ByVal FCPMSAC_SAC_CODE_FK_PK As Integer) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(FCPMSAC_FCPM_CODE_FK_PK,Integer)
            Me.Adapter.InsertCommand.Parameters(1).Value = CType(FCPMSAC_SAC_CODE_FK_PK,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal FCPMSAC_FCPM_CODE_FK_PK As Integer, ByVal FCPMSAC_SAC_CODE_FK_PK As Integer, ByVal Original_FCPMSAC_FCPM_CODE_FK_PK As Integer, ByVal Original_FCPMSAC_SAC_CODE_FK_PK As Integer) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(FCPMSAC_FCPM_CODE_FK_PK,Integer)
            Me.Adapter.UpdateCommand.Parameters(1).Value = CType(FCPMSAC_SAC_CODE_FK_PK,Integer)
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Original_FCPMSAC_FCPM_CODE_FK_PK,Integer)
            Me.Adapter.UpdateCommand.Parameters(3).Value = CType(Original_FCPMSAC_SAC_CODE_FK_PK,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal Original_FCPMSAC_FCPM_CODE_FK_PK As Integer, ByVal Original_FCPMSAC_SAC_CODE_FK_PK As Integer) As Integer
            Return Me.Update(Original_FCPMSAC_FCPM_CODE_FK_PK, Original_FCPMSAC_SAC_CODE_FK_PK, Original_FCPMSAC_FCPM_CODE_FK_PK, Original_FCPMSAC_SAC_CODE_FK_PK)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class FCPMSAU_CIPEMG_SUBAUTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "FCPMSAU_CIPEMG_SUBAU"
            tableMapping.ColumnMappings.Add("FCPMSAU_FCPM_CODE_FK_PK", "FCPMSAU_FCPM_CODE_FK_PK")
            tableMapping.ColumnMappings.Add("FCPMSAU_SAU_CODE_FK_PK", "FCPMSAU_SAU_CODE_FK_PK")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [THERIAQUE].[FCPMSAU_CIPEMG_SUBAU] WHERE (([FCPMSAU_FCPM_CODE_FK_PK] "& _ 
                "= @Original_FCPMSAU_FCPM_CODE_FK_PK) AND ([FCPMSAU_SAU_CODE_FK_PK] = @Original_F"& _ 
                "CPMSAU_SAU_CODE_FK_PK))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FCPMSAU_FCPM_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMSAU_FCPM_CODE_FK_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FCPMSAU_SAU_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMSAU_SAU_CODE_FK_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [THERIAQUE].[FCPMSAU_CIPEMG_SUBAU] ([FCPMSAU_FCPM_CODE_FK_PK], [FCPMS"& _ 
                "AU_SAU_CODE_FK_PK]) VALUES (@FCPMSAU_FCPM_CODE_FK_PK, @FCPMSAU_SAU_CODE_FK_PK);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT FCPMSAU_FCPM_CODE_FK_PK, FCPMSAU_SAU_CODE_FK_PK FROM THERIAQUE.FCPMSAU_C"& _ 
                "IPEMG_SUBAU WHERE (FCPMSAU_FCPM_CODE_FK_PK = @FCPMSAU_FCPM_CODE_FK_PK) AND (FCPM"& _ 
                "SAU_SAU_CODE_FK_PK = @FCPMSAU_SAU_CODE_FK_PK)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FCPMSAU_FCPM_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMSAU_FCPM_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FCPMSAU_SAU_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMSAU_SAU_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [THERIAQUE].[FCPMSAU_CIPEMG_SUBAU] SET [FCPMSAU_FCPM_CODE_FK_PK] = @FCPMSA"& _ 
                "U_FCPM_CODE_FK_PK, [FCPMSAU_SAU_CODE_FK_PK] = @FCPMSAU_SAU_CODE_FK_PK WHERE (([F"& _ 
                "CPMSAU_FCPM_CODE_FK_PK] = @Original_FCPMSAU_FCPM_CODE_FK_PK) AND ([FCPMSAU_SAU_C"& _ 
                "ODE_FK_PK] = @Original_FCPMSAU_SAU_CODE_FK_PK));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT FCPMSAU_FCPM_CODE_FK_PK"& _ 
                ", FCPMSAU_SAU_CODE_FK_PK FROM THERIAQUE.FCPMSAU_CIPEMG_SUBAU WHERE (FCPMSAU_FCPM"& _ 
                "_CODE_FK_PK = @FCPMSAU_FCPM_CODE_FK_PK) AND (FCPMSAU_SAU_CODE_FK_PK = @FCPMSAU_S"& _ 
                "AU_CODE_FK_PK)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FCPMSAU_FCPM_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMSAU_FCPM_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FCPMSAU_SAU_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMSAU_SAU_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FCPMSAU_FCPM_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMSAU_FCPM_CODE_FK_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FCPMSAU_SAU_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMSAU_SAU_CODE_FK_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Theriaque.My.MySettings.Default.ConnectionString5
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT FCPMSAU_FCPM_CODE_FK_PK, FCPMSAU_SAU_CODE_FK_PK FROM THERIAQUE.FCPMSAU_CIP"& _ 
                "EMG_SUBAU"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT FCPMSAU_FCPM_CODE_FK_PK, FCPMSAU_SAU_CODE_FK_PK FROM THERIAQUE.FCPMSAU_CIP"& _ 
                "EMG_SUBAU"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE FCPMSAU_FCPM_CODE_FK_PK = @FCPMSAU_FCPM_CODE_FK_PK"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FCPMSAU_FCPM_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMSAU_FCPM_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsTheriaque_Cipemg_Code.FCPMSAU_CIPEMG_SUBAUDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsTheriaque_Cipemg_Code.FCPMSAU_CIPEMG_SUBAUDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsTheriaque_Cipemg_Code.FCPMSAU_CIPEMG_SUBAUDataTable = New dsTheriaque_Cipemg_Code.FCPMSAU_CIPEMG_SUBAUDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByCode(ByVal dataTable As dsTheriaque_Cipemg_Code.FCPMSAU_CIPEMG_SUBAUDataTable, ByVal FCPMSAU_FCPM_CODE_FK_PK As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(FCPMSAU_FCPM_CODE_FK_PK,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByCode(ByVal FCPMSAU_FCPM_CODE_FK_PK As Integer) As dsTheriaque_Cipemg_Code.FCPMSAU_CIPEMG_SUBAUDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(FCPMSAU_FCPM_CODE_FK_PK,Integer)
            Dim dataTable As dsTheriaque_Cipemg_Code.FCPMSAU_CIPEMG_SUBAUDataTable = New dsTheriaque_Cipemg_Code.FCPMSAU_CIPEMG_SUBAUDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsTheriaque_Cipemg_Code.FCPMSAU_CIPEMG_SUBAUDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsTheriaque_Cipemg_Code) As Integer
            Return Me.Adapter.Update(dataSet, "FCPMSAU_CIPEMG_SUBAU")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_FCPMSAU_FCPM_CODE_FK_PK As Integer, ByVal Original_FCPMSAU_SAU_CODE_FK_PK As Integer) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_FCPMSAU_FCPM_CODE_FK_PK,Integer)
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_FCPMSAU_SAU_CODE_FK_PK,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal FCPMSAU_FCPM_CODE_FK_PK As Integer, ByVal FCPMSAU_SAU_CODE_FK_PK As Integer) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(FCPMSAU_FCPM_CODE_FK_PK,Integer)
            Me.Adapter.InsertCommand.Parameters(1).Value = CType(FCPMSAU_SAU_CODE_FK_PK,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal FCPMSAU_FCPM_CODE_FK_PK As Integer, ByVal FCPMSAU_SAU_CODE_FK_PK As Integer, ByVal Original_FCPMSAU_FCPM_CODE_FK_PK As Integer, ByVal Original_FCPMSAU_SAU_CODE_FK_PK As Integer) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(FCPMSAU_FCPM_CODE_FK_PK,Integer)
            Me.Adapter.UpdateCommand.Parameters(1).Value = CType(FCPMSAU_SAU_CODE_FK_PK,Integer)
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Original_FCPMSAU_FCPM_CODE_FK_PK,Integer)
            Me.Adapter.UpdateCommand.Parameters(3).Value = CType(Original_FCPMSAU_SAU_CODE_FK_PK,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal Original_FCPMSAU_FCPM_CODE_FK_PK As Integer, ByVal Original_FCPMSAU_SAU_CODE_FK_PK As Integer) As Integer
            Return Me.Update(Original_FCPMSAU_FCPM_CODE_FK_PK, Original_FCPMSAU_SAU_CODE_FK_PK, Original_FCPMSAU_FCPM_CODE_FK_PK, Original_FCPMSAU_SAU_CODE_FK_PK)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class FCPMPR_CIPEMG_PRODTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "FCPMPR_CIPEMG_PROD"
            tableMapping.ColumnMappings.Add("FCPMPR_FCPM_CODE_FK_PK", "FCPMPR_FCPM_CODE_FK_PK")
            tableMapping.ColumnMappings.Add("FCPMPR_PR_CODE_FK_PK", "FCPMPR_PR_CODE_FK_PK")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [THERIAQUE].[FCPMPR_CIPEMG_PROD] WHERE (([FCPMPR_FCPM_CODE_FK_PK] = @"& _ 
                "Original_FCPMPR_FCPM_CODE_FK_PK) AND ([FCPMPR_PR_CODE_FK_PK] = @Original_FCPMPR_"& _ 
                "PR_CODE_FK_PK))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FCPMPR_FCPM_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMPR_FCPM_CODE_FK_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FCPMPR_PR_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMPR_PR_CODE_FK_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [THERIAQUE].[FCPMPR_CIPEMG_PROD] ([FCPMPR_FCPM_CODE_FK_PK], [FCPMPR_P"& _ 
                "R_CODE_FK_PK]) VALUES (@FCPMPR_FCPM_CODE_FK_PK, @FCPMPR_PR_CODE_FK_PK);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT "& _ 
                "FCPMPR_FCPM_CODE_FK_PK, FCPMPR_PR_CODE_FK_PK FROM THERIAQUE.FCPMPR_CIPEMG_PROD W"& _ 
                "HERE (FCPMPR_FCPM_CODE_FK_PK = @FCPMPR_FCPM_CODE_FK_PK) AND (FCPMPR_PR_CODE_FK_P"& _ 
                "K = @FCPMPR_PR_CODE_FK_PK)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FCPMPR_FCPM_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMPR_FCPM_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FCPMPR_PR_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMPR_PR_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [THERIAQUE].[FCPMPR_CIPEMG_PROD] SET [FCPMPR_FCPM_CODE_FK_PK] = @FCPMPR_FC"& _ 
                "PM_CODE_FK_PK, [FCPMPR_PR_CODE_FK_PK] = @FCPMPR_PR_CODE_FK_PK WHERE (([FCPMPR_FC"& _ 
                "PM_CODE_FK_PK] = @Original_FCPMPR_FCPM_CODE_FK_PK) AND ([FCPMPR_PR_CODE_FK_PK] ="& _ 
                " @Original_FCPMPR_PR_CODE_FK_PK));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT FCPMPR_FCPM_CODE_FK_PK, FCPMPR_PR_COD"& _ 
                "E_FK_PK FROM THERIAQUE.FCPMPR_CIPEMG_PROD WHERE (FCPMPR_FCPM_CODE_FK_PK = @FCPMP"& _ 
                "R_FCPM_CODE_FK_PK) AND (FCPMPR_PR_CODE_FK_PK = @FCPMPR_PR_CODE_FK_PK)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FCPMPR_FCPM_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMPR_FCPM_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FCPMPR_PR_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMPR_PR_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FCPMPR_FCPM_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMPR_FCPM_CODE_FK_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FCPMPR_PR_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMPR_PR_CODE_FK_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Theriaque.My.MySettings.Default.ConnectionString5
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT FCPMPR_FCPM_CODE_FK_PK, FCPMPR_PR_CODE_FK_PK FROM THERIAQUE.FCPMPR_CIPEMG_"& _ 
                "PROD"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT FCPMPR_FCPM_CODE_FK_PK, FCPMPR_PR_CODE_FK_PK FROM THERIAQUE.FCPMPR_CIPEMG_"& _ 
                "PROD"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE FCPMPR_FCPM_CODE_FK_PK = @FCPMPR_FCPM_CODE_FK_PK"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FCPMPR_FCPM_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMPR_FCPM_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsTheriaque_Cipemg_Code.FCPMPR_CIPEMG_PRODDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsTheriaque_Cipemg_Code.FCPMPR_CIPEMG_PRODDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsTheriaque_Cipemg_Code.FCPMPR_CIPEMG_PRODDataTable = New dsTheriaque_Cipemg_Code.FCPMPR_CIPEMG_PRODDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByCode(ByVal dataTable As dsTheriaque_Cipemg_Code.FCPMPR_CIPEMG_PRODDataTable, ByVal FCPMPR_FCPM_CODE_FK_PK As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(FCPMPR_FCPM_CODE_FK_PK,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByCode(ByVal FCPMPR_FCPM_CODE_FK_PK As Integer) As dsTheriaque_Cipemg_Code.FCPMPR_CIPEMG_PRODDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(FCPMPR_FCPM_CODE_FK_PK,Integer)
            Dim dataTable As dsTheriaque_Cipemg_Code.FCPMPR_CIPEMG_PRODDataTable = New dsTheriaque_Cipemg_Code.FCPMPR_CIPEMG_PRODDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsTheriaque_Cipemg_Code.FCPMPR_CIPEMG_PRODDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsTheriaque_Cipemg_Code) As Integer
            Return Me.Adapter.Update(dataSet, "FCPMPR_CIPEMG_PROD")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_FCPMPR_FCPM_CODE_FK_PK As Integer, ByVal Original_FCPMPR_PR_CODE_FK_PK As Integer) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_FCPMPR_FCPM_CODE_FK_PK,Integer)
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_FCPMPR_PR_CODE_FK_PK,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal FCPMPR_FCPM_CODE_FK_PK As Integer, ByVal FCPMPR_PR_CODE_FK_PK As Integer) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(FCPMPR_FCPM_CODE_FK_PK,Integer)
            Me.Adapter.InsertCommand.Parameters(1).Value = CType(FCPMPR_PR_CODE_FK_PK,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal FCPMPR_FCPM_CODE_FK_PK As Integer, ByVal FCPMPR_PR_CODE_FK_PK As Integer, ByVal Original_FCPMPR_FCPM_CODE_FK_PK As Integer, ByVal Original_FCPMPR_PR_CODE_FK_PK As Integer) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(FCPMPR_FCPM_CODE_FK_PK,Integer)
            Me.Adapter.UpdateCommand.Parameters(1).Value = CType(FCPMPR_PR_CODE_FK_PK,Integer)
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Original_FCPMPR_FCPM_CODE_FK_PK,Integer)
            Me.Adapter.UpdateCommand.Parameters(3).Value = CType(Original_FCPMPR_PR_CODE_FK_PK,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal Original_FCPMPR_FCPM_CODE_FK_PK As Integer, ByVal Original_FCPMPR_PR_CODE_FK_PK As Integer) As Integer
            Return Me.Update(Original_FCPMPR_FCPM_CODE_FK_PK, Original_FCPMPR_PR_CODE_FK_PK, Original_FCPMPR_FCPM_CODE_FK_PK, Original_FCPMPR_PR_CODE_FK_PK)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class FCPMCH_CIPEMGCHTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "FCPMCH_CIPEMGCH"
            tableMapping.ColumnMappings.Add("FCPMCH_FCPM_CODE_FK_PK", "FCPMCH_FCPM_CODE_FK_PK")
            tableMapping.ColumnMappings.Add("FCPMCH_CH_CODE_FK_PK", "FCPMCH_CH_CODE_FK_PK")
            tableMapping.ColumnMappings.Add("FCPMCH_NUMORD", "FCPMCH_NUMORD")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [THERIAQUE].[FCPMCH_CIPEMGCH] WHERE (([FCPMCH_FCPM_CODE_FK_PK] = @Ori"& _ 
                "ginal_FCPMCH_FCPM_CODE_FK_PK) AND ([FCPMCH_CH_CODE_FK_PK] = @Original_FCPMCH_CH_"& _ 
                "CODE_FK_PK) AND ((@IsNull_FCPMCH_NUMORD = 1 AND [FCPMCH_NUMORD] IS NULL) OR ([FC"& _ 
                "PMCH_NUMORD] = @Original_FCPMCH_NUMORD)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FCPMCH_FCPM_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMCH_FCPM_CODE_FK_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FCPMCH_CH_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMCH_CH_CODE_FK_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FCPMCH_NUMORD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMCH_NUMORD", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FCPMCH_NUMORD", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMCH_NUMORD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [THERIAQUE].[FCPMCH_CIPEMGCH] ([FCPMCH_FCPM_CODE_FK_PK], [FCPMCH_CH_C"& _ 
                "ODE_FK_PK], [FCPMCH_NUMORD]) VALUES (@FCPMCH_FCPM_CODE_FK_PK, @FCPMCH_CH_CODE_FK"& _ 
                "_PK, @FCPMCH_NUMORD);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT FCPMCH_FCPM_CODE_FK_PK, FCPMCH_CH_CODE_FK_PK, FCPM"& _ 
                "CH_NUMORD FROM THERIAQUE.FCPMCH_CIPEMGCH WHERE (FCPMCH_CH_CODE_FK_PK = @FCPMCH_C"& _ 
                "H_CODE_FK_PK) AND (FCPMCH_FCPM_CODE_FK_PK = @FCPMCH_FCPM_CODE_FK_PK)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FCPMCH_FCPM_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMCH_FCPM_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FCPMCH_CH_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMCH_CH_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FCPMCH_NUMORD", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMCH_NUMORD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [THERIAQUE].[FCPMCH_CIPEMGCH] SET [FCPMCH_FCPM_CODE_FK_PK] = @FCPMCH_FCPM_"& _ 
                "CODE_FK_PK, [FCPMCH_CH_CODE_FK_PK] = @FCPMCH_CH_CODE_FK_PK, [FCPMCH_NUMORD] = @F"& _ 
                "CPMCH_NUMORD WHERE (([FCPMCH_FCPM_CODE_FK_PK] = @Original_FCPMCH_FCPM_CODE_FK_PK"& _ 
                ") AND ([FCPMCH_CH_CODE_FK_PK] = @Original_FCPMCH_CH_CODE_FK_PK) AND ((@IsNull_FC"& _ 
                "PMCH_NUMORD = 1 AND [FCPMCH_NUMORD] IS NULL) OR ([FCPMCH_NUMORD] = @Original_FCP"& _ 
                "MCH_NUMORD)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT FCPMCH_FCPM_CODE_FK_PK, FCPMCH_CH_CODE_FK_PK, FCPMCH_NUMO"& _ 
                "RD FROM THERIAQUE.FCPMCH_CIPEMGCH WHERE (FCPMCH_CH_CODE_FK_PK = @FCPMCH_CH_CODE_"& _ 
                "FK_PK) AND (FCPMCH_FCPM_CODE_FK_PK = @FCPMCH_FCPM_CODE_FK_PK)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FCPMCH_FCPM_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMCH_FCPM_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FCPMCH_CH_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMCH_CH_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FCPMCH_NUMORD", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMCH_NUMORD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FCPMCH_FCPM_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMCH_FCPM_CODE_FK_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FCPMCH_CH_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMCH_CH_CODE_FK_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FCPMCH_NUMORD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMCH_NUMORD", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FCPMCH_NUMORD", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMCH_NUMORD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Theriaque.My.MySettings.Default.ConnectionString5
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT FCPMCH_FCPM_CODE_FK_PK, FCPMCH_CH_CODE_FK_PK, FCPMCH_NUMORD FROM THERIAQUE"& _ 
                ".FCPMCH_CIPEMGCH"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT FCPMCH_FCPM_CODE_FK_PK, FCPMCH_CH_CODE_FK_PK, FCPMCH_NUMORD FROM THERIAQUE"& _ 
                ".FCPMCH_CIPEMGCH"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE FCPMCH_FCPM_CODE_FK_PK = @FCPMCH_FCPM_CODE_FK_PK"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FCPMCH_FCPM_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMCH_FCPM_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsTheriaque_Cipemg_Code.FCPMCH_CIPEMGCHDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsTheriaque_Cipemg_Code.FCPMCH_CIPEMGCHDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsTheriaque_Cipemg_Code.FCPMCH_CIPEMGCHDataTable = New dsTheriaque_Cipemg_Code.FCPMCH_CIPEMGCHDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByCode(ByVal dataTable As dsTheriaque_Cipemg_Code.FCPMCH_CIPEMGCHDataTable, ByVal FCPMCH_FCPM_CODE_FK_PK As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(FCPMCH_FCPM_CODE_FK_PK,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByCode(ByVal FCPMCH_FCPM_CODE_FK_PK As Integer) As dsTheriaque_Cipemg_Code.FCPMCH_CIPEMGCHDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(FCPMCH_FCPM_CODE_FK_PK,Integer)
            Dim dataTable As dsTheriaque_Cipemg_Code.FCPMCH_CIPEMGCHDataTable = New dsTheriaque_Cipemg_Code.FCPMCH_CIPEMGCHDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsTheriaque_Cipemg_Code.FCPMCH_CIPEMGCHDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsTheriaque_Cipemg_Code) As Integer
            Return Me.Adapter.Update(dataSet, "FCPMCH_CIPEMGCH")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_FCPMCH_FCPM_CODE_FK_PK As Integer, ByVal Original_FCPMCH_CH_CODE_FK_PK As Integer, ByVal Original_FCPMCH_NUMORD As Global.System.Nullable(Of Short)) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_FCPMCH_FCPM_CODE_FK_PK,Integer)
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_FCPMCH_CH_CODE_FK_PK,Integer)
            If (Original_FCPMCH_NUMORD.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_FCPMCH_NUMORD.Value,Short)
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal FCPMCH_FCPM_CODE_FK_PK As Integer, ByVal FCPMCH_CH_CODE_FK_PK As Integer, ByVal FCPMCH_NUMORD As Global.System.Nullable(Of Short)) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(FCPMCH_FCPM_CODE_FK_PK,Integer)
            Me.Adapter.InsertCommand.Parameters(1).Value = CType(FCPMCH_CH_CODE_FK_PK,Integer)
            If (FCPMCH_NUMORD.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(FCPMCH_NUMORD.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal FCPMCH_FCPM_CODE_FK_PK As Integer, ByVal FCPMCH_CH_CODE_FK_PK As Integer, ByVal FCPMCH_NUMORD As Global.System.Nullable(Of Short), ByVal Original_FCPMCH_FCPM_CODE_FK_PK As Integer, ByVal Original_FCPMCH_CH_CODE_FK_PK As Integer, ByVal Original_FCPMCH_NUMORD As Global.System.Nullable(Of Short)) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(FCPMCH_FCPM_CODE_FK_PK,Integer)
            Me.Adapter.UpdateCommand.Parameters(1).Value = CType(FCPMCH_CH_CODE_FK_PK,Integer)
            If (FCPMCH_NUMORD.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(FCPMCH_NUMORD.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(3).Value = CType(Original_FCPMCH_FCPM_CODE_FK_PK,Integer)
            Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Original_FCPMCH_CH_CODE_FK_PK,Integer)
            If (Original_FCPMCH_NUMORD.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Original_FCPMCH_NUMORD.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal FCPMCH_NUMORD As Global.System.Nullable(Of Short), ByVal Original_FCPMCH_FCPM_CODE_FK_PK As Integer, ByVal Original_FCPMCH_CH_CODE_FK_PK As Integer, ByVal Original_FCPMCH_NUMORD As Global.System.Nullable(Of Short)) As Integer
            Return Me.Update(Original_FCPMCH_FCPM_CODE_FK_PK, Original_FCPMCH_CH_CODE_FK_PK, FCPMCH_NUMORD, Original_FCPMCH_FCPM_CODE_FK_PK, Original_FCPMCH_CH_CODE_FK_PK, Original_FCPMCH_NUMORD)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class FCPMSP_CIPEMG_SPETableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "FCPMSP_CIPEMG_SPE"
            tableMapping.ColumnMappings.Add("FCPMSP_FCPM_CODE_FK_PK", "FCPMSP_FCPM_CODE_FK_PK")
            tableMapping.ColumnMappings.Add("FCPMSP_SP_CODE_FK_PK", "FCPMSP_SP_CODE_FK_PK")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [THERIAQUE].[FCPMSP_CIPEMG_SPE] WHERE (([FCPMSP_FCPM_CODE_FK_PK] = @O"& _ 
                "riginal_FCPMSP_FCPM_CODE_FK_PK) AND ([FCPMSP_SP_CODE_FK_PK] = @Original_FCPMSP_S"& _ 
                "P_CODE_FK_PK))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FCPMSP_FCPM_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMSP_FCPM_CODE_FK_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FCPMSP_SP_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMSP_SP_CODE_FK_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [THERIAQUE].[FCPMSP_CIPEMG_SPE] ([FCPMSP_FCPM_CODE_FK_PK], [FCPMSP_SP"& _ 
                "_CODE_FK_PK]) VALUES (@FCPMSP_FCPM_CODE_FK_PK, @FCPMSP_SP_CODE_FK_PK);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT F"& _ 
                "CPMSP_FCPM_CODE_FK_PK, FCPMSP_SP_CODE_FK_PK FROM THERIAQUE.FCPMSP_CIPEMG_SPE WHE"& _ 
                "RE (FCPMSP_FCPM_CODE_FK_PK = @FCPMSP_FCPM_CODE_FK_PK) AND (FCPMSP_SP_CODE_FK_PK "& _ 
                "= @FCPMSP_SP_CODE_FK_PK)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FCPMSP_FCPM_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMSP_FCPM_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FCPMSP_SP_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMSP_SP_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [THERIAQUE].[FCPMSP_CIPEMG_SPE] SET [FCPMSP_FCPM_CODE_FK_PK] = @FCPMSP_FCP"& _ 
                "M_CODE_FK_PK, [FCPMSP_SP_CODE_FK_PK] = @FCPMSP_SP_CODE_FK_PK WHERE (([FCPMSP_FCP"& _ 
                "M_CODE_FK_PK] = @Original_FCPMSP_FCPM_CODE_FK_PK) AND ([FCPMSP_SP_CODE_FK_PK] = "& _ 
                "@Original_FCPMSP_SP_CODE_FK_PK));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT FCPMSP_FCPM_CODE_FK_PK, FCPMSP_SP_CODE"& _ 
                "_FK_PK FROM THERIAQUE.FCPMSP_CIPEMG_SPE WHERE (FCPMSP_FCPM_CODE_FK_PK = @FCPMSP_"& _ 
                "FCPM_CODE_FK_PK) AND (FCPMSP_SP_CODE_FK_PK = @FCPMSP_SP_CODE_FK_PK)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FCPMSP_FCPM_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMSP_FCPM_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FCPMSP_SP_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMSP_SP_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FCPMSP_FCPM_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMSP_FCPM_CODE_FK_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FCPMSP_SP_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMSP_SP_CODE_FK_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Theriaque.My.MySettings.Default.ConnectionString5
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT FCPMSP_FCPM_CODE_FK_PK, FCPMSP_SP_CODE_FK_PK FROM THERIAQUE.FCPMSP_CIPEMG_"& _ 
                "SPE"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT FCPMSP_FCPM_CODE_FK_PK, FCPMSP_SP_CODE_FK_PK FROM THERIAQUE.FCPMSP_CIPEMG_"& _ 
                "SPE"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE FCPMSP_FCPM_CODE_FK_PK = @FCPMSP_FCPM_CODE_FK_PK"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FCPMSP_FCPM_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMSP_FCPM_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsTheriaque_Cipemg_Code.FCPMSP_CIPEMG_SPEDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsTheriaque_Cipemg_Code.FCPMSP_CIPEMG_SPEDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsTheriaque_Cipemg_Code.FCPMSP_CIPEMG_SPEDataTable = New dsTheriaque_Cipemg_Code.FCPMSP_CIPEMG_SPEDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByCode(ByVal dataTable As dsTheriaque_Cipemg_Code.FCPMSP_CIPEMG_SPEDataTable, ByVal FCPMSP_FCPM_CODE_FK_PK As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(FCPMSP_FCPM_CODE_FK_PK,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByCode(ByVal FCPMSP_FCPM_CODE_FK_PK As Integer) As dsTheriaque_Cipemg_Code.FCPMSP_CIPEMG_SPEDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(FCPMSP_FCPM_CODE_FK_PK,Integer)
            Dim dataTable As dsTheriaque_Cipemg_Code.FCPMSP_CIPEMG_SPEDataTable = New dsTheriaque_Cipemg_Code.FCPMSP_CIPEMG_SPEDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsTheriaque_Cipemg_Code.FCPMSP_CIPEMG_SPEDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsTheriaque_Cipemg_Code) As Integer
            Return Me.Adapter.Update(dataSet, "FCPMSP_CIPEMG_SPE")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_FCPMSP_FCPM_CODE_FK_PK As Integer, ByVal Original_FCPMSP_SP_CODE_FK_PK As Integer) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_FCPMSP_FCPM_CODE_FK_PK,Integer)
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_FCPMSP_SP_CODE_FK_PK,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal FCPMSP_FCPM_CODE_FK_PK As Integer, ByVal FCPMSP_SP_CODE_FK_PK As Integer) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(FCPMSP_FCPM_CODE_FK_PK,Integer)
            Me.Adapter.InsertCommand.Parameters(1).Value = CType(FCPMSP_SP_CODE_FK_PK,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal FCPMSP_FCPM_CODE_FK_PK As Integer, ByVal FCPMSP_SP_CODE_FK_PK As Integer, ByVal Original_FCPMSP_FCPM_CODE_FK_PK As Integer, ByVal Original_FCPMSP_SP_CODE_FK_PK As Integer) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(FCPMSP_FCPM_CODE_FK_PK,Integer)
            Me.Adapter.UpdateCommand.Parameters(1).Value = CType(FCPMSP_SP_CODE_FK_PK,Integer)
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Original_FCPMSP_FCPM_CODE_FK_PK,Integer)
            Me.Adapter.UpdateCommand.Parameters(3).Value = CType(Original_FCPMSP_SP_CODE_FK_PK,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal Original_FCPMSP_FCPM_CODE_FK_PK As Integer, ByVal Original_FCPMSP_SP_CODE_FK_PK As Integer) As Integer
            Return Me.Update(Original_FCPMSP_FCPM_CODE_FK_PK, Original_FCPMSP_SP_CODE_FK_PK, Original_FCPMSP_FCPM_CODE_FK_PK, Original_FCPMSP_SP_CODE_FK_PK)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class FCPMTER_FCPM_TERRAINTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "FCPMTER_FCPM_TERRAIN"
            tableMapping.ColumnMappings.Add("FCPMTER_FCPM_CODE_FK_PK", "FCPMTER_FCPM_CODE_FK_PK")
            tableMapping.ColumnMappings.Add("FCPMTER_CDF_TER_CODE_FK_PK", "FCPMTER_CDF_TER_CODE_FK_PK")
            tableMapping.ColumnMappings.Add("FCPMTER_NATURE_CIPEMG_PK", "FCPMTER_NATURE_CIPEMG_PK")
            tableMapping.ColumnMappings.Add("FCPMTER_NUMSEQ_PK", "FCPMTER_NUMSEQ_PK")
            tableMapping.ColumnMappings.Add("FCPMTER_NUMORD", "FCPMTER_NUMORD")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [THERIAQUE].[FCPMTER_FCPM_TERRAIN] WHERE (([FCPMTER_FCPM_CODE_FK_PK] "& _ 
                "= @Original_FCPMTER_FCPM_CODE_FK_PK) AND ([FCPMTER_CDF_TER_CODE_FK_PK] = @Origin"& _ 
                "al_FCPMTER_CDF_TER_CODE_FK_PK) AND ([FCPMTER_NATURE_CIPEMG_PK] = @Original_FCPMT"& _ 
                "ER_NATURE_CIPEMG_PK) AND ([FCPMTER_NUMSEQ_PK] = @Original_FCPMTER_NUMSEQ_PK) AND"& _ 
                " ((@IsNull_FCPMTER_NUMORD = 1 AND [FCPMTER_NUMORD] IS NULL) OR ([FCPMTER_NUMORD]"& _ 
                " = @Original_FCPMTER_NUMORD)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FCPMTER_FCPM_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMTER_FCPM_CODE_FK_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FCPMTER_CDF_TER_CODE_FK_PK", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMTER_CDF_TER_CODE_FK_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FCPMTER_NATURE_CIPEMG_PK", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMTER_NATURE_CIPEMG_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FCPMTER_NUMSEQ_PK", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMTER_NUMSEQ_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FCPMTER_NUMORD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMTER_NUMORD", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FCPMTER_NUMORD", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMTER_NUMORD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [THERIAQUE].[FCPMTER_FCPM_TERRAIN] ([FCPMTER_FCPM_CODE_FK_PK], [FCPMT"& _ 
                "ER_CDF_TER_CODE_FK_PK], [FCPMTER_NATURE_CIPEMG_PK], [FCPMTER_NUMSEQ_PK], [FCPMTE"& _ 
                "R_NUMORD]) VALUES (@FCPMTER_FCPM_CODE_FK_PK, @FCPMTER_CDF_TER_CODE_FK_PK, @FCPMT"& _ 
                "ER_NATURE_CIPEMG_PK, @FCPMTER_NUMSEQ_PK, @FCPMTER_NUMORD);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT FCPMTER_FCPM_"& _ 
                "CODE_FK_PK, FCPMTER_CDF_TER_CODE_FK_PK, FCPMTER_NATURE_CIPEMG_PK, FCPMTER_NUMSEQ"& _ 
                "_PK, FCPMTER_NUMORD FROM THERIAQUE.FCPMTER_FCPM_TERRAIN WHERE (FCPMTER_CDF_TER_C"& _ 
                "ODE_FK_PK = @FCPMTER_CDF_TER_CODE_FK_PK) AND (FCPMTER_FCPM_CODE_FK_PK = @FCPMTER"& _ 
                "_FCPM_CODE_FK_PK) AND (FCPMTER_NATURE_CIPEMG_PK = @FCPMTER_NATURE_CIPEMG_PK) AND"& _ 
                " (FCPMTER_NUMSEQ_PK = @FCPMTER_NUMSEQ_PK)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FCPMTER_FCPM_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMTER_FCPM_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FCPMTER_CDF_TER_CODE_FK_PK", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMTER_CDF_TER_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FCPMTER_NATURE_CIPEMG_PK", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMTER_NATURE_CIPEMG_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FCPMTER_NUMSEQ_PK", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMTER_NUMSEQ_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FCPMTER_NUMORD", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMTER_NUMORD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [THERIAQUE].[FCPMTER_FCPM_TERRAIN] SET [FCPMTER_FCPM_CODE_FK_PK] = @FCPMTE"& _ 
                "R_FCPM_CODE_FK_PK, [FCPMTER_CDF_TER_CODE_FK_PK] = @FCPMTER_CDF_TER_CODE_FK_PK, ["& _ 
                "FCPMTER_NATURE_CIPEMG_PK] = @FCPMTER_NATURE_CIPEMG_PK, [FCPMTER_NUMSEQ_PK] = @FC"& _ 
                "PMTER_NUMSEQ_PK, [FCPMTER_NUMORD] = @FCPMTER_NUMORD WHERE (([FCPMTER_FCPM_CODE_F"& _ 
                "K_PK] = @Original_FCPMTER_FCPM_CODE_FK_PK) AND ([FCPMTER_CDF_TER_CODE_FK_PK] = @"& _ 
                "Original_FCPMTER_CDF_TER_CODE_FK_PK) AND ([FCPMTER_NATURE_CIPEMG_PK] = @Original"& _ 
                "_FCPMTER_NATURE_CIPEMG_PK) AND ([FCPMTER_NUMSEQ_PK] = @Original_FCPMTER_NUMSEQ_P"& _ 
                "K) AND ((@IsNull_FCPMTER_NUMORD = 1 AND [FCPMTER_NUMORD] IS NULL) OR ([FCPMTER_N"& _ 
                "UMORD] = @Original_FCPMTER_NUMORD)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT FCPMTER_FCPM_CODE_FK_PK, FCPMTER_C"& _ 
                "DF_TER_CODE_FK_PK, FCPMTER_NATURE_CIPEMG_PK, FCPMTER_NUMSEQ_PK, FCPMTER_NUMORD F"& _ 
                "ROM THERIAQUE.FCPMTER_FCPM_TERRAIN WHERE (FCPMTER_CDF_TER_CODE_FK_PK = @FCPMTER_"& _ 
                "CDF_TER_CODE_FK_PK) AND (FCPMTER_FCPM_CODE_FK_PK = @FCPMTER_FCPM_CODE_FK_PK) AND"& _ 
                " (FCPMTER_NATURE_CIPEMG_PK = @FCPMTER_NATURE_CIPEMG_PK) AND (FCPMTER_NUMSEQ_PK ="& _ 
                " @FCPMTER_NUMSEQ_PK)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FCPMTER_FCPM_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMTER_FCPM_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FCPMTER_CDF_TER_CODE_FK_PK", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMTER_CDF_TER_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FCPMTER_NATURE_CIPEMG_PK", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMTER_NATURE_CIPEMG_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FCPMTER_NUMSEQ_PK", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMTER_NUMSEQ_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FCPMTER_NUMORD", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMTER_NUMORD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FCPMTER_FCPM_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMTER_FCPM_CODE_FK_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FCPMTER_CDF_TER_CODE_FK_PK", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMTER_CDF_TER_CODE_FK_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FCPMTER_NATURE_CIPEMG_PK", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMTER_NATURE_CIPEMG_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FCPMTER_NUMSEQ_PK", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMTER_NUMSEQ_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FCPMTER_NUMORD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMTER_NUMORD", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FCPMTER_NUMORD", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMTER_NUMORD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Theriaque.My.MySettings.Default.ConnectionString5
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(2) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT FCPMTER_FCPM_CODE_FK_PK, FCPMTER_CDF_TER_CODE_FK_PK, FCPMTER_NATURE_CIPEMG"& _ 
                "_PK, FCPMTER_NUMSEQ_PK, FCPMTER_NUMORD FROM THERIAQUE.FCPMTER_FCPM_TERRAIN"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT FCPMTER_FCPM_CODE_FK_PK, FCPMTER_CDF_TER_CODE_FK_PK, FCPMTER_NATURE_CIPEMG"& _ 
                "_PK, FCPMTER_NUMSEQ_PK, FCPMTER_NUMORD FROM THERIAQUE.FCPMTER_FCPM_TERRAIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHER"& _ 
                "E FCPMTER_FCPM_CODE_FK_PK = @FCPMTER_FCPM_CODE_FK_PK"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FCPMTER_FCPM_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMTER_FCPM_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT FCPMTER_FCPM_CODE_FK_PK, FCPMTER_CDF_TER_CODE_FK_PK, FCPMTER_NATURE_CIPEMG"& _ 
                "_PK, FCPMTER_NUMSEQ_PK, FCPMTER_NUMORD FROM THERIAQUE.FCPMTER_FCPM_TERRAIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHER"& _ 
                "E FCPMTER_FCPM_CODE_FK_PK = @FCPMTER_FCPM_CODE_FK_PK"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND FCPMTER_NATURE_CIPEMG_"& _ 
                "PK = @FCPMTER_NATURE_CIPEMG_PK"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FCPMTER_FCPM_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMTER_FCPM_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FCPMTER_NATURE_CIPEMG_PK", Global.System.Data.SqlDbType.[Char], 1, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMTER_NATURE_CIPEMG_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsTheriaque_Cipemg_Code.FCPMTER_FCPM_TERRAINDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsTheriaque_Cipemg_Code.FCPMTER_FCPM_TERRAINDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsTheriaque_Cipemg_Code.FCPMTER_FCPM_TERRAINDataTable = New dsTheriaque_Cipemg_Code.FCPMTER_FCPM_TERRAINDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByCode(ByVal dataTable As dsTheriaque_Cipemg_Code.FCPMTER_FCPM_TERRAINDataTable, ByVal FCPMTER_FCPM_CODE_FK_PK As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(FCPMTER_FCPM_CODE_FK_PK,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByCode(ByVal FCPMTER_FCPM_CODE_FK_PK As Integer) As dsTheriaque_Cipemg_Code.FCPMTER_FCPM_TERRAINDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(FCPMTER_FCPM_CODE_FK_PK,Integer)
            Dim dataTable As dsTheriaque_Cipemg_Code.FCPMTER_FCPM_TERRAINDataTable = New dsTheriaque_Cipemg_Code.FCPMTER_FCPM_TERRAINDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByCodeAndNature(ByVal dataTable As dsTheriaque_Cipemg_Code.FCPMTER_FCPM_TERRAINDataTable, ByVal FCPMTER_FCPM_CODE_FK_PK As Integer, ByVal FCPMTER_NATURE_CIPEMG_PK As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(FCPMTER_FCPM_CODE_FK_PK,Integer)
            If (FCPMTER_NATURE_CIPEMG_PK Is Nothing) Then
                Throw New Global.System.ArgumentNullException("FCPMTER_NATURE_CIPEMG_PK")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(FCPMTER_NATURE_CIPEMG_PK,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByCodeAndNature(ByVal FCPMTER_FCPM_CODE_FK_PK As Integer, ByVal FCPMTER_NATURE_CIPEMG_PK As String) As dsTheriaque_Cipemg_Code.FCPMTER_FCPM_TERRAINDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(FCPMTER_FCPM_CODE_FK_PK,Integer)
            If (FCPMTER_NATURE_CIPEMG_PK Is Nothing) Then
                Throw New Global.System.ArgumentNullException("FCPMTER_NATURE_CIPEMG_PK")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(FCPMTER_NATURE_CIPEMG_PK,String)
            End If
            Dim dataTable As dsTheriaque_Cipemg_Code.FCPMTER_FCPM_TERRAINDataTable = New dsTheriaque_Cipemg_Code.FCPMTER_FCPM_TERRAINDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsTheriaque_Cipemg_Code.FCPMTER_FCPM_TERRAINDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsTheriaque_Cipemg_Code) As Integer
            Return Me.Adapter.Update(dataSet, "FCPMTER_FCPM_TERRAIN")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_FCPMTER_FCPM_CODE_FK_PK As Integer, ByVal Original_FCPMTER_CDF_TER_CODE_FK_PK As String, ByVal Original_FCPMTER_NATURE_CIPEMG_PK As String, ByVal Original_FCPMTER_NUMSEQ_PK As Short, ByVal Original_FCPMTER_NUMORD As Global.System.Nullable(Of Short)) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_FCPMTER_FCPM_CODE_FK_PK,Integer)
            If (Original_FCPMTER_CDF_TER_CODE_FK_PK Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_FCPMTER_CDF_TER_CODE_FK_PK")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_FCPMTER_CDF_TER_CODE_FK_PK,String)
            End If
            If (Original_FCPMTER_NATURE_CIPEMG_PK Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_FCPMTER_NATURE_CIPEMG_PK")
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_FCPMTER_NATURE_CIPEMG_PK,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_FCPMTER_NUMSEQ_PK,Short)
            If (Original_FCPMTER_NUMORD.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_FCPMTER_NUMORD.Value,Short)
            Else
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal FCPMTER_FCPM_CODE_FK_PK As Integer, ByVal FCPMTER_CDF_TER_CODE_FK_PK As String, ByVal FCPMTER_NATURE_CIPEMG_PK As String, ByVal FCPMTER_NUMSEQ_PK As Short, ByVal FCPMTER_NUMORD As Global.System.Nullable(Of Short)) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(FCPMTER_FCPM_CODE_FK_PK,Integer)
            If (FCPMTER_CDF_TER_CODE_FK_PK Is Nothing) Then
                Throw New Global.System.ArgumentNullException("FCPMTER_CDF_TER_CODE_FK_PK")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(FCPMTER_CDF_TER_CODE_FK_PK,String)
            End If
            If (FCPMTER_NATURE_CIPEMG_PK Is Nothing) Then
                Throw New Global.System.ArgumentNullException("FCPMTER_NATURE_CIPEMG_PK")
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(FCPMTER_NATURE_CIPEMG_PK,String)
            End If
            Me.Adapter.InsertCommand.Parameters(3).Value = CType(FCPMTER_NUMSEQ_PK,Short)
            If (FCPMTER_NUMORD.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(FCPMTER_NUMORD.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal FCPMTER_FCPM_CODE_FK_PK As Integer, ByVal FCPMTER_CDF_TER_CODE_FK_PK As String, ByVal FCPMTER_NATURE_CIPEMG_PK As String, ByVal FCPMTER_NUMSEQ_PK As Short, ByVal FCPMTER_NUMORD As Global.System.Nullable(Of Short), ByVal Original_FCPMTER_FCPM_CODE_FK_PK As Integer, ByVal Original_FCPMTER_CDF_TER_CODE_FK_PK As String, ByVal Original_FCPMTER_NATURE_CIPEMG_PK As String, ByVal Original_FCPMTER_NUMSEQ_PK As Short, ByVal Original_FCPMTER_NUMORD As Global.System.Nullable(Of Short)) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(FCPMTER_FCPM_CODE_FK_PK,Integer)
            If (FCPMTER_CDF_TER_CODE_FK_PK Is Nothing) Then
                Throw New Global.System.ArgumentNullException("FCPMTER_CDF_TER_CODE_FK_PK")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(FCPMTER_CDF_TER_CODE_FK_PK,String)
            End If
            If (FCPMTER_NATURE_CIPEMG_PK Is Nothing) Then
                Throw New Global.System.ArgumentNullException("FCPMTER_NATURE_CIPEMG_PK")
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(FCPMTER_NATURE_CIPEMG_PK,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(3).Value = CType(FCPMTER_NUMSEQ_PK,Short)
            If (FCPMTER_NUMORD.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(FCPMTER_NUMORD.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Original_FCPMTER_FCPM_CODE_FK_PK,Integer)
            If (Original_FCPMTER_CDF_TER_CODE_FK_PK Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_FCPMTER_CDF_TER_CODE_FK_PK")
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Original_FCPMTER_CDF_TER_CODE_FK_PK,String)
            End If
            If (Original_FCPMTER_NATURE_CIPEMG_PK Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_FCPMTER_NATURE_CIPEMG_PK")
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Original_FCPMTER_NATURE_CIPEMG_PK,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Original_FCPMTER_NUMSEQ_PK,Short)
            If (Original_FCPMTER_NUMORD.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(Original_FCPMTER_NUMORD.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal FCPMTER_NUMORD As Global.System.Nullable(Of Short), ByVal Original_FCPMTER_FCPM_CODE_FK_PK As Integer, ByVal Original_FCPMTER_CDF_TER_CODE_FK_PK As String, ByVal Original_FCPMTER_NATURE_CIPEMG_PK As String, ByVal Original_FCPMTER_NUMSEQ_PK As Short, ByVal Original_FCPMTER_NUMORD As Global.System.Nullable(Of Short)) As Integer
            Return Me.Update(Original_FCPMTER_FCPM_CODE_FK_PK, Original_FCPMTER_CDF_TER_CODE_FK_PK, Original_FCPMTER_NATURE_CIPEMG_PK, Original_FCPMTER_NUMSEQ_PK, FCPMTER_NUMORD, Original_FCPMTER_FCPM_CODE_FK_PK, Original_FCPMTER_CDF_TER_CODE_FK_PK, Original_FCPMTER_NATURE_CIPEMG_PK, Original_FCPMTER_NUMSEQ_PK, Original_FCPMTER_NUMORD)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class TERCOM_TERRAIN_COMMENTAIRETableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "TERCOM_TERRAIN_COMMENTAIRE"
            tableMapping.ColumnMappings.Add("TERCOM_FCPM_CODE_FK_PK", "TERCOM_FCPM_CODE_FK_PK")
            tableMapping.ColumnMappings.Add("TERCOM_CDF_TER_CODE_FK_PK", "TERCOM_CDF_TER_CODE_FK_PK")
            tableMapping.ColumnMappings.Add("TERCOM_NUMSEQ_TER_FK_PK", "TERCOM_NUMSEQ_TER_FK_PK")
            tableMapping.ColumnMappings.Add("TERCOM_CDF_COM_CODE_FK_PK", "TERCOM_CDF_COM_CODE_FK_PK")
            tableMapping.ColumnMappings.Add("TERCOM_NATURE_CIPEMG_FK_PK", "TERCOM_NATURE_CIPEMG_FK_PK")
            tableMapping.ColumnMappings.Add("TERCOM_NUMSEQ", "TERCOM_NUMSEQ")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [THERIAQUE].[TERCOM_TERRAIN_COMMENTAIRE] WHERE (([TERCOM_FCPM_CODE_FK"& _ 
                "_PK] = @Original_TERCOM_FCPM_CODE_FK_PK) AND ([TERCOM_CDF_TER_CODE_FK_PK] = @Ori"& _ 
                "ginal_TERCOM_CDF_TER_CODE_FK_PK) AND ([TERCOM_NUMSEQ_TER_FK_PK] = @Original_TERC"& _ 
                "OM_NUMSEQ_TER_FK_PK) AND ([TERCOM_CDF_COM_CODE_FK_PK] = @Original_TERCOM_CDF_COM"& _ 
                "_CODE_FK_PK) AND ([TERCOM_NATURE_CIPEMG_FK_PK] = @Original_TERCOM_NATURE_CIPEMG_"& _ 
                "FK_PK) AND ((@IsNull_TERCOM_NUMSEQ = 1 AND [TERCOM_NUMSEQ] IS NULL) OR ([TERCOM_"& _ 
                "NUMSEQ] = @Original_TERCOM_NUMSEQ)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TERCOM_FCPM_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TERCOM_FCPM_CODE_FK_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TERCOM_CDF_TER_CODE_FK_PK", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TERCOM_CDF_TER_CODE_FK_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TERCOM_NUMSEQ_TER_FK_PK", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TERCOM_NUMSEQ_TER_FK_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TERCOM_CDF_COM_CODE_FK_PK", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TERCOM_CDF_COM_CODE_FK_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TERCOM_NATURE_CIPEMG_FK_PK", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TERCOM_NATURE_CIPEMG_FK_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TERCOM_NUMSEQ", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TERCOM_NUMSEQ", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TERCOM_NUMSEQ", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TERCOM_NUMSEQ", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [THERIAQUE].[TERCOM_TERRAIN_COMMENTAIRE] ([TERCOM_FCPM_CODE_FK_PK], ["& _ 
                "TERCOM_CDF_TER_CODE_FK_PK], [TERCOM_NUMSEQ_TER_FK_PK], [TERCOM_CDF_COM_CODE_FK_P"& _ 
                "K], [TERCOM_NATURE_CIPEMG_FK_PK], [TERCOM_NUMSEQ]) VALUES (@TERCOM_FCPM_CODE_FK_"& _ 
                "PK, @TERCOM_CDF_TER_CODE_FK_PK, @TERCOM_NUMSEQ_TER_FK_PK, @TERCOM_CDF_COM_CODE_F"& _ 
                "K_PK, @TERCOM_NATURE_CIPEMG_FK_PK, @TERCOM_NUMSEQ);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT TERCOM_FCPM_CODE_FK_"& _ 
                "PK, TERCOM_CDF_TER_CODE_FK_PK, TERCOM_NUMSEQ_TER_FK_PK, TERCOM_CDF_COM_CODE_FK_P"& _ 
                "K, TERCOM_NATURE_CIPEMG_FK_PK, TERCOM_NUMSEQ FROM THERIAQUE.TERCOM_TERRAIN_COMME"& _ 
                "NTAIRE WHERE (TERCOM_CDF_COM_CODE_FK_PK = @TERCOM_CDF_COM_CODE_FK_PK) AND (TERCO"& _ 
                "M_CDF_TER_CODE_FK_PK = @TERCOM_CDF_TER_CODE_FK_PK) AND (TERCOM_FCPM_CODE_FK_PK ="& _ 
                " @TERCOM_FCPM_CODE_FK_PK) AND (TERCOM_NATURE_CIPEMG_FK_PK = @TERCOM_NATURE_CIPEM"& _ 
                "G_FK_PK) AND (TERCOM_NUMSEQ_TER_FK_PK = @TERCOM_NUMSEQ_TER_FK_PK)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TERCOM_FCPM_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TERCOM_FCPM_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TERCOM_CDF_TER_CODE_FK_PK", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TERCOM_CDF_TER_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TERCOM_NUMSEQ_TER_FK_PK", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TERCOM_NUMSEQ_TER_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TERCOM_CDF_COM_CODE_FK_PK", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TERCOM_CDF_COM_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TERCOM_NATURE_CIPEMG_FK_PK", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TERCOM_NATURE_CIPEMG_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TERCOM_NUMSEQ", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TERCOM_NUMSEQ", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [THERIAQUE].[TERCOM_TERRAIN_COMMENTAIRE] SET [TERCOM_FCPM_CODE_FK_PK] = @T"& _ 
                "ERCOM_FCPM_CODE_FK_PK, [TERCOM_CDF_TER_CODE_FK_PK] = @TERCOM_CDF_TER_CODE_FK_PK,"& _ 
                " [TERCOM_NUMSEQ_TER_FK_PK] = @TERCOM_NUMSEQ_TER_FK_PK, [TERCOM_CDF_COM_CODE_FK_P"& _ 
                "K] = @TERCOM_CDF_COM_CODE_FK_PK, [TERCOM_NATURE_CIPEMG_FK_PK] = @TERCOM_NATURE_C"& _ 
                "IPEMG_FK_PK, [TERCOM_NUMSEQ] = @TERCOM_NUMSEQ WHERE (([TERCOM_FCPM_CODE_FK_PK] ="& _ 
                " @Original_TERCOM_FCPM_CODE_FK_PK) AND ([TERCOM_CDF_TER_CODE_FK_PK] = @Original_"& _ 
                "TERCOM_CDF_TER_CODE_FK_PK) AND ([TERCOM_NUMSEQ_TER_FK_PK] = @Original_TERCOM_NUM"& _ 
                "SEQ_TER_FK_PK) AND ([TERCOM_CDF_COM_CODE_FK_PK] = @Original_TERCOM_CDF_COM_CODE_"& _ 
                "FK_PK) AND ([TERCOM_NATURE_CIPEMG_FK_PK] = @Original_TERCOM_NATURE_CIPEMG_FK_PK)"& _ 
                " AND ((@IsNull_TERCOM_NUMSEQ = 1 AND [TERCOM_NUMSEQ] IS NULL) OR ([TERCOM_NUMSEQ"& _ 
                "] = @Original_TERCOM_NUMSEQ)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT TERCOM_FCPM_CODE_FK_PK, TERCOM_CDF_TER_C"& _ 
                "ODE_FK_PK, TERCOM_NUMSEQ_TER_FK_PK, TERCOM_CDF_COM_CODE_FK_PK, TERCOM_NATURE_CIP"& _ 
                "EMG_FK_PK, TERCOM_NUMSEQ FROM THERIAQUE.TERCOM_TERRAIN_COMMENTAIRE WHERE (TERCOM"& _ 
                "_CDF_COM_CODE_FK_PK = @TERCOM_CDF_COM_CODE_FK_PK) AND (TERCOM_CDF_TER_CODE_FK_PK"& _ 
                " = @TERCOM_CDF_TER_CODE_FK_PK) AND (TERCOM_FCPM_CODE_FK_PK = @TERCOM_FCPM_CODE_F"& _ 
                "K_PK) AND (TERCOM_NATURE_CIPEMG_FK_PK = @TERCOM_NATURE_CIPEMG_FK_PK) AND (TERCOM"& _ 
                "_NUMSEQ_TER_FK_PK = @TERCOM_NUMSEQ_TER_FK_PK)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TERCOM_FCPM_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TERCOM_FCPM_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TERCOM_CDF_TER_CODE_FK_PK", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TERCOM_CDF_TER_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TERCOM_NUMSEQ_TER_FK_PK", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TERCOM_NUMSEQ_TER_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TERCOM_CDF_COM_CODE_FK_PK", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TERCOM_CDF_COM_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TERCOM_NATURE_CIPEMG_FK_PK", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TERCOM_NATURE_CIPEMG_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TERCOM_NUMSEQ", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TERCOM_NUMSEQ", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TERCOM_FCPM_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TERCOM_FCPM_CODE_FK_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TERCOM_CDF_TER_CODE_FK_PK", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TERCOM_CDF_TER_CODE_FK_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TERCOM_NUMSEQ_TER_FK_PK", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TERCOM_NUMSEQ_TER_FK_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TERCOM_CDF_COM_CODE_FK_PK", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TERCOM_CDF_COM_CODE_FK_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TERCOM_NATURE_CIPEMG_FK_PK", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TERCOM_NATURE_CIPEMG_FK_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TERCOM_NUMSEQ", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TERCOM_NUMSEQ", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TERCOM_NUMSEQ", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TERCOM_NUMSEQ", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Theriaque.My.MySettings.Default.ConnectionString5
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT TERCOM_FCPM_CODE_FK_PK, TERCOM_CDF_TER_CODE_FK_PK, TERCOM_NUMSEQ_TER_FK_PK"& _ 
                ", TERCOM_CDF_COM_CODE_FK_PK, TERCOM_NATURE_CIPEMG_FK_PK, TERCOM_NUMSEQ FROM THER"& _ 
                "IAQUE.TERCOM_TERRAIN_COMMENTAIRE"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT TERCOM_FCPM_CODE_FK_PK, TERCOM_CDF_TER_CODE_FK_PK, TERCOM_NUMSEQ_TER_FK_PK"& _ 
                ", TERCOM_CDF_COM_CODE_FK_PK, TERCOM_NATURE_CIPEMG_FK_PK, TERCOM_NUMSEQ FROM THER"& _ 
                "IAQUE.TERCOM_TERRAIN_COMMENTAIRE"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE TERCOM_FCPM_CODE_FK_PK = @TERCOM_FCPM_CO"& _ 
                "DE_FK_PK"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TERCOM_FCPM_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "TERCOM_FCPM_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsTheriaque_Cipemg_Code.TERCOM_TERRAIN_COMMENTAIREDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsTheriaque_Cipemg_Code.TERCOM_TERRAIN_COMMENTAIREDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsTheriaque_Cipemg_Code.TERCOM_TERRAIN_COMMENTAIREDataTable = New dsTheriaque_Cipemg_Code.TERCOM_TERRAIN_COMMENTAIREDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByCode(ByVal dataTable As dsTheriaque_Cipemg_Code.TERCOM_TERRAIN_COMMENTAIREDataTable, ByVal TERCOM_FCPM_CODE_FK_PK As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(TERCOM_FCPM_CODE_FK_PK,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByCode(ByVal TERCOM_FCPM_CODE_FK_PK As Integer) As dsTheriaque_Cipemg_Code.TERCOM_TERRAIN_COMMENTAIREDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(TERCOM_FCPM_CODE_FK_PK,Integer)
            Dim dataTable As dsTheriaque_Cipemg_Code.TERCOM_TERRAIN_COMMENTAIREDataTable = New dsTheriaque_Cipemg_Code.TERCOM_TERRAIN_COMMENTAIREDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsTheriaque_Cipemg_Code.TERCOM_TERRAIN_COMMENTAIREDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsTheriaque_Cipemg_Code) As Integer
            Return Me.Adapter.Update(dataSet, "TERCOM_TERRAIN_COMMENTAIRE")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_TERCOM_FCPM_CODE_FK_PK As Integer, ByVal Original_TERCOM_CDF_TER_CODE_FK_PK As String, ByVal Original_TERCOM_NUMSEQ_TER_FK_PK As Short, ByVal Original_TERCOM_CDF_COM_CODE_FK_PK As String, ByVal Original_TERCOM_NATURE_CIPEMG_FK_PK As String, ByVal Original_TERCOM_NUMSEQ As Global.System.Nullable(Of Short)) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_TERCOM_FCPM_CODE_FK_PK,Integer)
            If (Original_TERCOM_CDF_TER_CODE_FK_PK Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_TERCOM_CDF_TER_CODE_FK_PK")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_TERCOM_CDF_TER_CODE_FK_PK,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_TERCOM_NUMSEQ_TER_FK_PK,Short)
            If (Original_TERCOM_CDF_COM_CODE_FK_PK Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_TERCOM_CDF_COM_CODE_FK_PK")
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_TERCOM_CDF_COM_CODE_FK_PK,String)
            End If
            If (Original_TERCOM_NATURE_CIPEMG_FK_PK Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_TERCOM_NATURE_CIPEMG_FK_PK")
            Else
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_TERCOM_NATURE_CIPEMG_FK_PK,String)
            End If
            If (Original_TERCOM_NUMSEQ.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_TERCOM_NUMSEQ.Value,Short)
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal TERCOM_FCPM_CODE_FK_PK As Integer, ByVal TERCOM_CDF_TER_CODE_FK_PK As String, ByVal TERCOM_NUMSEQ_TER_FK_PK As Short, ByVal TERCOM_CDF_COM_CODE_FK_PK As String, ByVal TERCOM_NATURE_CIPEMG_FK_PK As String, ByVal TERCOM_NUMSEQ As Global.System.Nullable(Of Short)) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(TERCOM_FCPM_CODE_FK_PK,Integer)
            If (TERCOM_CDF_TER_CODE_FK_PK Is Nothing) Then
                Throw New Global.System.ArgumentNullException("TERCOM_CDF_TER_CODE_FK_PK")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(TERCOM_CDF_TER_CODE_FK_PK,String)
            End If
            Me.Adapter.InsertCommand.Parameters(2).Value = CType(TERCOM_NUMSEQ_TER_FK_PK,Short)
            If (TERCOM_CDF_COM_CODE_FK_PK Is Nothing) Then
                Throw New Global.System.ArgumentNullException("TERCOM_CDF_COM_CODE_FK_PK")
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(TERCOM_CDF_COM_CODE_FK_PK,String)
            End If
            If (TERCOM_NATURE_CIPEMG_FK_PK Is Nothing) Then
                Throw New Global.System.ArgumentNullException("TERCOM_NATURE_CIPEMG_FK_PK")
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(TERCOM_NATURE_CIPEMG_FK_PK,String)
            End If
            If (TERCOM_NUMSEQ.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(TERCOM_NUMSEQ.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal TERCOM_FCPM_CODE_FK_PK As Integer, ByVal TERCOM_CDF_TER_CODE_FK_PK As String, ByVal TERCOM_NUMSEQ_TER_FK_PK As Short, ByVal TERCOM_CDF_COM_CODE_FK_PK As String, ByVal TERCOM_NATURE_CIPEMG_FK_PK As String, ByVal TERCOM_NUMSEQ As Global.System.Nullable(Of Short), ByVal Original_TERCOM_FCPM_CODE_FK_PK As Integer, ByVal Original_TERCOM_CDF_TER_CODE_FK_PK As String, ByVal Original_TERCOM_NUMSEQ_TER_FK_PK As Short, ByVal Original_TERCOM_CDF_COM_CODE_FK_PK As String, ByVal Original_TERCOM_NATURE_CIPEMG_FK_PK As String, ByVal Original_TERCOM_NUMSEQ As Global.System.Nullable(Of Short)) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(TERCOM_FCPM_CODE_FK_PK,Integer)
            If (TERCOM_CDF_TER_CODE_FK_PK Is Nothing) Then
                Throw New Global.System.ArgumentNullException("TERCOM_CDF_TER_CODE_FK_PK")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(TERCOM_CDF_TER_CODE_FK_PK,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(TERCOM_NUMSEQ_TER_FK_PK,Short)
            If (TERCOM_CDF_COM_CODE_FK_PK Is Nothing) Then
                Throw New Global.System.ArgumentNullException("TERCOM_CDF_COM_CODE_FK_PK")
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(TERCOM_CDF_COM_CODE_FK_PK,String)
            End If
            If (TERCOM_NATURE_CIPEMG_FK_PK Is Nothing) Then
                Throw New Global.System.ArgumentNullException("TERCOM_NATURE_CIPEMG_FK_PK")
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(TERCOM_NATURE_CIPEMG_FK_PK,String)
            End If
            If (TERCOM_NUMSEQ.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(TERCOM_NUMSEQ.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Original_TERCOM_FCPM_CODE_FK_PK,Integer)
            If (Original_TERCOM_CDF_TER_CODE_FK_PK Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_TERCOM_CDF_TER_CODE_FK_PK")
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Original_TERCOM_CDF_TER_CODE_FK_PK,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Original_TERCOM_NUMSEQ_TER_FK_PK,Short)
            If (Original_TERCOM_CDF_COM_CODE_FK_PK Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_TERCOM_CDF_COM_CODE_FK_PK")
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Original_TERCOM_CDF_COM_CODE_FK_PK,String)
            End If
            If (Original_TERCOM_NATURE_CIPEMG_FK_PK Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_TERCOM_NATURE_CIPEMG_FK_PK")
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(Original_TERCOM_NATURE_CIPEMG_FK_PK,String)
            End If
            If (Original_TERCOM_NUMSEQ.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(Original_TERCOM_NUMSEQ.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal TERCOM_NUMSEQ As Global.System.Nullable(Of Short), ByVal Original_TERCOM_FCPM_CODE_FK_PK As Integer, ByVal Original_TERCOM_CDF_TER_CODE_FK_PK As String, ByVal Original_TERCOM_NUMSEQ_TER_FK_PK As Short, ByVal Original_TERCOM_CDF_COM_CODE_FK_PK As String, ByVal Original_TERCOM_NATURE_CIPEMG_FK_PK As String, ByVal Original_TERCOM_NUMSEQ As Global.System.Nullable(Of Short)) As Integer
            Return Me.Update(Original_TERCOM_FCPM_CODE_FK_PK, Original_TERCOM_CDF_TER_CODE_FK_PK, Original_TERCOM_NUMSEQ_TER_FK_PK, Original_TERCOM_CDF_COM_CODE_FK_PK, Original_TERCOM_NATURE_CIPEMG_FK_PK, TERCOM_NUMSEQ, Original_TERCOM_FCPM_CODE_FK_PK, Original_TERCOM_CDF_TER_CODE_FK_PK, Original_TERCOM_NUMSEQ_TER_FK_PK, Original_TERCOM_CDF_COM_CODE_FK_PK, Original_TERCOM_NATURE_CIPEMG_FK_PK, Original_TERCOM_NUMSEQ)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class NIVCOM_NIVEAU_COMMENTAIRETableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "NIVCOM_NIVEAU_COMMENTAIRE"
            tableMapping.ColumnMappings.Add("NIVCOM_FCPM_CODE_FK_PK", "NIVCOM_FCPM_CODE_FK_PK")
            tableMapping.ColumnMappings.Add("NIVCOM_CDF_TER_CODE_FK_PK", "NIVCOM_CDF_TER_CODE_FK_PK")
            tableMapping.ColumnMappings.Add("NIVCOM_NUMSEQ_TER_FK_PK", "NIVCOM_NUMSEQ_TER_FK_PK")
            tableMapping.ColumnMappings.Add("NIVCOM_CDF_COM_CODE_FK_PK", "NIVCOM_CDF_COM_CODE_FK_PK")
            tableMapping.ColumnMappings.Add("NIVCOM_NATURE_CIPEMG_FK_PK", "NIVCOM_NATURE_CIPEMG_FK_PK")
            tableMapping.ColumnMappings.Add("NIVCOM_NUMSEQ", "NIVCOM_NUMSEQ")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [THERIAQUE].[NIVCOM_NIVEAU_COMMENTAIRE] WHERE (([NIVCOM_FCPM_CODE_FK_"& _ 
                "PK] = @Original_NIVCOM_FCPM_CODE_FK_PK) AND ([NIVCOM_CDF_TER_CODE_FK_PK] = @Orig"& _ 
                "inal_NIVCOM_CDF_TER_CODE_FK_PK) AND ([NIVCOM_NUMSEQ_TER_FK_PK] = @Original_NIVCO"& _ 
                "M_NUMSEQ_TER_FK_PK) AND ([NIVCOM_CDF_COM_CODE_FK_PK] = @Original_NIVCOM_CDF_COM_"& _ 
                "CODE_FK_PK) AND ([NIVCOM_NATURE_CIPEMG_FK_PK] = @Original_NIVCOM_NATURE_CIPEMG_F"& _ 
                "K_PK) AND ((@IsNull_NIVCOM_NUMSEQ = 1 AND [NIVCOM_NUMSEQ] IS NULL) OR ([NIVCOM_N"& _ 
                "UMSEQ] = @Original_NIVCOM_NUMSEQ)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NIVCOM_FCPM_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NIVCOM_FCPM_CODE_FK_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NIVCOM_CDF_TER_CODE_FK_PK", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NIVCOM_CDF_TER_CODE_FK_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NIVCOM_NUMSEQ_TER_FK_PK", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NIVCOM_NUMSEQ_TER_FK_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NIVCOM_CDF_COM_CODE_FK_PK", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NIVCOM_CDF_COM_CODE_FK_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NIVCOM_NATURE_CIPEMG_FK_PK", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NIVCOM_NATURE_CIPEMG_FK_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NIVCOM_NUMSEQ", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NIVCOM_NUMSEQ", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NIVCOM_NUMSEQ", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NIVCOM_NUMSEQ", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [THERIAQUE].[NIVCOM_NIVEAU_COMMENTAIRE] ([NIVCOM_FCPM_CODE_FK_PK], [N"& _ 
                "IVCOM_CDF_TER_CODE_FK_PK], [NIVCOM_NUMSEQ_TER_FK_PK], [NIVCOM_CDF_COM_CODE_FK_PK"& _ 
                "], [NIVCOM_NATURE_CIPEMG_FK_PK], [NIVCOM_NUMSEQ]) VALUES (@NIVCOM_FCPM_CODE_FK_P"& _ 
                "K, @NIVCOM_CDF_TER_CODE_FK_PK, @NIVCOM_NUMSEQ_TER_FK_PK, @NIVCOM_CDF_COM_CODE_FK"& _ 
                "_PK, @NIVCOM_NATURE_CIPEMG_FK_PK, @NIVCOM_NUMSEQ);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT NIVCOM_FCPM_CODE_FK_P"& _ 
                "K, NIVCOM_CDF_TER_CODE_FK_PK, NIVCOM_NUMSEQ_TER_FK_PK, NIVCOM_CDF_COM_CODE_FK_PK"& _ 
                ", NIVCOM_NATURE_CIPEMG_FK_PK, NIVCOM_NUMSEQ FROM THERIAQUE.NIVCOM_NIVEAU_COMMENT"& _ 
                "AIRE WHERE (NIVCOM_CDF_COM_CODE_FK_PK = @NIVCOM_CDF_COM_CODE_FK_PK) AND (NIVCOM_"& _ 
                "CDF_TER_CODE_FK_PK = @NIVCOM_CDF_TER_CODE_FK_PK) AND (NIVCOM_FCPM_CODE_FK_PK = @"& _ 
                "NIVCOM_FCPM_CODE_FK_PK) AND (NIVCOM_NATURE_CIPEMG_FK_PK = @NIVCOM_NATURE_CIPEMG_"& _ 
                "FK_PK) AND (NIVCOM_NUMSEQ_TER_FK_PK = @NIVCOM_NUMSEQ_TER_FK_PK)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NIVCOM_FCPM_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NIVCOM_FCPM_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NIVCOM_CDF_TER_CODE_FK_PK", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NIVCOM_CDF_TER_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NIVCOM_NUMSEQ_TER_FK_PK", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NIVCOM_NUMSEQ_TER_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NIVCOM_CDF_COM_CODE_FK_PK", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NIVCOM_CDF_COM_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NIVCOM_NATURE_CIPEMG_FK_PK", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NIVCOM_NATURE_CIPEMG_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NIVCOM_NUMSEQ", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NIVCOM_NUMSEQ", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [THERIAQUE].[NIVCOM_NIVEAU_COMMENTAIRE] SET [NIVCOM_FCPM_CODE_FK_PK] = @NI"& _ 
                "VCOM_FCPM_CODE_FK_PK, [NIVCOM_CDF_TER_CODE_FK_PK] = @NIVCOM_CDF_TER_CODE_FK_PK, "& _ 
                "[NIVCOM_NUMSEQ_TER_FK_PK] = @NIVCOM_NUMSEQ_TER_FK_PK, [NIVCOM_CDF_COM_CODE_FK_PK"& _ 
                "] = @NIVCOM_CDF_COM_CODE_FK_PK, [NIVCOM_NATURE_CIPEMG_FK_PK] = @NIVCOM_NATURE_CI"& _ 
                "PEMG_FK_PK, [NIVCOM_NUMSEQ] = @NIVCOM_NUMSEQ WHERE (([NIVCOM_FCPM_CODE_FK_PK] = "& _ 
                "@Original_NIVCOM_FCPM_CODE_FK_PK) AND ([NIVCOM_CDF_TER_CODE_FK_PK] = @Original_N"& _ 
                "IVCOM_CDF_TER_CODE_FK_PK) AND ([NIVCOM_NUMSEQ_TER_FK_PK] = @Original_NIVCOM_NUMS"& _ 
                "EQ_TER_FK_PK) AND ([NIVCOM_CDF_COM_CODE_FK_PK] = @Original_NIVCOM_CDF_COM_CODE_F"& _ 
                "K_PK) AND ([NIVCOM_NATURE_CIPEMG_FK_PK] = @Original_NIVCOM_NATURE_CIPEMG_FK_PK) "& _ 
                "AND ((@IsNull_NIVCOM_NUMSEQ = 1 AND [NIVCOM_NUMSEQ] IS NULL) OR ([NIVCOM_NUMSEQ]"& _ 
                " = @Original_NIVCOM_NUMSEQ)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT NIVCOM_FCPM_CODE_FK_PK, NIVCOM_CDF_TER_CO"& _ 
                "DE_FK_PK, NIVCOM_NUMSEQ_TER_FK_PK, NIVCOM_CDF_COM_CODE_FK_PK, NIVCOM_NATURE_CIPE"& _ 
                "MG_FK_PK, NIVCOM_NUMSEQ FROM THERIAQUE.NIVCOM_NIVEAU_COMMENTAIRE WHERE (NIVCOM_C"& _ 
                "DF_COM_CODE_FK_PK = @NIVCOM_CDF_COM_CODE_FK_PK) AND (NIVCOM_CDF_TER_CODE_FK_PK ="& _ 
                " @NIVCOM_CDF_TER_CODE_FK_PK) AND (NIVCOM_FCPM_CODE_FK_PK = @NIVCOM_FCPM_CODE_FK_"& _ 
                "PK) AND (NIVCOM_NATURE_CIPEMG_FK_PK = @NIVCOM_NATURE_CIPEMG_FK_PK) AND (NIVCOM_N"& _ 
                "UMSEQ_TER_FK_PK = @NIVCOM_NUMSEQ_TER_FK_PK)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NIVCOM_FCPM_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NIVCOM_FCPM_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NIVCOM_CDF_TER_CODE_FK_PK", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NIVCOM_CDF_TER_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NIVCOM_NUMSEQ_TER_FK_PK", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NIVCOM_NUMSEQ_TER_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NIVCOM_CDF_COM_CODE_FK_PK", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NIVCOM_CDF_COM_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NIVCOM_NATURE_CIPEMG_FK_PK", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NIVCOM_NATURE_CIPEMG_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NIVCOM_NUMSEQ", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NIVCOM_NUMSEQ", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NIVCOM_FCPM_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NIVCOM_FCPM_CODE_FK_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NIVCOM_CDF_TER_CODE_FK_PK", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NIVCOM_CDF_TER_CODE_FK_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NIVCOM_NUMSEQ_TER_FK_PK", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NIVCOM_NUMSEQ_TER_FK_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NIVCOM_CDF_COM_CODE_FK_PK", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NIVCOM_CDF_COM_CODE_FK_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NIVCOM_NATURE_CIPEMG_FK_PK", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NIVCOM_NATURE_CIPEMG_FK_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NIVCOM_NUMSEQ", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NIVCOM_NUMSEQ", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NIVCOM_NUMSEQ", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NIVCOM_NUMSEQ", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Theriaque.My.MySettings.Default.ConnectionString5
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT NIVCOM_FCPM_CODE_FK_PK, NIVCOM_CDF_TER_CODE_FK_PK, NIVCOM_NUMSEQ_TER_FK_PK"& _ 
                ", NIVCOM_CDF_COM_CODE_FK_PK, NIVCOM_NATURE_CIPEMG_FK_PK, NIVCOM_NUMSEQ FROM THER"& _ 
                "IAQUE.NIVCOM_NIVEAU_COMMENTAIRE"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT NIVCOM_FCPM_CODE_FK_PK, NIVCOM_CDF_TER_CODE_FK_PK, NIVCOM_NUMSEQ_TER_FK_PK"& _ 
                ", NIVCOM_CDF_COM_CODE_FK_PK, NIVCOM_NATURE_CIPEMG_FK_PK, NIVCOM_NUMSEQ FROM "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"TH"& _ 
                "ERIAQUE.NIVCOM_NIVEAU_COMMENTAIRE"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE NIVCOM_FCPM_CODE_FK_PK = @NIVCOM_FCPM_C"& _ 
                "ODE_FK_PK"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NIVCOM_FCPM_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "NIVCOM_FCPM_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsTheriaque_Cipemg_Code.NIVCOM_NIVEAU_COMMENTAIREDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsTheriaque_Cipemg_Code.NIVCOM_NIVEAU_COMMENTAIREDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsTheriaque_Cipemg_Code.NIVCOM_NIVEAU_COMMENTAIREDataTable = New dsTheriaque_Cipemg_Code.NIVCOM_NIVEAU_COMMENTAIREDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByCode(ByVal dataTable As dsTheriaque_Cipemg_Code.NIVCOM_NIVEAU_COMMENTAIREDataTable, ByVal NIVCOM_FCPM_CODE_FK_PK As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(NIVCOM_FCPM_CODE_FK_PK,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByCode(ByVal NIVCOM_FCPM_CODE_FK_PK As Integer) As dsTheriaque_Cipemg_Code.NIVCOM_NIVEAU_COMMENTAIREDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(NIVCOM_FCPM_CODE_FK_PK,Integer)
            Dim dataTable As dsTheriaque_Cipemg_Code.NIVCOM_NIVEAU_COMMENTAIREDataTable = New dsTheriaque_Cipemg_Code.NIVCOM_NIVEAU_COMMENTAIREDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsTheriaque_Cipemg_Code.NIVCOM_NIVEAU_COMMENTAIREDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsTheriaque_Cipemg_Code) As Integer
            Return Me.Adapter.Update(dataSet, "NIVCOM_NIVEAU_COMMENTAIRE")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_NIVCOM_FCPM_CODE_FK_PK As Integer, ByVal Original_NIVCOM_CDF_TER_CODE_FK_PK As String, ByVal Original_NIVCOM_NUMSEQ_TER_FK_PK As Short, ByVal Original_NIVCOM_CDF_COM_CODE_FK_PK As String, ByVal Original_NIVCOM_NATURE_CIPEMG_FK_PK As String, ByVal Original_NIVCOM_NUMSEQ As Global.System.Nullable(Of Short)) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_NIVCOM_FCPM_CODE_FK_PK,Integer)
            If (Original_NIVCOM_CDF_TER_CODE_FK_PK Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_NIVCOM_CDF_TER_CODE_FK_PK")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_NIVCOM_CDF_TER_CODE_FK_PK,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_NIVCOM_NUMSEQ_TER_FK_PK,Short)
            If (Original_NIVCOM_CDF_COM_CODE_FK_PK Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_NIVCOM_CDF_COM_CODE_FK_PK")
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_NIVCOM_CDF_COM_CODE_FK_PK,String)
            End If
            If (Original_NIVCOM_NATURE_CIPEMG_FK_PK Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_NIVCOM_NATURE_CIPEMG_FK_PK")
            Else
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_NIVCOM_NATURE_CIPEMG_FK_PK,String)
            End If
            If (Original_NIVCOM_NUMSEQ.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_NIVCOM_NUMSEQ.Value,Short)
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal NIVCOM_FCPM_CODE_FK_PK As Integer, ByVal NIVCOM_CDF_TER_CODE_FK_PK As String, ByVal NIVCOM_NUMSEQ_TER_FK_PK As Short, ByVal NIVCOM_CDF_COM_CODE_FK_PK As String, ByVal NIVCOM_NATURE_CIPEMG_FK_PK As String, ByVal NIVCOM_NUMSEQ As Global.System.Nullable(Of Short)) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(NIVCOM_FCPM_CODE_FK_PK,Integer)
            If (NIVCOM_CDF_TER_CODE_FK_PK Is Nothing) Then
                Throw New Global.System.ArgumentNullException("NIVCOM_CDF_TER_CODE_FK_PK")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(NIVCOM_CDF_TER_CODE_FK_PK,String)
            End If
            Me.Adapter.InsertCommand.Parameters(2).Value = CType(NIVCOM_NUMSEQ_TER_FK_PK,Short)
            If (NIVCOM_CDF_COM_CODE_FK_PK Is Nothing) Then
                Throw New Global.System.ArgumentNullException("NIVCOM_CDF_COM_CODE_FK_PK")
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(NIVCOM_CDF_COM_CODE_FK_PK,String)
            End If
            If (NIVCOM_NATURE_CIPEMG_FK_PK Is Nothing) Then
                Throw New Global.System.ArgumentNullException("NIVCOM_NATURE_CIPEMG_FK_PK")
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(NIVCOM_NATURE_CIPEMG_FK_PK,String)
            End If
            If (NIVCOM_NUMSEQ.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(NIVCOM_NUMSEQ.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal NIVCOM_FCPM_CODE_FK_PK As Integer, ByVal NIVCOM_CDF_TER_CODE_FK_PK As String, ByVal NIVCOM_NUMSEQ_TER_FK_PK As Short, ByVal NIVCOM_CDF_COM_CODE_FK_PK As String, ByVal NIVCOM_NATURE_CIPEMG_FK_PK As String, ByVal NIVCOM_NUMSEQ As Global.System.Nullable(Of Short), ByVal Original_NIVCOM_FCPM_CODE_FK_PK As Integer, ByVal Original_NIVCOM_CDF_TER_CODE_FK_PK As String, ByVal Original_NIVCOM_NUMSEQ_TER_FK_PK As Short, ByVal Original_NIVCOM_CDF_COM_CODE_FK_PK As String, ByVal Original_NIVCOM_NATURE_CIPEMG_FK_PK As String, ByVal Original_NIVCOM_NUMSEQ As Global.System.Nullable(Of Short)) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(NIVCOM_FCPM_CODE_FK_PK,Integer)
            If (NIVCOM_CDF_TER_CODE_FK_PK Is Nothing) Then
                Throw New Global.System.ArgumentNullException("NIVCOM_CDF_TER_CODE_FK_PK")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(NIVCOM_CDF_TER_CODE_FK_PK,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(NIVCOM_NUMSEQ_TER_FK_PK,Short)
            If (NIVCOM_CDF_COM_CODE_FK_PK Is Nothing) Then
                Throw New Global.System.ArgumentNullException("NIVCOM_CDF_COM_CODE_FK_PK")
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(NIVCOM_CDF_COM_CODE_FK_PK,String)
            End If
            If (NIVCOM_NATURE_CIPEMG_FK_PK Is Nothing) Then
                Throw New Global.System.ArgumentNullException("NIVCOM_NATURE_CIPEMG_FK_PK")
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(NIVCOM_NATURE_CIPEMG_FK_PK,String)
            End If
            If (NIVCOM_NUMSEQ.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(NIVCOM_NUMSEQ.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Original_NIVCOM_FCPM_CODE_FK_PK,Integer)
            If (Original_NIVCOM_CDF_TER_CODE_FK_PK Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_NIVCOM_CDF_TER_CODE_FK_PK")
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Original_NIVCOM_CDF_TER_CODE_FK_PK,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Original_NIVCOM_NUMSEQ_TER_FK_PK,Short)
            If (Original_NIVCOM_CDF_COM_CODE_FK_PK Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_NIVCOM_CDF_COM_CODE_FK_PK")
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Original_NIVCOM_CDF_COM_CODE_FK_PK,String)
            End If
            If (Original_NIVCOM_NATURE_CIPEMG_FK_PK Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_NIVCOM_NATURE_CIPEMG_FK_PK")
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(Original_NIVCOM_NATURE_CIPEMG_FK_PK,String)
            End If
            If (Original_NIVCOM_NUMSEQ.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(Original_NIVCOM_NUMSEQ.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal NIVCOM_NUMSEQ As Global.System.Nullable(Of Short), ByVal Original_NIVCOM_FCPM_CODE_FK_PK As Integer, ByVal Original_NIVCOM_CDF_TER_CODE_FK_PK As String, ByVal Original_NIVCOM_NUMSEQ_TER_FK_PK As Short, ByVal Original_NIVCOM_CDF_COM_CODE_FK_PK As String, ByVal Original_NIVCOM_NATURE_CIPEMG_FK_PK As String, ByVal Original_NIVCOM_NUMSEQ As Global.System.Nullable(Of Short)) As Integer
            Return Me.Update(Original_NIVCOM_FCPM_CODE_FK_PK, Original_NIVCOM_CDF_TER_CODE_FK_PK, Original_NIVCOM_NUMSEQ_TER_FK_PK, Original_NIVCOM_CDF_COM_CODE_FK_PK, Original_NIVCOM_NATURE_CIPEMG_FK_PK, NIVCOM_NUMSEQ, Original_NIVCOM_FCPM_CODE_FK_PK, Original_NIVCOM_CDF_TER_CODE_FK_PK, Original_NIVCOM_NUMSEQ_TER_FK_PK, Original_NIVCOM_CDF_COM_CODE_FK_PK, Original_NIVCOM_NATURE_CIPEMG_FK_PK, Original_NIVCOM_NUMSEQ)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class AUTCOM_AUTRE_COMMENTAIRETableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "AUTCOM_AUTRE_COMMENTAIRE"
            tableMapping.ColumnMappings.Add("AUTCOM_FCPM_CODE_FK_PK", "AUTCOM_FCPM_CODE_FK_PK")
            tableMapping.ColumnMappings.Add("AUTCOM_CDF_TER_CODE_FK_PK", "AUTCOM_CDF_TER_CODE_FK_PK")
            tableMapping.ColumnMappings.Add("AUTCOM_NUMSEQ_TER_FK_PK", "AUTCOM_NUMSEQ_TER_FK_PK")
            tableMapping.ColumnMappings.Add("AUTCOM_CDF_COM_CODE_FK_PK", "AUTCOM_CDF_COM_CODE_FK_PK")
            tableMapping.ColumnMappings.Add("AUTCOM_NATURE_CIPEMG_FK_PK", "AUTCOM_NATURE_CIPEMG_FK_PK")
            tableMapping.ColumnMappings.Add("AUTCOM_NUMSEQ", "AUTCOM_NUMSEQ")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [THERIAQUE].[AUTCOM_AUTRE_COMMENTAIRE] WHERE (([AUTCOM_FCPM_CODE_FK_P"& _ 
                "K] = @Original_AUTCOM_FCPM_CODE_FK_PK) AND ([AUTCOM_CDF_TER_CODE_FK_PK] = @Origi"& _ 
                "nal_AUTCOM_CDF_TER_CODE_FK_PK) AND ([AUTCOM_NUMSEQ_TER_FK_PK] = @Original_AUTCOM"& _ 
                "_NUMSEQ_TER_FK_PK) AND ([AUTCOM_CDF_COM_CODE_FK_PK] = @Original_AUTCOM_CDF_COM_C"& _ 
                "ODE_FK_PK) AND ([AUTCOM_NATURE_CIPEMG_FK_PK] = @Original_AUTCOM_NATURE_CIPEMG_FK"& _ 
                "_PK) AND ((@IsNull_AUTCOM_NUMSEQ = 1 AND [AUTCOM_NUMSEQ] IS NULL) OR ([AUTCOM_NU"& _ 
                "MSEQ] = @Original_AUTCOM_NUMSEQ)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AUTCOM_FCPM_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AUTCOM_FCPM_CODE_FK_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AUTCOM_CDF_TER_CODE_FK_PK", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AUTCOM_CDF_TER_CODE_FK_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AUTCOM_NUMSEQ_TER_FK_PK", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AUTCOM_NUMSEQ_TER_FK_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AUTCOM_CDF_COM_CODE_FK_PK", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AUTCOM_CDF_COM_CODE_FK_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AUTCOM_NATURE_CIPEMG_FK_PK", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AUTCOM_NATURE_CIPEMG_FK_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AUTCOM_NUMSEQ", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AUTCOM_NUMSEQ", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AUTCOM_NUMSEQ", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AUTCOM_NUMSEQ", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [THERIAQUE].[AUTCOM_AUTRE_COMMENTAIRE] ([AUTCOM_FCPM_CODE_FK_PK], [AU"& _ 
                "TCOM_CDF_TER_CODE_FK_PK], [AUTCOM_NUMSEQ_TER_FK_PK], [AUTCOM_CDF_COM_CODE_FK_PK]"& _ 
                ", [AUTCOM_NATURE_CIPEMG_FK_PK], [AUTCOM_NUMSEQ]) VALUES (@AUTCOM_FCPM_CODE_FK_PK"& _ 
                ", @AUTCOM_CDF_TER_CODE_FK_PK, @AUTCOM_NUMSEQ_TER_FK_PK, @AUTCOM_CDF_COM_CODE_FK_"& _ 
                "PK, @AUTCOM_NATURE_CIPEMG_FK_PK, @AUTCOM_NUMSEQ);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT AUTCOM_FCPM_CODE_FK_PK"& _ 
                ", AUTCOM_CDF_TER_CODE_FK_PK, AUTCOM_NUMSEQ_TER_FK_PK, AUTCOM_CDF_COM_CODE_FK_PK,"& _ 
                " AUTCOM_NATURE_CIPEMG_FK_PK, AUTCOM_NUMSEQ FROM THERIAQUE.AUTCOM_AUTRE_COMMENTAI"& _ 
                "RE WHERE (AUTCOM_CDF_COM_CODE_FK_PK = @AUTCOM_CDF_COM_CODE_FK_PK) AND (AUTCOM_CD"& _ 
                "F_TER_CODE_FK_PK = @AUTCOM_CDF_TER_CODE_FK_PK) AND (AUTCOM_FCPM_CODE_FK_PK = @AU"& _ 
                "TCOM_FCPM_CODE_FK_PK) AND (AUTCOM_NATURE_CIPEMG_FK_PK = @AUTCOM_NATURE_CIPEMG_FK"& _ 
                "_PK) AND (AUTCOM_NUMSEQ_TER_FK_PK = @AUTCOM_NUMSEQ_TER_FK_PK)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AUTCOM_FCPM_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AUTCOM_FCPM_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AUTCOM_CDF_TER_CODE_FK_PK", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AUTCOM_CDF_TER_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AUTCOM_NUMSEQ_TER_FK_PK", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AUTCOM_NUMSEQ_TER_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AUTCOM_CDF_COM_CODE_FK_PK", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AUTCOM_CDF_COM_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AUTCOM_NATURE_CIPEMG_FK_PK", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AUTCOM_NATURE_CIPEMG_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AUTCOM_NUMSEQ", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AUTCOM_NUMSEQ", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [THERIAQUE].[AUTCOM_AUTRE_COMMENTAIRE] SET [AUTCOM_FCPM_CODE_FK_PK] = @AUT"& _ 
                "COM_FCPM_CODE_FK_PK, [AUTCOM_CDF_TER_CODE_FK_PK] = @AUTCOM_CDF_TER_CODE_FK_PK, ["& _ 
                "AUTCOM_NUMSEQ_TER_FK_PK] = @AUTCOM_NUMSEQ_TER_FK_PK, [AUTCOM_CDF_COM_CODE_FK_PK]"& _ 
                " = @AUTCOM_CDF_COM_CODE_FK_PK, [AUTCOM_NATURE_CIPEMG_FK_PK] = @AUTCOM_NATURE_CIP"& _ 
                "EMG_FK_PK, [AUTCOM_NUMSEQ] = @AUTCOM_NUMSEQ WHERE (([AUTCOM_FCPM_CODE_FK_PK] = @"& _ 
                "Original_AUTCOM_FCPM_CODE_FK_PK) AND ([AUTCOM_CDF_TER_CODE_FK_PK] = @Original_AU"& _ 
                "TCOM_CDF_TER_CODE_FK_PK) AND ([AUTCOM_NUMSEQ_TER_FK_PK] = @Original_AUTCOM_NUMSE"& _ 
                "Q_TER_FK_PK) AND ([AUTCOM_CDF_COM_CODE_FK_PK] = @Original_AUTCOM_CDF_COM_CODE_FK"& _ 
                "_PK) AND ([AUTCOM_NATURE_CIPEMG_FK_PK] = @Original_AUTCOM_NATURE_CIPEMG_FK_PK) A"& _ 
                "ND ((@IsNull_AUTCOM_NUMSEQ = 1 AND [AUTCOM_NUMSEQ] IS NULL) OR ([AUTCOM_NUMSEQ] "& _ 
                "= @Original_AUTCOM_NUMSEQ)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT AUTCOM_FCPM_CODE_FK_PK, AUTCOM_CDF_TER_COD"& _ 
                "E_FK_PK, AUTCOM_NUMSEQ_TER_FK_PK, AUTCOM_CDF_COM_CODE_FK_PK, AUTCOM_NATURE_CIPEM"& _ 
                "G_FK_PK, AUTCOM_NUMSEQ FROM THERIAQUE.AUTCOM_AUTRE_COMMENTAIRE WHERE (AUTCOM_CDF"& _ 
                "_COM_CODE_FK_PK = @AUTCOM_CDF_COM_CODE_FK_PK) AND (AUTCOM_CDF_TER_CODE_FK_PK = @"& _ 
                "AUTCOM_CDF_TER_CODE_FK_PK) AND (AUTCOM_FCPM_CODE_FK_PK = @AUTCOM_FCPM_CODE_FK_PK"& _ 
                ") AND (AUTCOM_NATURE_CIPEMG_FK_PK = @AUTCOM_NATURE_CIPEMG_FK_PK) AND (AUTCOM_NUM"& _ 
                "SEQ_TER_FK_PK = @AUTCOM_NUMSEQ_TER_FK_PK)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AUTCOM_FCPM_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AUTCOM_FCPM_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AUTCOM_CDF_TER_CODE_FK_PK", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AUTCOM_CDF_TER_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AUTCOM_NUMSEQ_TER_FK_PK", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AUTCOM_NUMSEQ_TER_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AUTCOM_CDF_COM_CODE_FK_PK", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AUTCOM_CDF_COM_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AUTCOM_NATURE_CIPEMG_FK_PK", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AUTCOM_NATURE_CIPEMG_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AUTCOM_NUMSEQ", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AUTCOM_NUMSEQ", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AUTCOM_FCPM_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AUTCOM_FCPM_CODE_FK_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AUTCOM_CDF_TER_CODE_FK_PK", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AUTCOM_CDF_TER_CODE_FK_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AUTCOM_NUMSEQ_TER_FK_PK", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AUTCOM_NUMSEQ_TER_FK_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AUTCOM_CDF_COM_CODE_FK_PK", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AUTCOM_CDF_COM_CODE_FK_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AUTCOM_NATURE_CIPEMG_FK_PK", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AUTCOM_NATURE_CIPEMG_FK_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AUTCOM_NUMSEQ", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AUTCOM_NUMSEQ", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AUTCOM_NUMSEQ", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AUTCOM_NUMSEQ", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Theriaque.My.MySettings.Default.ConnectionString5
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT AUTCOM_FCPM_CODE_FK_PK, AUTCOM_CDF_TER_CODE_FK_PK, AUTCOM_NUMSEQ_TER_FK_PK"& _ 
                ", AUTCOM_CDF_COM_CODE_FK_PK, AUTCOM_NATURE_CIPEMG_FK_PK, AUTCOM_NUMSEQ FROM THER"& _ 
                "IAQUE.AUTCOM_AUTRE_COMMENTAIRE"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT AUTCOM_FCPM_CODE_FK_PK, AUTCOM_CDF_TER_CODE_FK_PK, AUTCOM_NUMSEQ_TER_FK_PK"& _ 
                ", AUTCOM_CDF_COM_CODE_FK_PK, AUTCOM_NATURE_CIPEMG_FK_PK, AUTCOM_NUMSEQ FROM THER"& _ 
                "IAQUE.AUTCOM_AUTRE_COMMENTAIRE"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE AUTCOM_FCPM_CODE_FK_PK = @AUTCOM_FCPM_CODE"& _ 
                "_FK_PK"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AUTCOM_FCPM_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "AUTCOM_FCPM_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsTheriaque_Cipemg_Code.AUTCOM_AUTRE_COMMENTAIREDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsTheriaque_Cipemg_Code.AUTCOM_AUTRE_COMMENTAIREDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsTheriaque_Cipemg_Code.AUTCOM_AUTRE_COMMENTAIREDataTable = New dsTheriaque_Cipemg_Code.AUTCOM_AUTRE_COMMENTAIREDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByCode(ByVal dataTable As dsTheriaque_Cipemg_Code.AUTCOM_AUTRE_COMMENTAIREDataTable, ByVal AUTCOM_FCPM_CODE_FK_PK As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(AUTCOM_FCPM_CODE_FK_PK,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByCode(ByVal AUTCOM_FCPM_CODE_FK_PK As Integer) As dsTheriaque_Cipemg_Code.AUTCOM_AUTRE_COMMENTAIREDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(AUTCOM_FCPM_CODE_FK_PK,Integer)
            Dim dataTable As dsTheriaque_Cipemg_Code.AUTCOM_AUTRE_COMMENTAIREDataTable = New dsTheriaque_Cipemg_Code.AUTCOM_AUTRE_COMMENTAIREDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsTheriaque_Cipemg_Code.AUTCOM_AUTRE_COMMENTAIREDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsTheriaque_Cipemg_Code) As Integer
            Return Me.Adapter.Update(dataSet, "AUTCOM_AUTRE_COMMENTAIRE")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_AUTCOM_FCPM_CODE_FK_PK As Integer, ByVal Original_AUTCOM_CDF_TER_CODE_FK_PK As String, ByVal Original_AUTCOM_NUMSEQ_TER_FK_PK As Short, ByVal Original_AUTCOM_CDF_COM_CODE_FK_PK As String, ByVal Original_AUTCOM_NATURE_CIPEMG_FK_PK As String, ByVal Original_AUTCOM_NUMSEQ As Global.System.Nullable(Of Short)) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_AUTCOM_FCPM_CODE_FK_PK,Integer)
            If (Original_AUTCOM_CDF_TER_CODE_FK_PK Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_AUTCOM_CDF_TER_CODE_FK_PK")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_AUTCOM_CDF_TER_CODE_FK_PK,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_AUTCOM_NUMSEQ_TER_FK_PK,Short)
            If (Original_AUTCOM_CDF_COM_CODE_FK_PK Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_AUTCOM_CDF_COM_CODE_FK_PK")
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_AUTCOM_CDF_COM_CODE_FK_PK,String)
            End If
            If (Original_AUTCOM_NATURE_CIPEMG_FK_PK Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_AUTCOM_NATURE_CIPEMG_FK_PK")
            Else
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_AUTCOM_NATURE_CIPEMG_FK_PK,String)
            End If
            If (Original_AUTCOM_NUMSEQ.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_AUTCOM_NUMSEQ.Value,Short)
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal AUTCOM_FCPM_CODE_FK_PK As Integer, ByVal AUTCOM_CDF_TER_CODE_FK_PK As String, ByVal AUTCOM_NUMSEQ_TER_FK_PK As Short, ByVal AUTCOM_CDF_COM_CODE_FK_PK As String, ByVal AUTCOM_NATURE_CIPEMG_FK_PK As String, ByVal AUTCOM_NUMSEQ As Global.System.Nullable(Of Short)) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(AUTCOM_FCPM_CODE_FK_PK,Integer)
            If (AUTCOM_CDF_TER_CODE_FK_PK Is Nothing) Then
                Throw New Global.System.ArgumentNullException("AUTCOM_CDF_TER_CODE_FK_PK")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(AUTCOM_CDF_TER_CODE_FK_PK,String)
            End If
            Me.Adapter.InsertCommand.Parameters(2).Value = CType(AUTCOM_NUMSEQ_TER_FK_PK,Short)
            If (AUTCOM_CDF_COM_CODE_FK_PK Is Nothing) Then
                Throw New Global.System.ArgumentNullException("AUTCOM_CDF_COM_CODE_FK_PK")
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(AUTCOM_CDF_COM_CODE_FK_PK,String)
            End If
            If (AUTCOM_NATURE_CIPEMG_FK_PK Is Nothing) Then
                Throw New Global.System.ArgumentNullException("AUTCOM_NATURE_CIPEMG_FK_PK")
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(AUTCOM_NATURE_CIPEMG_FK_PK,String)
            End If
            If (AUTCOM_NUMSEQ.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(AUTCOM_NUMSEQ.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal AUTCOM_FCPM_CODE_FK_PK As Integer, ByVal AUTCOM_CDF_TER_CODE_FK_PK As String, ByVal AUTCOM_NUMSEQ_TER_FK_PK As Short, ByVal AUTCOM_CDF_COM_CODE_FK_PK As String, ByVal AUTCOM_NATURE_CIPEMG_FK_PK As String, ByVal AUTCOM_NUMSEQ As Global.System.Nullable(Of Short), ByVal Original_AUTCOM_FCPM_CODE_FK_PK As Integer, ByVal Original_AUTCOM_CDF_TER_CODE_FK_PK As String, ByVal Original_AUTCOM_NUMSEQ_TER_FK_PK As Short, ByVal Original_AUTCOM_CDF_COM_CODE_FK_PK As String, ByVal Original_AUTCOM_NATURE_CIPEMG_FK_PK As String, ByVal Original_AUTCOM_NUMSEQ As Global.System.Nullable(Of Short)) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(AUTCOM_FCPM_CODE_FK_PK,Integer)
            If (AUTCOM_CDF_TER_CODE_FK_PK Is Nothing) Then
                Throw New Global.System.ArgumentNullException("AUTCOM_CDF_TER_CODE_FK_PK")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(AUTCOM_CDF_TER_CODE_FK_PK,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(AUTCOM_NUMSEQ_TER_FK_PK,Short)
            If (AUTCOM_CDF_COM_CODE_FK_PK Is Nothing) Then
                Throw New Global.System.ArgumentNullException("AUTCOM_CDF_COM_CODE_FK_PK")
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(AUTCOM_CDF_COM_CODE_FK_PK,String)
            End If
            If (AUTCOM_NATURE_CIPEMG_FK_PK Is Nothing) Then
                Throw New Global.System.ArgumentNullException("AUTCOM_NATURE_CIPEMG_FK_PK")
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(AUTCOM_NATURE_CIPEMG_FK_PK,String)
            End If
            If (AUTCOM_NUMSEQ.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(AUTCOM_NUMSEQ.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Original_AUTCOM_FCPM_CODE_FK_PK,Integer)
            If (Original_AUTCOM_CDF_TER_CODE_FK_PK Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_AUTCOM_CDF_TER_CODE_FK_PK")
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Original_AUTCOM_CDF_TER_CODE_FK_PK,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Original_AUTCOM_NUMSEQ_TER_FK_PK,Short)
            If (Original_AUTCOM_CDF_COM_CODE_FK_PK Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_AUTCOM_CDF_COM_CODE_FK_PK")
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Original_AUTCOM_CDF_COM_CODE_FK_PK,String)
            End If
            If (Original_AUTCOM_NATURE_CIPEMG_FK_PK Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_AUTCOM_NATURE_CIPEMG_FK_PK")
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(Original_AUTCOM_NATURE_CIPEMG_FK_PK,String)
            End If
            If (Original_AUTCOM_NUMSEQ.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(Original_AUTCOM_NUMSEQ.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal AUTCOM_NUMSEQ As Global.System.Nullable(Of Short), ByVal Original_AUTCOM_FCPM_CODE_FK_PK As Integer, ByVal Original_AUTCOM_CDF_TER_CODE_FK_PK As String, ByVal Original_AUTCOM_NUMSEQ_TER_FK_PK As Short, ByVal Original_AUTCOM_CDF_COM_CODE_FK_PK As String, ByVal Original_AUTCOM_NATURE_CIPEMG_FK_PK As String, ByVal Original_AUTCOM_NUMSEQ As Global.System.Nullable(Of Short)) As Integer
            Return Me.Update(Original_AUTCOM_FCPM_CODE_FK_PK, Original_AUTCOM_CDF_TER_CODE_FK_PK, Original_AUTCOM_NUMSEQ_TER_FK_PK, Original_AUTCOM_CDF_COM_CODE_FK_PK, Original_AUTCOM_NATURE_CIPEMG_FK_PK, AUTCOM_NUMSEQ, Original_AUTCOM_FCPM_CODE_FK_PK, Original_AUTCOM_CDF_TER_CODE_FK_PK, Original_AUTCOM_NUMSEQ_TER_FK_PK, Original_AUTCOM_CDF_COM_CODE_FK_PK, Original_AUTCOM_NATURE_CIPEMG_FK_PK, Original_AUTCOM_NUMSEQ)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class FCPMTX_FICHECIPEMG_TEXTETableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "FCPMTX_FICHECIPEMG_TEXTE"
            tableMapping.ColumnMappings.Add("FCPMTX_FCPM_CODE_FK_PK", "FCPMTX_FCPM_CODE_FK_PK")
            tableMapping.ColumnMappings.Add("FCPMTX_CDF_TER_CODE_FK_PK", "FCPMTX_CDF_TER_CODE_FK_PK")
            tableMapping.ColumnMappings.Add("FCPMTX_NUMSEQ_TER_FK_PK", "FCPMTX_NUMSEQ_TER_FK_PK")
            tableMapping.ColumnMappings.Add("FCPMTX_NATURECIPEMG_FK_PK", "FCPMTX_NATURECIPEMG_FK_PK")
            tableMapping.ColumnMappings.Add("FCPMTX_TEXTE", "FCPMTX_TEXTE")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [THERIAQUE].[FCPMTX_FICHECIPEMG_TEXTE] WHERE (([FCPMTX_FCPM_CODE_FK_P"& _ 
                "K] = @Original_FCPMTX_FCPM_CODE_FK_PK) AND ([FCPMTX_CDF_TER_CODE_FK_PK] = @Origi"& _ 
                "nal_FCPMTX_CDF_TER_CODE_FK_PK) AND ([FCPMTX_NUMSEQ_TER_FK_PK] = @Original_FCPMTX"& _ 
                "_NUMSEQ_TER_FK_PK) AND ([FCPMTX_NATURECIPEMG_FK_PK] = @Original_FCPMTX_NATURECIP"& _ 
                "EMG_FK_PK))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FCPMTX_FCPM_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMTX_FCPM_CODE_FK_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FCPMTX_CDF_TER_CODE_FK_PK", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMTX_CDF_TER_CODE_FK_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FCPMTX_NUMSEQ_TER_FK_PK", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMTX_NUMSEQ_TER_FK_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FCPMTX_NATURECIPEMG_FK_PK", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMTX_NATURECIPEMG_FK_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [THERIAQUE].[FCPMTX_FICHECIPEMG_TEXTE] ([FCPMTX_FCPM_CODE_FK_PK], [FC"& _ 
                "PMTX_CDF_TER_CODE_FK_PK], [FCPMTX_NUMSEQ_TER_FK_PK], [FCPMTX_NATURECIPEMG_FK_PK]"& _ 
                ", [FCPMTX_TEXTE]) VALUES (@FCPMTX_FCPM_CODE_FK_PK, @FCPMTX_CDF_TER_CODE_FK_PK, @"& _ 
                "FCPMTX_NUMSEQ_TER_FK_PK, @FCPMTX_NATURECIPEMG_FK_PK, @FCPMTX_TEXTE);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT FCP"& _ 
                "MTX_FCPM_CODE_FK_PK, FCPMTX_CDF_TER_CODE_FK_PK, FCPMTX_NUMSEQ_TER_FK_PK, FCPMTX_"& _ 
                "NATURECIPEMG_FK_PK, FCPMTX_TEXTE FROM THERIAQUE.FCPMTX_FICHECIPEMG_TEXTE WHERE ("& _ 
                "FCPMTX_CDF_TER_CODE_FK_PK = @FCPMTX_CDF_TER_CODE_FK_PK) AND (FCPMTX_FCPM_CODE_FK"& _ 
                "_PK = @FCPMTX_FCPM_CODE_FK_PK) AND (FCPMTX_NATURECIPEMG_FK_PK = @FCPMTX_NATURECI"& _ 
                "PEMG_FK_PK) AND (FCPMTX_NUMSEQ_TER_FK_PK = @FCPMTX_NUMSEQ_TER_FK_PK)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FCPMTX_FCPM_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMTX_FCPM_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FCPMTX_CDF_TER_CODE_FK_PK", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMTX_CDF_TER_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FCPMTX_NUMSEQ_TER_FK_PK", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMTX_NUMSEQ_TER_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FCPMTX_NATURECIPEMG_FK_PK", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMTX_NATURECIPEMG_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FCPMTX_TEXTE", Global.System.Data.SqlDbType.Text, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMTX_TEXTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [THERIAQUE].[FCPMTX_FICHECIPEMG_TEXTE] SET [FCPMTX_FCPM_CODE_FK_PK] = @FCP"& _ 
                "MTX_FCPM_CODE_FK_PK, [FCPMTX_CDF_TER_CODE_FK_PK] = @FCPMTX_CDF_TER_CODE_FK_PK, ["& _ 
                "FCPMTX_NUMSEQ_TER_FK_PK] = @FCPMTX_NUMSEQ_TER_FK_PK, [FCPMTX_NATURECIPEMG_FK_PK]"& _ 
                " = @FCPMTX_NATURECIPEMG_FK_PK, [FCPMTX_TEXTE] = @FCPMTX_TEXTE WHERE (([FCPMTX_FC"& _ 
                "PM_CODE_FK_PK] = @Original_FCPMTX_FCPM_CODE_FK_PK) AND ([FCPMTX_CDF_TER_CODE_FK_"& _ 
                "PK] = @Original_FCPMTX_CDF_TER_CODE_FK_PK) AND ([FCPMTX_NUMSEQ_TER_FK_PK] = @Ori"& _ 
                "ginal_FCPMTX_NUMSEQ_TER_FK_PK) AND ([FCPMTX_NATURECIPEMG_FK_PK] = @Original_FCPM"& _ 
                "TX_NATURECIPEMG_FK_PK));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT FCPMTX_FCPM_CODE_FK_PK, FCPMTX_CDF_TER_CODE_FK_"& _ 
                "PK, FCPMTX_NUMSEQ_TER_FK_PK, FCPMTX_NATURECIPEMG_FK_PK, FCPMTX_TEXTE FROM THERIA"& _ 
                "QUE.FCPMTX_FICHECIPEMG_TEXTE WHERE (FCPMTX_CDF_TER_CODE_FK_PK = @FCPMTX_CDF_TER_"& _ 
                "CODE_FK_PK) AND (FCPMTX_FCPM_CODE_FK_PK = @FCPMTX_FCPM_CODE_FK_PK) AND (FCPMTX_N"& _ 
                "ATURECIPEMG_FK_PK = @FCPMTX_NATURECIPEMG_FK_PK) AND (FCPMTX_NUMSEQ_TER_FK_PK = @"& _ 
                "FCPMTX_NUMSEQ_TER_FK_PK)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FCPMTX_FCPM_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMTX_FCPM_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FCPMTX_CDF_TER_CODE_FK_PK", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMTX_CDF_TER_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FCPMTX_NUMSEQ_TER_FK_PK", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMTX_NUMSEQ_TER_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FCPMTX_NATURECIPEMG_FK_PK", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMTX_NATURECIPEMG_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FCPMTX_TEXTE", Global.System.Data.SqlDbType.Text, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMTX_TEXTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FCPMTX_FCPM_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMTX_FCPM_CODE_FK_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FCPMTX_CDF_TER_CODE_FK_PK", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMTX_CDF_TER_CODE_FK_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FCPMTX_NUMSEQ_TER_FK_PK", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMTX_NUMSEQ_TER_FK_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FCPMTX_NATURECIPEMG_FK_PK", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMTX_NATURECIPEMG_FK_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Theriaque.My.MySettings.Default.ConnectionString5
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT FCPMTX_FCPM_CODE_FK_PK, FCPMTX_CDF_TER_CODE_FK_PK, FCPMTX_NUMSEQ_TER_FK_PK"& _ 
                ", FCPMTX_NATURECIPEMG_FK_PK, FCPMTX_TEXTE FROM THERIAQUE.FCPMTX_FICHECIPEMG_TEXT"& _ 
                "E"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT FCPMTX_FCPM_CODE_FK_PK, FCPMTX_CDF_TER_CODE_FK_PK, FCPMTX_NUMSEQ_TER_FK_PK"& _ 
                ", FCPMTX_NATURECIPEMG_FK_PK, FCPMTX_TEXTE FROM THERIAQUE.FCPMTX_FICHECIPEMG_TEXT"& _ 
                "E"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE FCPMTX_FCPM_CODE_FK_PK = @FCPMTX_FCPM_CODE_FK_PK"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FCPMTX_FCPM_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMTX_FCPM_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsTheriaque_Cipemg_Code.FCPMTX_FICHECIPEMG_TEXTEDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsTheriaque_Cipemg_Code.FCPMTX_FICHECIPEMG_TEXTEDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsTheriaque_Cipemg_Code.FCPMTX_FICHECIPEMG_TEXTEDataTable = New dsTheriaque_Cipemg_Code.FCPMTX_FICHECIPEMG_TEXTEDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByCode(ByVal dataTable As dsTheriaque_Cipemg_Code.FCPMTX_FICHECIPEMG_TEXTEDataTable, ByVal FCPMTX_FCPM_CODE_FK_PK As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(FCPMTX_FCPM_CODE_FK_PK,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByCode(ByVal FCPMTX_FCPM_CODE_FK_PK As Integer) As dsTheriaque_Cipemg_Code.FCPMTX_FICHECIPEMG_TEXTEDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(FCPMTX_FCPM_CODE_FK_PK,Integer)
            Dim dataTable As dsTheriaque_Cipemg_Code.FCPMTX_FICHECIPEMG_TEXTEDataTable = New dsTheriaque_Cipemg_Code.FCPMTX_FICHECIPEMG_TEXTEDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsTheriaque_Cipemg_Code.FCPMTX_FICHECIPEMG_TEXTEDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsTheriaque_Cipemg_Code) As Integer
            Return Me.Adapter.Update(dataSet, "FCPMTX_FICHECIPEMG_TEXTE")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_FCPMTX_FCPM_CODE_FK_PK As Integer, ByVal Original_FCPMTX_CDF_TER_CODE_FK_PK As String, ByVal Original_FCPMTX_NUMSEQ_TER_FK_PK As Short, ByVal Original_FCPMTX_NATURECIPEMG_FK_PK As String) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_FCPMTX_FCPM_CODE_FK_PK,Integer)
            If (Original_FCPMTX_CDF_TER_CODE_FK_PK Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_FCPMTX_CDF_TER_CODE_FK_PK")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_FCPMTX_CDF_TER_CODE_FK_PK,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_FCPMTX_NUMSEQ_TER_FK_PK,Short)
            If (Original_FCPMTX_NATURECIPEMG_FK_PK Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_FCPMTX_NATURECIPEMG_FK_PK")
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_FCPMTX_NATURECIPEMG_FK_PK,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal FCPMTX_FCPM_CODE_FK_PK As Integer, ByVal FCPMTX_CDF_TER_CODE_FK_PK As String, ByVal FCPMTX_NUMSEQ_TER_FK_PK As Short, ByVal FCPMTX_NATURECIPEMG_FK_PK As String, ByVal FCPMTX_TEXTE As String) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(FCPMTX_FCPM_CODE_FK_PK,Integer)
            If (FCPMTX_CDF_TER_CODE_FK_PK Is Nothing) Then
                Throw New Global.System.ArgumentNullException("FCPMTX_CDF_TER_CODE_FK_PK")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(FCPMTX_CDF_TER_CODE_FK_PK,String)
            End If
            Me.Adapter.InsertCommand.Parameters(2).Value = CType(FCPMTX_NUMSEQ_TER_FK_PK,Short)
            If (FCPMTX_NATURECIPEMG_FK_PK Is Nothing) Then
                Throw New Global.System.ArgumentNullException("FCPMTX_NATURECIPEMG_FK_PK")
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(FCPMTX_NATURECIPEMG_FK_PK,String)
            End If
            If (FCPMTX_TEXTE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("FCPMTX_TEXTE")
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(FCPMTX_TEXTE,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal FCPMTX_FCPM_CODE_FK_PK As Integer, ByVal FCPMTX_CDF_TER_CODE_FK_PK As String, ByVal FCPMTX_NUMSEQ_TER_FK_PK As Short, ByVal FCPMTX_NATURECIPEMG_FK_PK As String, ByVal FCPMTX_TEXTE As String, ByVal Original_FCPMTX_FCPM_CODE_FK_PK As Integer, ByVal Original_FCPMTX_CDF_TER_CODE_FK_PK As String, ByVal Original_FCPMTX_NUMSEQ_TER_FK_PK As Short, ByVal Original_FCPMTX_NATURECIPEMG_FK_PK As String) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(FCPMTX_FCPM_CODE_FK_PK,Integer)
            If (FCPMTX_CDF_TER_CODE_FK_PK Is Nothing) Then
                Throw New Global.System.ArgumentNullException("FCPMTX_CDF_TER_CODE_FK_PK")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(FCPMTX_CDF_TER_CODE_FK_PK,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(FCPMTX_NUMSEQ_TER_FK_PK,Short)
            If (FCPMTX_NATURECIPEMG_FK_PK Is Nothing) Then
                Throw New Global.System.ArgumentNullException("FCPMTX_NATURECIPEMG_FK_PK")
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(FCPMTX_NATURECIPEMG_FK_PK,String)
            End If
            If (FCPMTX_TEXTE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("FCPMTX_TEXTE")
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(FCPMTX_TEXTE,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Original_FCPMTX_FCPM_CODE_FK_PK,Integer)
            If (Original_FCPMTX_CDF_TER_CODE_FK_PK Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_FCPMTX_CDF_TER_CODE_FK_PK")
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Original_FCPMTX_CDF_TER_CODE_FK_PK,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Original_FCPMTX_NUMSEQ_TER_FK_PK,Short)
            If (Original_FCPMTX_NATURECIPEMG_FK_PK Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_FCPMTX_NATURECIPEMG_FK_PK")
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Original_FCPMTX_NATURECIPEMG_FK_PK,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal FCPMTX_TEXTE As String, ByVal Original_FCPMTX_FCPM_CODE_FK_PK As Integer, ByVal Original_FCPMTX_CDF_TER_CODE_FK_PK As String, ByVal Original_FCPMTX_NUMSEQ_TER_FK_PK As Short, ByVal Original_FCPMTX_NATURECIPEMG_FK_PK As String) As Integer
            Return Me.Update(Original_FCPMTX_FCPM_CODE_FK_PK, Original_FCPMTX_CDF_TER_CODE_FK_PK, Original_FCPMTX_NUMSEQ_TER_FK_PK, Original_FCPMTX_NATURECIPEMG_FK_PK, FCPMTX_TEXTE, Original_FCPMTX_FCPM_CODE_FK_PK, Original_FCPMTX_CDF_TER_CODE_FK_PK, Original_FCPMTX_NUMSEQ_TER_FK_PK, Original_FCPMTX_NATURECIPEMG_FK_PK)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class FCPMAFS_CIPEMG_AFSSAPSTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "FCPMAFS_CIPEMG_AFSSAPS"
            tableMapping.ColumnMappings.Add("FCPMAFS_FCPM_CODE_FK_PK", "FCPMAFS_FCPM_CODE_FK_PK")
            tableMapping.ColumnMappings.Add("FCPMAFS_SP_CODE_FK_PK", "FCPMAFS_SP_CODE_FK_PK")
            tableMapping.ColumnMappings.Add("FCPMAFS_DATE_PK", "FCPMAFS_DATE_PK")
            tableMapping.ColumnMappings.Add("FCPMAFS_CDF_DOCUMENT_FK_PK", "FCPMAFS_CDF_DOCUMENT_FK_PK")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [THERIAQUE].[FCPMAFS_CIPEMG_AFSSAPS] WHERE (([FCPMAFS_FCPM_CODE_FK_PK"& _ 
                "] = @Original_FCPMAFS_FCPM_CODE_FK_PK) AND ([FCPMAFS_SP_CODE_FK_PK] = @Original_"& _ 
                "FCPMAFS_SP_CODE_FK_PK) AND ([FCPMAFS_DATE_PK] = @Original_FCPMAFS_DATE_PK) AND ("& _ 
                "[FCPMAFS_CDF_DOCUMENT_FK_PK] = @Original_FCPMAFS_CDF_DOCUMENT_FK_PK))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FCPMAFS_FCPM_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMAFS_FCPM_CODE_FK_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FCPMAFS_SP_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMAFS_SP_CODE_FK_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FCPMAFS_DATE_PK", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMAFS_DATE_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FCPMAFS_CDF_DOCUMENT_FK_PK", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMAFS_CDF_DOCUMENT_FK_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [THERIAQUE].[FCPMAFS_CIPEMG_AFSSAPS] ([FCPMAFS_FCPM_CODE_FK_PK], [FCP"& _ 
                "MAFS_SP_CODE_FK_PK], [FCPMAFS_DATE_PK], [FCPMAFS_CDF_DOCUMENT_FK_PK]) VALUES (@F"& _ 
                "CPMAFS_FCPM_CODE_FK_PK, @FCPMAFS_SP_CODE_FK_PK, @FCPMAFS_DATE_PK, @FCPMAFS_CDF_D"& _ 
                "OCUMENT_FK_PK);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT FCPMAFS_FCPM_CODE_FK_PK, FCPMAFS_SP_CODE_FK_PK, FCPMAFS_"& _ 
                "DATE_PK, FCPMAFS_CDF_DOCUMENT_FK_PK FROM THERIAQUE.FCPMAFS_CIPEMG_AFSSAPS WHERE "& _ 
                "(FCPMAFS_CDF_DOCUMENT_FK_PK = @FCPMAFS_CDF_DOCUMENT_FK_PK) AND (FCPMAFS_DATE_PK "& _ 
                "= @FCPMAFS_DATE_PK) AND (FCPMAFS_FCPM_CODE_FK_PK = @FCPMAFS_FCPM_CODE_FK_PK) AND"& _ 
                " (FCPMAFS_SP_CODE_FK_PK = @FCPMAFS_SP_CODE_FK_PK)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FCPMAFS_FCPM_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMAFS_FCPM_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FCPMAFS_SP_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMAFS_SP_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FCPMAFS_DATE_PK", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMAFS_DATE_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FCPMAFS_CDF_DOCUMENT_FK_PK", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMAFS_CDF_DOCUMENT_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [THERIAQUE].[FCPMAFS_CIPEMG_AFSSAPS] SET [FCPMAFS_FCPM_CODE_FK_PK] = @FCPM"& _ 
                "AFS_FCPM_CODE_FK_PK, [FCPMAFS_SP_CODE_FK_PK] = @FCPMAFS_SP_CODE_FK_PK, [FCPMAFS_"& _ 
                "DATE_PK] = @FCPMAFS_DATE_PK, [FCPMAFS_CDF_DOCUMENT_FK_PK] = @FCPMAFS_CDF_DOCUMEN"& _ 
                "T_FK_PK WHERE (([FCPMAFS_FCPM_CODE_FK_PK] = @Original_FCPMAFS_FCPM_CODE_FK_PK) A"& _ 
                "ND ([FCPMAFS_SP_CODE_FK_PK] = @Original_FCPMAFS_SP_CODE_FK_PK) AND ([FCPMAFS_DAT"& _ 
                "E_PK] = @Original_FCPMAFS_DATE_PK) AND ([FCPMAFS_CDF_DOCUMENT_FK_PK] = @Original"& _ 
                "_FCPMAFS_CDF_DOCUMENT_FK_PK));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT FCPMAFS_FCPM_CODE_FK_PK, FCPMAFS_SP_CODE_"& _ 
                "FK_PK, FCPMAFS_DATE_PK, FCPMAFS_CDF_DOCUMENT_FK_PK FROM THERIAQUE.FCPMAFS_CIPEMG"& _ 
                "_AFSSAPS WHERE (FCPMAFS_CDF_DOCUMENT_FK_PK = @FCPMAFS_CDF_DOCUMENT_FK_PK) AND (F"& _ 
                "CPMAFS_DATE_PK = @FCPMAFS_DATE_PK) AND (FCPMAFS_FCPM_CODE_FK_PK = @FCPMAFS_FCPM_"& _ 
                "CODE_FK_PK) AND (FCPMAFS_SP_CODE_FK_PK = @FCPMAFS_SP_CODE_FK_PK)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FCPMAFS_FCPM_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMAFS_FCPM_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FCPMAFS_SP_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMAFS_SP_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FCPMAFS_DATE_PK", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMAFS_DATE_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FCPMAFS_CDF_DOCUMENT_FK_PK", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMAFS_CDF_DOCUMENT_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FCPMAFS_FCPM_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMAFS_FCPM_CODE_FK_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FCPMAFS_SP_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMAFS_SP_CODE_FK_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FCPMAFS_DATE_PK", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMAFS_DATE_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FCPMAFS_CDF_DOCUMENT_FK_PK", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMAFS_CDF_DOCUMENT_FK_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Theriaque.My.MySettings.Default.ConnectionString5
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT FCPMAFS_FCPM_CODE_FK_PK, FCPMAFS_SP_CODE_FK_PK, FCPMAFS_DATE_PK, FCPMAFS_C"& _ 
                "DF_DOCUMENT_FK_PK FROM THERIAQUE.FCPMAFS_CIPEMG_AFSSAPS"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT FCPMAFS_FCPM_CODE_FK_PK, FCPMAFS_SP_CODE_FK_PK, FCPMAFS_DATE_PK, FCPMAFS_C"& _ 
                "DF_DOCUMENT_FK_PK FROM THERIAQUE.FCPMAFS_CIPEMG_AFSSAPS"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE FCPMAFS_FCPM_CODE"& _ 
                "_FK_PK = @FCPMAFS_FCPM_CODE_FK_PK"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FCPMAFS_FCPM_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPMAFS_FCPM_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsTheriaque_Cipemg_Code.FCPMAFS_CIPEMG_AFSSAPSDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsTheriaque_Cipemg_Code.FCPMAFS_CIPEMG_AFSSAPSDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsTheriaque_Cipemg_Code.FCPMAFS_CIPEMG_AFSSAPSDataTable = New dsTheriaque_Cipemg_Code.FCPMAFS_CIPEMG_AFSSAPSDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByCode(ByVal dataTable As dsTheriaque_Cipemg_Code.FCPMAFS_CIPEMG_AFSSAPSDataTable, ByVal FCPMAFS_FCPM_CODE_FK_PK As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(FCPMAFS_FCPM_CODE_FK_PK,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByCode(ByVal FCPMAFS_FCPM_CODE_FK_PK As Integer) As dsTheriaque_Cipemg_Code.FCPMAFS_CIPEMG_AFSSAPSDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(FCPMAFS_FCPM_CODE_FK_PK,Integer)
            Dim dataTable As dsTheriaque_Cipemg_Code.FCPMAFS_CIPEMG_AFSSAPSDataTable = New dsTheriaque_Cipemg_Code.FCPMAFS_CIPEMG_AFSSAPSDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsTheriaque_Cipemg_Code.FCPMAFS_CIPEMG_AFSSAPSDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsTheriaque_Cipemg_Code) As Integer
            Return Me.Adapter.Update(dataSet, "FCPMAFS_CIPEMG_AFSSAPS")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_FCPMAFS_FCPM_CODE_FK_PK As Integer, ByVal Original_FCPMAFS_SP_CODE_FK_PK As Integer, ByVal Original_FCPMAFS_DATE_PK As Date, ByVal Original_FCPMAFS_CDF_DOCUMENT_FK_PK As String) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_FCPMAFS_FCPM_CODE_FK_PK,Integer)
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_FCPMAFS_SP_CODE_FK_PK,Integer)
            Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_FCPMAFS_DATE_PK,Date)
            If (Original_FCPMAFS_CDF_DOCUMENT_FK_PK Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_FCPMAFS_CDF_DOCUMENT_FK_PK")
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_FCPMAFS_CDF_DOCUMENT_FK_PK,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal FCPMAFS_FCPM_CODE_FK_PK As Integer, ByVal FCPMAFS_SP_CODE_FK_PK As Integer, ByVal FCPMAFS_DATE_PK As Date, ByVal FCPMAFS_CDF_DOCUMENT_FK_PK As String) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(FCPMAFS_FCPM_CODE_FK_PK,Integer)
            Me.Adapter.InsertCommand.Parameters(1).Value = CType(FCPMAFS_SP_CODE_FK_PK,Integer)
            Me.Adapter.InsertCommand.Parameters(2).Value = CType(FCPMAFS_DATE_PK,Date)
            If (FCPMAFS_CDF_DOCUMENT_FK_PK Is Nothing) Then
                Throw New Global.System.ArgumentNullException("FCPMAFS_CDF_DOCUMENT_FK_PK")
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(FCPMAFS_CDF_DOCUMENT_FK_PK,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal FCPMAFS_FCPM_CODE_FK_PK As Integer, ByVal FCPMAFS_SP_CODE_FK_PK As Integer, ByVal FCPMAFS_DATE_PK As Date, ByVal FCPMAFS_CDF_DOCUMENT_FK_PK As String, ByVal Original_FCPMAFS_FCPM_CODE_FK_PK As Integer, ByVal Original_FCPMAFS_SP_CODE_FK_PK As Integer, ByVal Original_FCPMAFS_DATE_PK As Date, ByVal Original_FCPMAFS_CDF_DOCUMENT_FK_PK As String) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(FCPMAFS_FCPM_CODE_FK_PK,Integer)
            Me.Adapter.UpdateCommand.Parameters(1).Value = CType(FCPMAFS_SP_CODE_FK_PK,Integer)
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(FCPMAFS_DATE_PK,Date)
            If (FCPMAFS_CDF_DOCUMENT_FK_PK Is Nothing) Then
                Throw New Global.System.ArgumentNullException("FCPMAFS_CDF_DOCUMENT_FK_PK")
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(FCPMAFS_CDF_DOCUMENT_FK_PK,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Original_FCPMAFS_FCPM_CODE_FK_PK,Integer)
            Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Original_FCPMAFS_SP_CODE_FK_PK,Integer)
            Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Original_FCPMAFS_DATE_PK,Date)
            If (Original_FCPMAFS_CDF_DOCUMENT_FK_PK Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_FCPMAFS_CDF_DOCUMENT_FK_PK")
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Original_FCPMAFS_CDF_DOCUMENT_FK_PK,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal Original_FCPMAFS_FCPM_CODE_FK_PK As Integer, ByVal Original_FCPMAFS_SP_CODE_FK_PK As Integer, ByVal Original_FCPMAFS_DATE_PK As Date, ByVal Original_FCPMAFS_CDF_DOCUMENT_FK_PK As String) As Integer
            Return Me.Update(Original_FCPMAFS_FCPM_CODE_FK_PK, Original_FCPMAFS_SP_CODE_FK_PK, Original_FCPMAFS_DATE_PK, Original_FCPMAFS_CDF_DOCUMENT_FK_PK, Original_FCPMAFS_FCPM_CODE_FK_PK, Original_FCPMAFS_SP_CODE_FK_PK, Original_FCPMAFS_DATE_PK, Original_FCPMAFS_CDF_DOCUMENT_FK_PK)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class FCPM_FICHECIPEMGTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "FCPM_FICHECIPEMG"
            tableMapping.ColumnMappings.Add("FCPM_CODE_SQ_PK", "FCPM_CODE_SQ_PK")
            tableMapping.ColumnMappings.Add("FCPM_DATECR", "FCPM_DATECR")
            tableMapping.ColumnMappings.Add("FCPM_DATEMJ", "FCPM_DATEMJ")
            tableMapping.ColumnMappings.Add("FCPM_ORIGINE", "FCPM_ORIGINE")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [theriaque].[FCPM_FICHECIPEMG] WHERE (([FCPM_CODE_SQ_PK] = @Original_"& _ 
                "FCPM_CODE_SQ_PK) AND ([FCPM_DATECR] = @Original_FCPM_DATECR) AND ((@IsNull_FCPM_"& _ 
                "DATEMJ = 1 AND [FCPM_DATEMJ] IS NULL) OR ([FCPM_DATEMJ] = @Original_FCPM_DATEMJ)"& _ 
                ") AND ([FCPM_ORIGINE] = @Original_FCPM_ORIGINE))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FCPM_CODE_SQ_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPM_CODE_SQ_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FCPM_DATECR", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPM_DATECR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FCPM_DATEMJ", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPM_DATEMJ", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FCPM_DATEMJ", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPM_DATEMJ", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FCPM_ORIGINE", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPM_ORIGINE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [theriaque].[FCPM_FICHECIPEMG] ([FCPM_CODE_SQ_PK], [FCPM_DATECR], [FC"& _ 
                "PM_DATEMJ], [FCPM_ORIGINE]) VALUES (@FCPM_CODE_SQ_PK, @FCPM_DATECR, @FCPM_DATEMJ"& _ 
                ", @FCPM_ORIGINE);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT FCPM_CODE_SQ_PK, FCPM_DATECR, FCPM_DATEMJ, FCPM_ORIGIN"& _ 
                "E FROM theriaque.FCPM_FICHECIPEMG WHERE (FCPM_CODE_SQ_PK = @FCPM_CODE_SQ_PK)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FCPM_CODE_SQ_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPM_CODE_SQ_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FCPM_DATECR", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPM_DATECR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FCPM_DATEMJ", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPM_DATEMJ", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FCPM_ORIGINE", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPM_ORIGINE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [theriaque].[FCPM_FICHECIPEMG] SET [FCPM_CODE_SQ_PK] = @FCPM_CODE_SQ_PK, ["& _ 
                "FCPM_DATECR] = @FCPM_DATECR, [FCPM_DATEMJ] = @FCPM_DATEMJ, [FCPM_ORIGINE] = @FCP"& _ 
                "M_ORIGINE WHERE (([FCPM_CODE_SQ_PK] = @Original_FCPM_CODE_SQ_PK) AND ([FCPM_DATE"& _ 
                "CR] = @Original_FCPM_DATECR) AND ((@IsNull_FCPM_DATEMJ = 1 AND [FCPM_DATEMJ] IS "& _ 
                "NULL) OR ([FCPM_DATEMJ] = @Original_FCPM_DATEMJ)) AND ([FCPM_ORIGINE] = @Origina"& _ 
                "l_FCPM_ORIGINE));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT FCPM_CODE_SQ_PK, FCPM_DATECR, FCPM_DATEMJ, FCPM_ORIGIN"& _ 
                "E FROM theriaque.FCPM_FICHECIPEMG WHERE (FCPM_CODE_SQ_PK = @FCPM_CODE_SQ_PK)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FCPM_CODE_SQ_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPM_CODE_SQ_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FCPM_DATECR", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPM_DATECR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FCPM_DATEMJ", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPM_DATEMJ", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FCPM_ORIGINE", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPM_ORIGINE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FCPM_CODE_SQ_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPM_CODE_SQ_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FCPM_DATECR", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPM_DATECR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FCPM_DATEMJ", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPM_DATEMJ", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FCPM_DATEMJ", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPM_DATEMJ", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FCPM_ORIGINE", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPM_ORIGINE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Theriaque.MySettings.Default.theriaqueDSConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT FCPM_CODE_SQ_PK, FCPM_DATECR, FCPM_DATEMJ, FCPM_ORIGINE FROM theriaque.FCP"& _ 
                "M_FICHECIPEMG"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT FCPM_CODE_SQ_PK, FCPM_DATECR, FCPM_DATEMJ,FCPM_ORIGINE FROM THERIAQUE.FCPM"& _ 
                "_FICHECIPEMG"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE FCPM_CODE_SQ_PK = @FCPM_CODE_SQ_PK"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FCPM_CODE_SQ_PK", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "FCPM_CODE_SQ_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsTheriaque_Cipemg_Code.FCPM_FICHECIPEMGDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsTheriaque_Cipemg_Code.FCPM_FICHECIPEMGDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsTheriaque_Cipemg_Code.FCPM_FICHECIPEMGDataTable = New dsTheriaque_Cipemg_Code.FCPM_FICHECIPEMGDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByCode(ByVal dataTable As dsTheriaque_Cipemg_Code.FCPM_FICHECIPEMGDataTable, ByVal FCPM_CODE_SQ_PK As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(FCPM_CODE_SQ_PK,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByCode(ByVal FCPM_CODE_SQ_PK As Integer) As dsTheriaque_Cipemg_Code.FCPM_FICHECIPEMGDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(FCPM_CODE_SQ_PK,Integer)
            Dim dataTable As dsTheriaque_Cipemg_Code.FCPM_FICHECIPEMGDataTable = New dsTheriaque_Cipemg_Code.FCPM_FICHECIPEMGDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsTheriaque_Cipemg_Code.FCPM_FICHECIPEMGDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsTheriaque_Cipemg_Code) As Integer
            Return Me.Adapter.Update(dataSet, "FCPM_FICHECIPEMG")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_FCPM_CODE_SQ_PK As Integer, ByVal Original_FCPM_DATECR As Date, ByVal Original_FCPM_DATEMJ As Global.System.Nullable(Of Date), ByVal Original_FCPM_ORIGINE As String) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_FCPM_CODE_SQ_PK,Integer)
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_FCPM_DATECR,Date)
            If (Original_FCPM_DATEMJ.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_FCPM_DATEMJ.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (Original_FCPM_ORIGINE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_FCPM_ORIGINE")
            Else
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_FCPM_ORIGINE,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal FCPM_CODE_SQ_PK As Integer, ByVal FCPM_DATECR As Date, ByVal FCPM_DATEMJ As Global.System.Nullable(Of Date), ByVal FCPM_ORIGINE As String) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(FCPM_CODE_SQ_PK,Integer)
            Me.Adapter.InsertCommand.Parameters(1).Value = CType(FCPM_DATECR,Date)
            If (FCPM_DATEMJ.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(FCPM_DATEMJ.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (FCPM_ORIGINE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("FCPM_ORIGINE")
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(FCPM_ORIGINE,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal FCPM_CODE_SQ_PK As Integer, ByVal FCPM_DATECR As Date, ByVal FCPM_DATEMJ As Global.System.Nullable(Of Date), ByVal FCPM_ORIGINE As String, ByVal Original_FCPM_CODE_SQ_PK As Integer, ByVal Original_FCPM_DATECR As Date, ByVal Original_FCPM_DATEMJ As Global.System.Nullable(Of Date), ByVal Original_FCPM_ORIGINE As String) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(FCPM_CODE_SQ_PK,Integer)
            Me.Adapter.UpdateCommand.Parameters(1).Value = CType(FCPM_DATECR,Date)
            If (FCPM_DATEMJ.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(FCPM_DATEMJ.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (FCPM_ORIGINE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("FCPM_ORIGINE")
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(FCPM_ORIGINE,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Original_FCPM_CODE_SQ_PK,Integer)
            Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Original_FCPM_DATECR,Date)
            If (Original_FCPM_DATEMJ.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Original_FCPM_DATEMJ.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (Original_FCPM_ORIGINE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_FCPM_ORIGINE")
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Original_FCPM_ORIGINE,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal FCPM_DATECR As Date, ByVal FCPM_DATEMJ As Global.System.Nullable(Of Date), ByVal FCPM_ORIGINE As String, ByVal Original_FCPM_CODE_SQ_PK As Integer, ByVal Original_FCPM_DATECR As Date, ByVal Original_FCPM_DATEMJ As Global.System.Nullable(Of Date), ByVal Original_FCPM_ORIGINE As String) As Integer
            Return Me.Update(Original_FCPM_CODE_SQ_PK, FCPM_DATECR, FCPM_DATEMJ, FCPM_ORIGINE, Original_FCPM_CODE_SQ_PK, Original_FCPM_DATECR, Original_FCPM_DATEMJ, Original_FCPM_ORIGINE)
        End Function
    End Class
End Namespace
