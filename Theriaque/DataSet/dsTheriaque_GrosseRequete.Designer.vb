'------------------------------------------------------------------------------
' <auto-generated>
'     Ce code a été généré par un outil.
'     Version du runtime :2.0.50727.312
'
'     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
'     le code est régénéré.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System


<System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Serializable(),  _
 System.ComponentModel.DesignerCategoryAttribute("code"),  _
 System.ComponentModel.ToolboxItem(true),  _
 System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 System.Xml.Serialization.XmlRootAttribute("dsTheriaque_GrosseRequete"),  _
 System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class dsTheriaque_GrosseRequete
    Inherits System.Data.DataSet
    
    Private tableSP_SPECIALITE As SP_SPECIALITEDataTable
    
    Private tablePRE_PRESENTATION As PRE_PRESENTATIONDataTable
    
    Private tableSPDDD_DOSE_USUELLE_JOUR As SPDDD_DOSE_USUELLE_JOURDataTable
    
    Private tablePRETSS_PRESENTATION_TAUX As PRETSS_PRESENTATION_TAUXDataTable
    
    Private relationFK1_PRE_PRESENTATION As System.Data.DataRelation
    
    Private relationFK1_PRETSS_PRESENTATION_TAUX As System.Data.DataRelation
    
    Private _schemaSerializationMode As System.Data.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As System.Runtime.Serialization.SerializationInfo, ByVal context As System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As System.Data.DataSet = New System.Data.DataSet
            ds.ReadXmlSchema(New System.Xml.XmlTextReader(New System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("SP_SPECIALITE")) Is Nothing) Then
                MyBase.Tables.Add(New SP_SPECIALITEDataTable(ds.Tables("SP_SPECIALITE")))
            End If
            If (Not (ds.Tables("PRE_PRESENTATION")) Is Nothing) Then
                MyBase.Tables.Add(New PRE_PRESENTATIONDataTable(ds.Tables("PRE_PRESENTATION")))
            End If
            If (Not (ds.Tables("SPDDD_DOSE_USUELLE_JOUR")) Is Nothing) Then
                MyBase.Tables.Add(New SPDDD_DOSE_USUELLE_JOURDataTable(ds.Tables("SPDDD_DOSE_USUELLE_JOUR")))
            End If
            If (Not (ds.Tables("PRETSS_PRESENTATION_TAUX")) Is Nothing) Then
                MyBase.Tables.Add(New PRETSS_PRESENTATION_TAUXDataTable(ds.Tables("PRETSS_PRESENTATION_TAUX")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New System.Xml.XmlTextReader(New System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property SP_SPECIALITE() As SP_SPECIALITEDataTable
        Get
            Return Me.tableSP_SPECIALITE
        End Get
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property PRE_PRESENTATION() As PRE_PRESENTATIONDataTable
        Get
            Return Me.tablePRE_PRESENTATION
        End Get
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property SPDDD_DOSE_USUELLE_JOUR() As SPDDD_DOSE_USUELLE_JOURDataTable
        Get
            Return Me.tableSPDDD_DOSE_USUELLE_JOUR
        End Get
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property PRETSS_PRESENTATION_TAUX() As PRETSS_PRESENTATION_TAUXDataTable
        Get
            Return Me.tablePRETSS_PRESENTATION_TAUX
        End Get
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     System.ComponentModel.BrowsableAttribute(true),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As System.Data.DataSet
        Dim cln As dsTheriaque_GrosseRequete = CType(MyBase.Clone,dsTheriaque_GrosseRequete)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As System.Data.DataSet = New System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("SP_SPECIALITE")) Is Nothing) Then
                MyBase.Tables.Add(New SP_SPECIALITEDataTable(ds.Tables("SP_SPECIALITE")))
            End If
            If (Not (ds.Tables("PRE_PRESENTATION")) Is Nothing) Then
                MyBase.Tables.Add(New PRE_PRESENTATIONDataTable(ds.Tables("PRE_PRESENTATION")))
            End If
            If (Not (ds.Tables("SPDDD_DOSE_USUELLE_JOUR")) Is Nothing) Then
                MyBase.Tables.Add(New SPDDD_DOSE_USUELLE_JOURDataTable(ds.Tables("SPDDD_DOSE_USUELLE_JOUR")))
            End If
            If (Not (ds.Tables("PRETSS_PRESENTATION_TAUX")) Is Nothing) Then
                MyBase.Tables.Add(New PRETSS_PRESENTATION_TAUXDataTable(ds.Tables("PRETSS_PRESENTATION_TAUX")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As System.Xml.Schema.XmlSchema
        Dim stream As System.IO.MemoryStream = New System.IO.MemoryStream
        Me.WriteXmlSchema(New System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return System.Xml.Schema.XmlSchema.Read(New System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableSP_SPECIALITE = CType(MyBase.Tables("SP_SPECIALITE"),SP_SPECIALITEDataTable)
        If (initTable = true) Then
            If (Not (Me.tableSP_SPECIALITE) Is Nothing) Then
                Me.tableSP_SPECIALITE.InitVars
            End If
        End If
        Me.tablePRE_PRESENTATION = CType(MyBase.Tables("PRE_PRESENTATION"),PRE_PRESENTATIONDataTable)
        If (initTable = true) Then
            If (Not (Me.tablePRE_PRESENTATION) Is Nothing) Then
                Me.tablePRE_PRESENTATION.InitVars
            End If
        End If
        Me.tableSPDDD_DOSE_USUELLE_JOUR = CType(MyBase.Tables("SPDDD_DOSE_USUELLE_JOUR"),SPDDD_DOSE_USUELLE_JOURDataTable)
        If (initTable = true) Then
            If (Not (Me.tableSPDDD_DOSE_USUELLE_JOUR) Is Nothing) Then
                Me.tableSPDDD_DOSE_USUELLE_JOUR.InitVars
            End If
        End If
        Me.tablePRETSS_PRESENTATION_TAUX = CType(MyBase.Tables("PRETSS_PRESENTATION_TAUX"),PRETSS_PRESENTATION_TAUXDataTable)
        If (initTable = true) Then
            If (Not (Me.tablePRETSS_PRESENTATION_TAUX) Is Nothing) Then
                Me.tablePRETSS_PRESENTATION_TAUX.InitVars
            End If
        End If
        Me.relationFK1_PRE_PRESENTATION = Me.Relations("FK1_PRE_PRESENTATION")
        Me.relationFK1_PRETSS_PRESENTATION_TAUX = Me.Relations("FK1_PRETSS_PRESENTATION_TAUX")
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "dsTheriaque_GrosseRequete"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/dsTheriaque_GrosseRequete.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableSP_SPECIALITE = New SP_SPECIALITEDataTable
        MyBase.Tables.Add(Me.tableSP_SPECIALITE)
        Me.tablePRE_PRESENTATION = New PRE_PRESENTATIONDataTable
        MyBase.Tables.Add(Me.tablePRE_PRESENTATION)
        Me.tableSPDDD_DOSE_USUELLE_JOUR = New SPDDD_DOSE_USUELLE_JOURDataTable
        MyBase.Tables.Add(Me.tableSPDDD_DOSE_USUELLE_JOUR)
        Me.tablePRETSS_PRESENTATION_TAUX = New PRETSS_PRESENTATION_TAUXDataTable
        MyBase.Tables.Add(Me.tablePRETSS_PRESENTATION_TAUX)
        Me.relationFK1_PRE_PRESENTATION = New System.Data.DataRelation("FK1_PRE_PRESENTATION", New System.Data.DataColumn() {Me.tableSP_SPECIALITE.SP_CODE_SQ_PKColumn}, New System.Data.DataColumn() {Me.tablePRE_PRESENTATION.PRE_SP_CODE_FKColumn}, false)
        Me.Relations.Add(Me.relationFK1_PRE_PRESENTATION)
        Me.relationFK1_PRETSS_PRESENTATION_TAUX = New System.Data.DataRelation("FK1_PRETSS_PRESENTATION_TAUX", New System.Data.DataColumn() {Me.tablePRE_PRESENTATION.PRE_CODE_PKColumn}, New System.Data.DataColumn() {Me.tablePRETSS_PRESENTATION_TAUX.PRETSS_PRE_CODE_FK_PKColumn}, false)
        Me.Relations.Add(Me.relationFK1_PRETSS_PRESENTATION_TAUX)
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeSP_SPECIALITE() As Boolean
        Return false
    End Function
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializePRE_PRESENTATION() As Boolean
        Return false
    End Function
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeSPDDD_DOSE_USUELLE_JOUR() As Boolean
        Return false
    End Function
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializePRETSS_PRESENTATION_TAUX() As Boolean
        Return false
    End Function
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As System.Xml.Schema.XmlSchemaSet) As System.Xml.Schema.XmlSchemaComplexType
        Dim ds As dsTheriaque_GrosseRequete = New dsTheriaque_GrosseRequete
        Dim type As System.Xml.Schema.XmlSchemaComplexType = New System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As System.Xml.Schema.XmlSchemaSequence = New System.Xml.Schema.XmlSchemaSequence
        xs.Add(ds.GetSchemaSerializable)
        Dim any As System.Xml.Schema.XmlSchemaAny = New System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Return type
    End Function
    
    Public Delegate Sub SP_SPECIALITERowChangeEventHandler(ByVal sender As Object, ByVal e As SP_SPECIALITERowChangeEvent)
    
    Public Delegate Sub PRE_PRESENTATIONRowChangeEventHandler(ByVal sender As Object, ByVal e As PRE_PRESENTATIONRowChangeEvent)
    
    Public Delegate Sub SPDDD_DOSE_USUELLE_JOURRowChangeEventHandler(ByVal sender As Object, ByVal e As SPDDD_DOSE_USUELLE_JOURRowChangeEvent)
    
    Public Delegate Sub PRETSS_PRESENTATION_TAUXRowChangeEventHandler(ByVal sender As Object, ByVal e As PRETSS_PRESENTATION_TAUXRowChangeEvent)
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     System.Serializable(),  _
     System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class SP_SPECIALITEDataTable
        Inherits System.Data.DataTable
        Implements System.Collections.IEnumerable
        
        Private columnSP_CODE_SQ_PK As System.Data.DataColumn
        
        Private columnSP_GSP_CODE_FK As System.Data.DataColumn
        
        Private columnSP_CDF_SLAB_CODE_FK As System.Data.DataColumn
        
        Private columnSP_CDF_LI_CODE_FK As System.Data.DataColumn
        
        Private columnSP_CATC_CODE_FK As System.Data.DataColumn
        
        Private columnSP_CEPH_CODE_FK As System.Data.DataColumn
        
        Private columnSP_CGE_CODE_FK As System.Data.DataColumn
        
        Private columnSP_PR_CODE_FK As System.Data.DataColumn
        
        Private columnSP_TYPE_SPE As System.Data.DataColumn
        
        Private columnSP_GREF_FK As System.Data.DataColumn
        
        Private columnSP_GREF_DATECR_FK As System.Data.DataColumn
        
        Private columnSP_NOM As System.Data.DataColumn
        
        Private columnSP_NOMCOMP As System.Data.DataColumn
        
        Private columnSP_PH As System.Data.DataColumn
        
        Private columnSP_CIPUCD As System.Data.DataColumn
        
        Private columnSP_DATECR As System.Data.DataColumn
        
        Private columnSP_DATEMJ As System.Data.DataColumn
        
        Private columnSP_NL As System.Data.DataColumn
        
        Private columnSP_APHP As System.Data.DataColumn
        
        Private columnSP_DATEJOGENE As System.Data.DataColumn
        
        Private columnSP_ORIGINE_GENE As System.Data.DataColumn
        
        Private columnSP_NOMLONG As System.Data.DataColumn
        
        Private columnSP_CDT_PRESCR_TEXTE As System.Data.DataColumn
        
        Private columnSP_ATC_DDD_TEXTE As System.Data.DataColumn
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "SP_SPECIALITE"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As System.Runtime.Serialization.SerializationInfo, ByVal context As System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SP_CODE_SQ_PKColumn() As System.Data.DataColumn
            Get
                Return Me.columnSP_CODE_SQ_PK
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SP_GSP_CODE_FKColumn() As System.Data.DataColumn
            Get
                Return Me.columnSP_GSP_CODE_FK
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SP_CDF_SLAB_CODE_FKColumn() As System.Data.DataColumn
            Get
                Return Me.columnSP_CDF_SLAB_CODE_FK
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SP_CDF_LI_CODE_FKColumn() As System.Data.DataColumn
            Get
                Return Me.columnSP_CDF_LI_CODE_FK
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SP_CATC_CODE_FKColumn() As System.Data.DataColumn
            Get
                Return Me.columnSP_CATC_CODE_FK
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SP_CEPH_CODE_FKColumn() As System.Data.DataColumn
            Get
                Return Me.columnSP_CEPH_CODE_FK
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SP_CGE_CODE_FKColumn() As System.Data.DataColumn
            Get
                Return Me.columnSP_CGE_CODE_FK
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SP_PR_CODE_FKColumn() As System.Data.DataColumn
            Get
                Return Me.columnSP_PR_CODE_FK
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SP_TYPE_SPEColumn() As System.Data.DataColumn
            Get
                Return Me.columnSP_TYPE_SPE
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SP_GREF_FKColumn() As System.Data.DataColumn
            Get
                Return Me.columnSP_GREF_FK
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SP_GREF_DATECR_FKColumn() As System.Data.DataColumn
            Get
                Return Me.columnSP_GREF_DATECR_FK
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SP_NOMColumn() As System.Data.DataColumn
            Get
                Return Me.columnSP_NOM
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SP_NOMCOMPColumn() As System.Data.DataColumn
            Get
                Return Me.columnSP_NOMCOMP
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SP_PHColumn() As System.Data.DataColumn
            Get
                Return Me.columnSP_PH
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SP_CIPUCDColumn() As System.Data.DataColumn
            Get
                Return Me.columnSP_CIPUCD
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SP_DATECRColumn() As System.Data.DataColumn
            Get
                Return Me.columnSP_DATECR
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SP_DATEMJColumn() As System.Data.DataColumn
            Get
                Return Me.columnSP_DATEMJ
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SP_NLColumn() As System.Data.DataColumn
            Get
                Return Me.columnSP_NL
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SP_APHPColumn() As System.Data.DataColumn
            Get
                Return Me.columnSP_APHP
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SP_DATEJOGENEColumn() As System.Data.DataColumn
            Get
                Return Me.columnSP_DATEJOGENE
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SP_ORIGINE_GENEColumn() As System.Data.DataColumn
            Get
                Return Me.columnSP_ORIGINE_GENE
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SP_NOMLONGColumn() As System.Data.DataColumn
            Get
                Return Me.columnSP_NOMLONG
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SP_CDT_PRESCR_TEXTEColumn() As System.Data.DataColumn
            Get
                Return Me.columnSP_CDT_PRESCR_TEXTE
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SP_ATC_DDD_TEXTEColumn() As System.Data.DataColumn
            Get
                Return Me.columnSP_ATC_DDD_TEXTE
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As SP_SPECIALITERow
            Get
                Return CType(Me.Rows(index),SP_SPECIALITERow)
            End Get
        End Property
        
        Public Event SP_SPECIALITERowChanging As SP_SPECIALITERowChangeEventHandler
        
        Public Event SP_SPECIALITERowChanged As SP_SPECIALITERowChangeEventHandler
        
        Public Event SP_SPECIALITERowDeleting As SP_SPECIALITERowChangeEventHandler
        
        Public Event SP_SPECIALITERowDeleted As SP_SPECIALITERowChangeEventHandler
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddSP_SPECIALITERow(ByVal row As SP_SPECIALITERow)
            Me.Rows.Add(row)
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddSP_SPECIALITERow( _
                    ByVal SP_CODE_SQ_PK As Integer,  _
                    ByVal SP_GSP_CODE_FK As Integer,  _
                    ByVal SP_CDF_SLAB_CODE_FK As String,  _
                    ByVal SP_CDF_LI_CODE_FK As String,  _
                    ByVal SP_CATC_CODE_FK As String,  _
                    ByVal SP_CEPH_CODE_FK As String,  _
                    ByVal SP_CGE_CODE_FK As Integer,  _
                    ByVal SP_PR_CODE_FK As Integer,  _
                    ByVal SP_TYPE_SPE As String,  _
                    ByVal SP_GREF_FK As Integer,  _
                    ByVal SP_GREF_DATECR_FK As Date,  _
                    ByVal SP_NOM As String,  _
                    ByVal SP_NOMCOMP As String,  _
                    ByVal SP_PH As String,  _
                    ByVal SP_CIPUCD As String,  _
                    ByVal SP_DATECR As Date,  _
                    ByVal SP_DATEMJ As Date,  _
                    ByVal SP_NL As String,  _
                    ByVal SP_APHP As String,  _
                    ByVal SP_DATEJOGENE As Date,  _
                    ByVal SP_ORIGINE_GENE As String,  _
                    ByVal SP_NOMLONG As String,  _
                    ByVal SP_CDT_PRESCR_TEXTE As String,  _
                    ByVal SP_ATC_DDD_TEXTE As String) As SP_SPECIALITERow
            Dim rowSP_SPECIALITERow As SP_SPECIALITERow = CType(Me.NewRow,SP_SPECIALITERow)
            rowSP_SPECIALITERow.ItemArray = New Object() {SP_CODE_SQ_PK, SP_GSP_CODE_FK, SP_CDF_SLAB_CODE_FK, SP_CDF_LI_CODE_FK, SP_CATC_CODE_FK, SP_CEPH_CODE_FK, SP_CGE_CODE_FK, SP_PR_CODE_FK, SP_TYPE_SPE, SP_GREF_FK, SP_GREF_DATECR_FK, SP_NOM, SP_NOMCOMP, SP_PH, SP_CIPUCD, SP_DATECR, SP_DATEMJ, SP_NL, SP_APHP, SP_DATEJOGENE, SP_ORIGINE_GENE, SP_NOMLONG, SP_CDT_PRESCR_TEXTE, SP_ATC_DDD_TEXTE}
            Me.Rows.Add(rowSP_SPECIALITERow)
            Return rowSP_SPECIALITERow
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindBySP_CODE_SQ_PK(ByVal SP_CODE_SQ_PK As Integer) As SP_SPECIALITERow
            Return CType(Me.Rows.Find(New Object() {SP_CODE_SQ_PK}),SP_SPECIALITERow)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As System.Data.DataTable
            Dim cln As SP_SPECIALITEDataTable = CType(MyBase.Clone,SP_SPECIALITEDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As System.Data.DataTable
            Return New SP_SPECIALITEDataTable
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnSP_CODE_SQ_PK = MyBase.Columns("SP_CODE_SQ_PK")
            Me.columnSP_GSP_CODE_FK = MyBase.Columns("SP_GSP_CODE_FK")
            Me.columnSP_CDF_SLAB_CODE_FK = MyBase.Columns("SP_CDF_SLAB_CODE_FK")
            Me.columnSP_CDF_LI_CODE_FK = MyBase.Columns("SP_CDF_LI_CODE_FK")
            Me.columnSP_CATC_CODE_FK = MyBase.Columns("SP_CATC_CODE_FK")
            Me.columnSP_CEPH_CODE_FK = MyBase.Columns("SP_CEPH_CODE_FK")
            Me.columnSP_CGE_CODE_FK = MyBase.Columns("SP_CGE_CODE_FK")
            Me.columnSP_PR_CODE_FK = MyBase.Columns("SP_PR_CODE_FK")
            Me.columnSP_TYPE_SPE = MyBase.Columns("SP_TYPE_SPE")
            Me.columnSP_GREF_FK = MyBase.Columns("SP_GREF_FK")
            Me.columnSP_GREF_DATECR_FK = MyBase.Columns("SP_GREF_DATECR_FK")
            Me.columnSP_NOM = MyBase.Columns("SP_NOM")
            Me.columnSP_NOMCOMP = MyBase.Columns("SP_NOMCOMP")
            Me.columnSP_PH = MyBase.Columns("SP_PH")
            Me.columnSP_CIPUCD = MyBase.Columns("SP_CIPUCD")
            Me.columnSP_DATECR = MyBase.Columns("SP_DATECR")
            Me.columnSP_DATEMJ = MyBase.Columns("SP_DATEMJ")
            Me.columnSP_NL = MyBase.Columns("SP_NL")
            Me.columnSP_APHP = MyBase.Columns("SP_APHP")
            Me.columnSP_DATEJOGENE = MyBase.Columns("SP_DATEJOGENE")
            Me.columnSP_ORIGINE_GENE = MyBase.Columns("SP_ORIGINE_GENE")
            Me.columnSP_NOMLONG = MyBase.Columns("SP_NOMLONG")
            Me.columnSP_CDT_PRESCR_TEXTE = MyBase.Columns("SP_CDT_PRESCR_TEXTE")
            Me.columnSP_ATC_DDD_TEXTE = MyBase.Columns("SP_ATC_DDD_TEXTE")
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnSP_CODE_SQ_PK = New System.Data.DataColumn("SP_CODE_SQ_PK", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSP_CODE_SQ_PK)
            Me.columnSP_GSP_CODE_FK = New System.Data.DataColumn("SP_GSP_CODE_FK", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSP_GSP_CODE_FK)
            Me.columnSP_CDF_SLAB_CODE_FK = New System.Data.DataColumn("SP_CDF_SLAB_CODE_FK", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSP_CDF_SLAB_CODE_FK)
            Me.columnSP_CDF_LI_CODE_FK = New System.Data.DataColumn("SP_CDF_LI_CODE_FK", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSP_CDF_LI_CODE_FK)
            Me.columnSP_CATC_CODE_FK = New System.Data.DataColumn("SP_CATC_CODE_FK", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSP_CATC_CODE_FK)
            Me.columnSP_CEPH_CODE_FK = New System.Data.DataColumn("SP_CEPH_CODE_FK", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSP_CEPH_CODE_FK)
            Me.columnSP_CGE_CODE_FK = New System.Data.DataColumn("SP_CGE_CODE_FK", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSP_CGE_CODE_FK)
            Me.columnSP_PR_CODE_FK = New System.Data.DataColumn("SP_PR_CODE_FK", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSP_PR_CODE_FK)
            Me.columnSP_TYPE_SPE = New System.Data.DataColumn("SP_TYPE_SPE", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSP_TYPE_SPE)
            Me.columnSP_GREF_FK = New System.Data.DataColumn("SP_GREF_FK", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSP_GREF_FK)
            Me.columnSP_GREF_DATECR_FK = New System.Data.DataColumn("SP_GREF_DATECR_FK", GetType(Date), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSP_GREF_DATECR_FK)
            Me.columnSP_NOM = New System.Data.DataColumn("SP_NOM", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSP_NOM)
            Me.columnSP_NOMCOMP = New System.Data.DataColumn("SP_NOMCOMP", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSP_NOMCOMP)
            Me.columnSP_PH = New System.Data.DataColumn("SP_PH", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSP_PH)
            Me.columnSP_CIPUCD = New System.Data.DataColumn("SP_CIPUCD", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSP_CIPUCD)
            Me.columnSP_DATECR = New System.Data.DataColumn("SP_DATECR", GetType(Date), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSP_DATECR)
            Me.columnSP_DATEMJ = New System.Data.DataColumn("SP_DATEMJ", GetType(Date), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSP_DATEMJ)
            Me.columnSP_NL = New System.Data.DataColumn("SP_NL", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSP_NL)
            Me.columnSP_APHP = New System.Data.DataColumn("SP_APHP", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSP_APHP)
            Me.columnSP_DATEJOGENE = New System.Data.DataColumn("SP_DATEJOGENE", GetType(Date), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSP_DATEJOGENE)
            Me.columnSP_ORIGINE_GENE = New System.Data.DataColumn("SP_ORIGINE_GENE", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSP_ORIGINE_GENE)
            Me.columnSP_NOMLONG = New System.Data.DataColumn("SP_NOMLONG", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSP_NOMLONG)
            Me.columnSP_CDT_PRESCR_TEXTE = New System.Data.DataColumn("SP_CDT_PRESCR_TEXTE", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSP_CDT_PRESCR_TEXTE)
            Me.columnSP_ATC_DDD_TEXTE = New System.Data.DataColumn("SP_ATC_DDD_TEXTE", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSP_ATC_DDD_TEXTE)
            Me.Constraints.Add(New System.Data.UniqueConstraint("Constraint1", New System.Data.DataColumn() {Me.columnSP_CODE_SQ_PK}, true))
            Me.columnSP_CODE_SQ_PK.AllowDBNull = false
            Me.columnSP_CODE_SQ_PK.Unique = true
            Me.columnSP_CDF_SLAB_CODE_FK.AllowDBNull = false
            Me.columnSP_CDF_SLAB_CODE_FK.MaxLength = 10
            Me.columnSP_CDF_LI_CODE_FK.AllowDBNull = false
            Me.columnSP_CDF_LI_CODE_FK.MaxLength = 10
            Me.columnSP_CATC_CODE_FK.MaxLength = 10
            Me.columnSP_CEPH_CODE_FK.MaxLength = 10
            Me.columnSP_PR_CODE_FK.AllowDBNull = false
            Me.columnSP_TYPE_SPE.MaxLength = 1
            Me.columnSP_NOM.AllowDBNull = false
            Me.columnSP_NOM.MaxLength = 36
            Me.columnSP_NOMCOMP.MaxLength = 255
            Me.columnSP_PH.MaxLength = 10
            Me.columnSP_CIPUCD.MaxLength = 7
            Me.columnSP_DATECR.AllowDBNull = false
            Me.columnSP_NL.MaxLength = 13
            Me.columnSP_APHP.MaxLength = 7
            Me.columnSP_ORIGINE_GENE.MaxLength = 1
            Me.columnSP_NOMLONG.MaxLength = 255
            Me.columnSP_CDT_PRESCR_TEXTE.MaxLength = 4000
            Me.columnSP_ATC_DDD_TEXTE.MaxLength = 255
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewSP_SPECIALITERow() As SP_SPECIALITERow
            Return CType(Me.NewRow,SP_SPECIALITERow)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As System.Data.DataRowBuilder) As System.Data.DataRow
            Return New SP_SPECIALITERow(builder)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(SP_SPECIALITERow)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.SP_SPECIALITERowChangedEvent) Is Nothing) Then
                RaiseEvent SP_SPECIALITERowChanged(Me, New SP_SPECIALITERowChangeEvent(CType(e.Row,SP_SPECIALITERow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.SP_SPECIALITERowChangingEvent) Is Nothing) Then
                RaiseEvent SP_SPECIALITERowChanging(Me, New SP_SPECIALITERowChangeEvent(CType(e.Row,SP_SPECIALITERow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.SP_SPECIALITERowDeletedEvent) Is Nothing) Then
                RaiseEvent SP_SPECIALITERowDeleted(Me, New SP_SPECIALITERowChangeEvent(CType(e.Row,SP_SPECIALITERow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.SP_SPECIALITERowDeletingEvent) Is Nothing) Then
                RaiseEvent SP_SPECIALITERowDeleting(Me, New SP_SPECIALITERowChangeEvent(CType(e.Row,SP_SPECIALITERow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveSP_SPECIALITERow(ByVal row As SP_SPECIALITERow)
            Me.Rows.Remove(row)
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As System.Xml.Schema.XmlSchemaSet) As System.Xml.Schema.XmlSchemaComplexType
            Dim type As System.Xml.Schema.XmlSchemaComplexType = New System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As System.Xml.Schema.XmlSchemaSequence = New System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsTheriaque_GrosseRequete = New dsTheriaque_GrosseRequete
            xs.Add(ds.GetSchemaSerializable)
            Dim any1 As System.Xml.Schema.XmlSchemaAny = New System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As System.Xml.Schema.XmlSchemaAny = New System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As System.Xml.Schema.XmlSchemaAttribute = New System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As System.Xml.Schema.XmlSchemaAttribute = New System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "SP_SPECIALITEDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Return type
        End Function
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     System.Serializable(),  _
     System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class PRE_PRESENTATIONDataTable
        Inherits System.Data.DataTable
        Implements System.Collections.IEnumerable
        
        Private columnPRE_CODE_PK As System.Data.DataColumn
        
        Private columnPRE_SP_CODE_FK As System.Data.DataColumn
        
        Private columnPRE_EAN_REF As System.Data.DataColumn
        
        Private columnPRE_NBUNITE As System.Data.DataColumn
        
        Private columnPRE_CDF_UP_CODE_FK As System.Data.DataColumn
        
        Private columnPRE_CACDT_TEXTE As System.Data.DataColumn
        
        Private columnPRE_CDF_RH_CODE_FK As System.Data.DataColumn
        
        Private columnPRE_CDF_LI_CODE_FK As System.Data.DataColumn
        
        Private columnPRE_ETAT_COMMER As System.Data.DataColumn
        
        Private columnPRE_DATECOMMER As System.Data.DataColumn
        
        Private columnPRE_DATESUP As System.Data.DataColumn
        
        Private columnPRE_CDF_PU_CODE_FK As System.Data.DataColumn
        
        Private columnPRE_CEPH_CODE_FK As System.Data.DataColumn
        
        Private columnPRE_CATC_CODE_FK As System.Data.DataColumn
        
        Private columnPRE_NATUCD_CDF_CODE_FK As System.Data.DataColumn
        
        Private columnPRE_NATUCD_CDF_NUM_FK As System.Data.DataColumn
        
        Private columnPRE_DATEJOCIP As System.Data.DataColumn
        
        Private columnPRE_AGRCOLL As System.Data.DataColumn
        
        Private columnPRE_DATEJOCOLL As System.Data.DataColumn
        
        Private columnPRE_DATEFINCOLL As System.Data.DataColumn
        
        Private columnPRE_DATE_APPLIFINCOLL As System.Data.DataColumn
        
        Private columnPRE_PARTSTATUT As System.Data.DataColumn
        
        Private columnPRE_TSS_TEXTE As System.Data.DataColumn
        
        Private columnPRE_CONSAPOUV As System.Data.DataColumn
        
        Private columnPRE_LIB_CEPS As System.Data.DataColumn
        
        Private columnPRE_ADMIN As System.Data.DataColumn
        
        Private columnPRE_DATECR As System.Data.DataColumn
        
        Private columnPRE_DATEMJ As System.Data.DataColumn
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "PRE_PRESENTATION"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As System.Runtime.Serialization.SerializationInfo, ByVal context As System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PRE_CODE_PKColumn() As System.Data.DataColumn
            Get
                Return Me.columnPRE_CODE_PK
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PRE_SP_CODE_FKColumn() As System.Data.DataColumn
            Get
                Return Me.columnPRE_SP_CODE_FK
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PRE_EAN_REFColumn() As System.Data.DataColumn
            Get
                Return Me.columnPRE_EAN_REF
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PRE_NBUNITEColumn() As System.Data.DataColumn
            Get
                Return Me.columnPRE_NBUNITE
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PRE_CDF_UP_CODE_FKColumn() As System.Data.DataColumn
            Get
                Return Me.columnPRE_CDF_UP_CODE_FK
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PRE_CACDT_TEXTEColumn() As System.Data.DataColumn
            Get
                Return Me.columnPRE_CACDT_TEXTE
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PRE_CDF_RH_CODE_FKColumn() As System.Data.DataColumn
            Get
                Return Me.columnPRE_CDF_RH_CODE_FK
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PRE_CDF_LI_CODE_FKColumn() As System.Data.DataColumn
            Get
                Return Me.columnPRE_CDF_LI_CODE_FK
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PRE_ETAT_COMMERColumn() As System.Data.DataColumn
            Get
                Return Me.columnPRE_ETAT_COMMER
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PRE_DATECOMMERColumn() As System.Data.DataColumn
            Get
                Return Me.columnPRE_DATECOMMER
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PRE_DATESUPColumn() As System.Data.DataColumn
            Get
                Return Me.columnPRE_DATESUP
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PRE_CDF_PU_CODE_FKColumn() As System.Data.DataColumn
            Get
                Return Me.columnPRE_CDF_PU_CODE_FK
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PRE_CEPH_CODE_FKColumn() As System.Data.DataColumn
            Get
                Return Me.columnPRE_CEPH_CODE_FK
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PRE_CATC_CODE_FKColumn() As System.Data.DataColumn
            Get
                Return Me.columnPRE_CATC_CODE_FK
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PRE_NATUCD_CDF_CODE_FKColumn() As System.Data.DataColumn
            Get
                Return Me.columnPRE_NATUCD_CDF_CODE_FK
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PRE_NATUCD_CDF_NUM_FKColumn() As System.Data.DataColumn
            Get
                Return Me.columnPRE_NATUCD_CDF_NUM_FK
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PRE_DATEJOCIPColumn() As System.Data.DataColumn
            Get
                Return Me.columnPRE_DATEJOCIP
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PRE_AGRCOLLColumn() As System.Data.DataColumn
            Get
                Return Me.columnPRE_AGRCOLL
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PRE_DATEJOCOLLColumn() As System.Data.DataColumn
            Get
                Return Me.columnPRE_DATEJOCOLL
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PRE_DATEFINCOLLColumn() As System.Data.DataColumn
            Get
                Return Me.columnPRE_DATEFINCOLL
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PRE_DATE_APPLIFINCOLLColumn() As System.Data.DataColumn
            Get
                Return Me.columnPRE_DATE_APPLIFINCOLL
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PRE_PARTSTATUTColumn() As System.Data.DataColumn
            Get
                Return Me.columnPRE_PARTSTATUT
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PRE_TSS_TEXTEColumn() As System.Data.DataColumn
            Get
                Return Me.columnPRE_TSS_TEXTE
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PRE_CONSAPOUVColumn() As System.Data.DataColumn
            Get
                Return Me.columnPRE_CONSAPOUV
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PRE_LIB_CEPSColumn() As System.Data.DataColumn
            Get
                Return Me.columnPRE_LIB_CEPS
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PRE_ADMINColumn() As System.Data.DataColumn
            Get
                Return Me.columnPRE_ADMIN
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PRE_DATECRColumn() As System.Data.DataColumn
            Get
                Return Me.columnPRE_DATECR
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PRE_DATEMJColumn() As System.Data.DataColumn
            Get
                Return Me.columnPRE_DATEMJ
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As PRE_PRESENTATIONRow
            Get
                Return CType(Me.Rows(index),PRE_PRESENTATIONRow)
            End Get
        End Property
        
        Public Event PRE_PRESENTATIONRowChanging As PRE_PRESENTATIONRowChangeEventHandler
        
        Public Event PRE_PRESENTATIONRowChanged As PRE_PRESENTATIONRowChangeEventHandler
        
        Public Event PRE_PRESENTATIONRowDeleting As PRE_PRESENTATIONRowChangeEventHandler
        
        Public Event PRE_PRESENTATIONRowDeleted As PRE_PRESENTATIONRowChangeEventHandler
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddPRE_PRESENTATIONRow(ByVal row As PRE_PRESENTATIONRow)
            Me.Rows.Add(row)
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddPRE_PRESENTATIONRow( _
                    ByVal PRE_CODE_PK As String,  _
                    ByVal parentSP_SPECIALITERowByFK1_PRE_PRESENTATION As SP_SPECIALITERow,  _
                    ByVal PRE_EAN_REF As String,  _
                    ByVal PRE_NBUNITE As Short,  _
                    ByVal PRE_CDF_UP_CODE_FK As String,  _
                    ByVal PRE_CACDT_TEXTE As String,  _
                    ByVal PRE_CDF_RH_CODE_FK As String,  _
                    ByVal PRE_CDF_LI_CODE_FK As String,  _
                    ByVal PRE_ETAT_COMMER As String,  _
                    ByVal PRE_DATECOMMER As Date,  _
                    ByVal PRE_DATESUP As Date,  _
                    ByVal PRE_CDF_PU_CODE_FK As String,  _
                    ByVal PRE_CEPH_CODE_FK As String,  _
                    ByVal PRE_CATC_CODE_FK As String,  _
                    ByVal PRE_NATUCD_CDF_CODE_FK As String,  _
                    ByVal PRE_NATUCD_CDF_NUM_FK As String,  _
                    ByVal PRE_DATEJOCIP As Date,  _
                    ByVal PRE_AGRCOLL As String,  _
                    ByVal PRE_DATEJOCOLL As Date,  _
                    ByVal PRE_DATEFINCOLL As Date,  _
                    ByVal PRE_DATE_APPLIFINCOLL As Date,  _
                    ByVal PRE_PARTSTATUT As String,  _
                    ByVal PRE_TSS_TEXTE As String,  _
                    ByVal PRE_CONSAPOUV As String,  _
                    ByVal PRE_LIB_CEPS As String,  _
                    ByVal PRE_ADMIN As String,  _
                    ByVal PRE_DATECR As Date,  _
                    ByVal PRE_DATEMJ As Date) As PRE_PRESENTATIONRow
            Dim rowPRE_PRESENTATIONRow As PRE_PRESENTATIONRow = CType(Me.NewRow,PRE_PRESENTATIONRow)
            rowPRE_PRESENTATIONRow.ItemArray = New Object() {PRE_CODE_PK, parentSP_SPECIALITERowByFK1_PRE_PRESENTATION(0), PRE_EAN_REF, PRE_NBUNITE, PRE_CDF_UP_CODE_FK, PRE_CACDT_TEXTE, PRE_CDF_RH_CODE_FK, PRE_CDF_LI_CODE_FK, PRE_ETAT_COMMER, PRE_DATECOMMER, PRE_DATESUP, PRE_CDF_PU_CODE_FK, PRE_CEPH_CODE_FK, PRE_CATC_CODE_FK, PRE_NATUCD_CDF_CODE_FK, PRE_NATUCD_CDF_NUM_FK, PRE_DATEJOCIP, PRE_AGRCOLL, PRE_DATEJOCOLL, PRE_DATEFINCOLL, PRE_DATE_APPLIFINCOLL, PRE_PARTSTATUT, PRE_TSS_TEXTE, PRE_CONSAPOUV, PRE_LIB_CEPS, PRE_ADMIN, PRE_DATECR, PRE_DATEMJ}
            Me.Rows.Add(rowPRE_PRESENTATIONRow)
            Return rowPRE_PRESENTATIONRow
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByPRE_CODE_PK(ByVal PRE_CODE_PK As String) As PRE_PRESENTATIONRow
            Return CType(Me.Rows.Find(New Object() {PRE_CODE_PK}),PRE_PRESENTATIONRow)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As System.Data.DataTable
            Dim cln As PRE_PRESENTATIONDataTable = CType(MyBase.Clone,PRE_PRESENTATIONDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As System.Data.DataTable
            Return New PRE_PRESENTATIONDataTable
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnPRE_CODE_PK = MyBase.Columns("PRE_CODE_PK")
            Me.columnPRE_SP_CODE_FK = MyBase.Columns("PRE_SP_CODE_FK")
            Me.columnPRE_EAN_REF = MyBase.Columns("PRE_EAN_REF")
            Me.columnPRE_NBUNITE = MyBase.Columns("PRE_NBUNITE")
            Me.columnPRE_CDF_UP_CODE_FK = MyBase.Columns("PRE_CDF_UP_CODE_FK")
            Me.columnPRE_CACDT_TEXTE = MyBase.Columns("PRE_CACDT_TEXTE")
            Me.columnPRE_CDF_RH_CODE_FK = MyBase.Columns("PRE_CDF_RH_CODE_FK")
            Me.columnPRE_CDF_LI_CODE_FK = MyBase.Columns("PRE_CDF_LI_CODE_FK")
            Me.columnPRE_ETAT_COMMER = MyBase.Columns("PRE_ETAT_COMMER")
            Me.columnPRE_DATECOMMER = MyBase.Columns("PRE_DATECOMMER")
            Me.columnPRE_DATESUP = MyBase.Columns("PRE_DATESUP")
            Me.columnPRE_CDF_PU_CODE_FK = MyBase.Columns("PRE_CDF_PU_CODE_FK")
            Me.columnPRE_CEPH_CODE_FK = MyBase.Columns("PRE_CEPH_CODE_FK")
            Me.columnPRE_CATC_CODE_FK = MyBase.Columns("PRE_CATC_CODE_FK")
            Me.columnPRE_NATUCD_CDF_CODE_FK = MyBase.Columns("PRE_NATUCD_CDF_CODE_FK")
            Me.columnPRE_NATUCD_CDF_NUM_FK = MyBase.Columns("PRE_NATUCD_CDF_NUM_FK")
            Me.columnPRE_DATEJOCIP = MyBase.Columns("PRE_DATEJOCIP")
            Me.columnPRE_AGRCOLL = MyBase.Columns("PRE_AGRCOLL")
            Me.columnPRE_DATEJOCOLL = MyBase.Columns("PRE_DATEJOCOLL")
            Me.columnPRE_DATEFINCOLL = MyBase.Columns("PRE_DATEFINCOLL")
            Me.columnPRE_DATE_APPLIFINCOLL = MyBase.Columns("PRE_DATE_APPLIFINCOLL")
            Me.columnPRE_PARTSTATUT = MyBase.Columns("PRE_PARTSTATUT")
            Me.columnPRE_TSS_TEXTE = MyBase.Columns("PRE_TSS_TEXTE")
            Me.columnPRE_CONSAPOUV = MyBase.Columns("PRE_CONSAPOUV")
            Me.columnPRE_LIB_CEPS = MyBase.Columns("PRE_LIB_CEPS")
            Me.columnPRE_ADMIN = MyBase.Columns("PRE_ADMIN")
            Me.columnPRE_DATECR = MyBase.Columns("PRE_DATECR")
            Me.columnPRE_DATEMJ = MyBase.Columns("PRE_DATEMJ")
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnPRE_CODE_PK = New System.Data.DataColumn("PRE_CODE_PK", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRE_CODE_PK)
            Me.columnPRE_SP_CODE_FK = New System.Data.DataColumn("PRE_SP_CODE_FK", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRE_SP_CODE_FK)
            Me.columnPRE_EAN_REF = New System.Data.DataColumn("PRE_EAN_REF", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRE_EAN_REF)
            Me.columnPRE_NBUNITE = New System.Data.DataColumn("PRE_NBUNITE", GetType(Short), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRE_NBUNITE)
            Me.columnPRE_CDF_UP_CODE_FK = New System.Data.DataColumn("PRE_CDF_UP_CODE_FK", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRE_CDF_UP_CODE_FK)
            Me.columnPRE_CACDT_TEXTE = New System.Data.DataColumn("PRE_CACDT_TEXTE", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRE_CACDT_TEXTE)
            Me.columnPRE_CDF_RH_CODE_FK = New System.Data.DataColumn("PRE_CDF_RH_CODE_FK", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRE_CDF_RH_CODE_FK)
            Me.columnPRE_CDF_LI_CODE_FK = New System.Data.DataColumn("PRE_CDF_LI_CODE_FK", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRE_CDF_LI_CODE_FK)
            Me.columnPRE_ETAT_COMMER = New System.Data.DataColumn("PRE_ETAT_COMMER", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRE_ETAT_COMMER)
            Me.columnPRE_DATECOMMER = New System.Data.DataColumn("PRE_DATECOMMER", GetType(Date), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRE_DATECOMMER)
            Me.columnPRE_DATESUP = New System.Data.DataColumn("PRE_DATESUP", GetType(Date), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRE_DATESUP)
            Me.columnPRE_CDF_PU_CODE_FK = New System.Data.DataColumn("PRE_CDF_PU_CODE_FK", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRE_CDF_PU_CODE_FK)
            Me.columnPRE_CEPH_CODE_FK = New System.Data.DataColumn("PRE_CEPH_CODE_FK", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRE_CEPH_CODE_FK)
            Me.columnPRE_CATC_CODE_FK = New System.Data.DataColumn("PRE_CATC_CODE_FK", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRE_CATC_CODE_FK)
            Me.columnPRE_NATUCD_CDF_CODE_FK = New System.Data.DataColumn("PRE_NATUCD_CDF_CODE_FK", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRE_NATUCD_CDF_CODE_FK)
            Me.columnPRE_NATUCD_CDF_NUM_FK = New System.Data.DataColumn("PRE_NATUCD_CDF_NUM_FK", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRE_NATUCD_CDF_NUM_FK)
            Me.columnPRE_DATEJOCIP = New System.Data.DataColumn("PRE_DATEJOCIP", GetType(Date), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRE_DATEJOCIP)
            Me.columnPRE_AGRCOLL = New System.Data.DataColumn("PRE_AGRCOLL", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRE_AGRCOLL)
            Me.columnPRE_DATEJOCOLL = New System.Data.DataColumn("PRE_DATEJOCOLL", GetType(Date), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRE_DATEJOCOLL)
            Me.columnPRE_DATEFINCOLL = New System.Data.DataColumn("PRE_DATEFINCOLL", GetType(Date), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRE_DATEFINCOLL)
            Me.columnPRE_DATE_APPLIFINCOLL = New System.Data.DataColumn("PRE_DATE_APPLIFINCOLL", GetType(Date), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRE_DATE_APPLIFINCOLL)
            Me.columnPRE_PARTSTATUT = New System.Data.DataColumn("PRE_PARTSTATUT", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRE_PARTSTATUT)
            Me.columnPRE_TSS_TEXTE = New System.Data.DataColumn("PRE_TSS_TEXTE", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRE_TSS_TEXTE)
            Me.columnPRE_CONSAPOUV = New System.Data.DataColumn("PRE_CONSAPOUV", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRE_CONSAPOUV)
            Me.columnPRE_LIB_CEPS = New System.Data.DataColumn("PRE_LIB_CEPS", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRE_LIB_CEPS)
            Me.columnPRE_ADMIN = New System.Data.DataColumn("PRE_ADMIN", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRE_ADMIN)
            Me.columnPRE_DATECR = New System.Data.DataColumn("PRE_DATECR", GetType(Date), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRE_DATECR)
            Me.columnPRE_DATEMJ = New System.Data.DataColumn("PRE_DATEMJ", GetType(Date), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRE_DATEMJ)
            Me.Constraints.Add(New System.Data.UniqueConstraint("Constraint1", New System.Data.DataColumn() {Me.columnPRE_CODE_PK}, true))
            Me.columnPRE_CODE_PK.AllowDBNull = false
            Me.columnPRE_CODE_PK.Unique = true
            Me.columnPRE_CODE_PK.MaxLength = 10
            Me.columnPRE_SP_CODE_FK.AllowDBNull = false
            Me.columnPRE_EAN_REF.MaxLength = 13
            Me.columnPRE_CDF_UP_CODE_FK.MaxLength = 10
            Me.columnPRE_CACDT_TEXTE.MaxLength = 4000
            Me.columnPRE_CDF_RH_CODE_FK.AllowDBNull = false
            Me.columnPRE_CDF_RH_CODE_FK.MaxLength = 10
            Me.columnPRE_CDF_LI_CODE_FK.MaxLength = 10
            Me.columnPRE_ETAT_COMMER.MaxLength = 2
            Me.columnPRE_CDF_PU_CODE_FK.MaxLength = 10
            Me.columnPRE_CEPH_CODE_FK.MaxLength = 10
            Me.columnPRE_CATC_CODE_FK.MaxLength = 10
            Me.columnPRE_NATUCD_CDF_CODE_FK.MaxLength = 10
            Me.columnPRE_NATUCD_CDF_NUM_FK.MaxLength = 2
            Me.columnPRE_AGRCOLL.MaxLength = 1
            Me.columnPRE_PARTSTATUT.MaxLength = 4000
            Me.columnPRE_TSS_TEXTE.MaxLength = 4000
            Me.columnPRE_CONSAPOUV.MaxLength = 2147483647
            Me.columnPRE_LIB_CEPS.MaxLength = 750
            Me.columnPRE_ADMIN.MaxLength = 600
            Me.columnPRE_DATECR.AllowDBNull = false
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewPRE_PRESENTATIONRow() As PRE_PRESENTATIONRow
            Return CType(Me.NewRow,PRE_PRESENTATIONRow)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As System.Data.DataRowBuilder) As System.Data.DataRow
            Return New PRE_PRESENTATIONRow(builder)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(PRE_PRESENTATIONRow)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.PRE_PRESENTATIONRowChangedEvent) Is Nothing) Then
                RaiseEvent PRE_PRESENTATIONRowChanged(Me, New PRE_PRESENTATIONRowChangeEvent(CType(e.Row,PRE_PRESENTATIONRow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.PRE_PRESENTATIONRowChangingEvent) Is Nothing) Then
                RaiseEvent PRE_PRESENTATIONRowChanging(Me, New PRE_PRESENTATIONRowChangeEvent(CType(e.Row,PRE_PRESENTATIONRow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.PRE_PRESENTATIONRowDeletedEvent) Is Nothing) Then
                RaiseEvent PRE_PRESENTATIONRowDeleted(Me, New PRE_PRESENTATIONRowChangeEvent(CType(e.Row,PRE_PRESENTATIONRow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.PRE_PRESENTATIONRowDeletingEvent) Is Nothing) Then
                RaiseEvent PRE_PRESENTATIONRowDeleting(Me, New PRE_PRESENTATIONRowChangeEvent(CType(e.Row,PRE_PRESENTATIONRow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemovePRE_PRESENTATIONRow(ByVal row As PRE_PRESENTATIONRow)
            Me.Rows.Remove(row)
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As System.Xml.Schema.XmlSchemaSet) As System.Xml.Schema.XmlSchemaComplexType
            Dim type As System.Xml.Schema.XmlSchemaComplexType = New System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As System.Xml.Schema.XmlSchemaSequence = New System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsTheriaque_GrosseRequete = New dsTheriaque_GrosseRequete
            xs.Add(ds.GetSchemaSerializable)
            Dim any1 As System.Xml.Schema.XmlSchemaAny = New System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As System.Xml.Schema.XmlSchemaAny = New System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As System.Xml.Schema.XmlSchemaAttribute = New System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As System.Xml.Schema.XmlSchemaAttribute = New System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "PRE_PRESENTATIONDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Return type
        End Function
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     System.Serializable(),  _
     System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class SPDDD_DOSE_USUELLE_JOURDataTable
        Inherits System.Data.DataTable
        Implements System.Collections.IEnumerable
        
        Private columnSPDDD_SP_CODE_FK_PK As System.Data.DataColumn
        
        Private columnSPDDD_ATCDDD_CATC_CODE_FK_PK As System.Data.DataColumn
        
        Private columnSPDDD_ATCDDD_CDF_VO_CODE_FK_PK As System.Data.DataColumn
        
        Private columnSPDDD_ATCDDD_DOSAGE_PK As System.Data.DataColumn
        
        Private columnSPDDD_ATCDDD_CDF_UD_CODE_FK_PK As System.Data.DataColumn
        
        Private columnSPDDD_NUMORD As System.Data.DataColumn
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "SPDDD_DOSE_USUELLE_JOUR"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As System.Runtime.Serialization.SerializationInfo, ByVal context As System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SPDDD_SP_CODE_FK_PKColumn() As System.Data.DataColumn
            Get
                Return Me.columnSPDDD_SP_CODE_FK_PK
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SPDDD_ATCDDD_CATC_CODE_FK_PKColumn() As System.Data.DataColumn
            Get
                Return Me.columnSPDDD_ATCDDD_CATC_CODE_FK_PK
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SPDDD_ATCDDD_CDF_VO_CODE_FK_PKColumn() As System.Data.DataColumn
            Get
                Return Me.columnSPDDD_ATCDDD_CDF_VO_CODE_FK_PK
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SPDDD_ATCDDD_DOSAGE_PKColumn() As System.Data.DataColumn
            Get
                Return Me.columnSPDDD_ATCDDD_DOSAGE_PK
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SPDDD_ATCDDD_CDF_UD_CODE_FK_PKColumn() As System.Data.DataColumn
            Get
                Return Me.columnSPDDD_ATCDDD_CDF_UD_CODE_FK_PK
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SPDDD_NUMORDColumn() As System.Data.DataColumn
            Get
                Return Me.columnSPDDD_NUMORD
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As SPDDD_DOSE_USUELLE_JOURRow
            Get
                Return CType(Me.Rows(index),SPDDD_DOSE_USUELLE_JOURRow)
            End Get
        End Property
        
        Public Event SPDDD_DOSE_USUELLE_JOURRowChanging As SPDDD_DOSE_USUELLE_JOURRowChangeEventHandler
        
        Public Event SPDDD_DOSE_USUELLE_JOURRowChanged As SPDDD_DOSE_USUELLE_JOURRowChangeEventHandler
        
        Public Event SPDDD_DOSE_USUELLE_JOURRowDeleting As SPDDD_DOSE_USUELLE_JOURRowChangeEventHandler
        
        Public Event SPDDD_DOSE_USUELLE_JOURRowDeleted As SPDDD_DOSE_USUELLE_JOURRowChangeEventHandler
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddSPDDD_DOSE_USUELLE_JOURRow(ByVal row As SPDDD_DOSE_USUELLE_JOURRow)
            Me.Rows.Add(row)
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddSPDDD_DOSE_USUELLE_JOURRow(ByVal SPDDD_SP_CODE_FK_PK As Integer, ByVal SPDDD_ATCDDD_CATC_CODE_FK_PK As String, ByVal SPDDD_ATCDDD_CDF_VO_CODE_FK_PK As String, ByVal SPDDD_ATCDDD_DOSAGE_PK As Decimal, ByVal SPDDD_ATCDDD_CDF_UD_CODE_FK_PK As String, ByVal SPDDD_NUMORD As Short) As SPDDD_DOSE_USUELLE_JOURRow
            Dim rowSPDDD_DOSE_USUELLE_JOURRow As SPDDD_DOSE_USUELLE_JOURRow = CType(Me.NewRow,SPDDD_DOSE_USUELLE_JOURRow)
            rowSPDDD_DOSE_USUELLE_JOURRow.ItemArray = New Object() {SPDDD_SP_CODE_FK_PK, SPDDD_ATCDDD_CATC_CODE_FK_PK, SPDDD_ATCDDD_CDF_VO_CODE_FK_PK, SPDDD_ATCDDD_DOSAGE_PK, SPDDD_ATCDDD_CDF_UD_CODE_FK_PK, SPDDD_NUMORD}
            Me.Rows.Add(rowSPDDD_DOSE_USUELLE_JOURRow)
            Return rowSPDDD_DOSE_USUELLE_JOURRow
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindBySPDDD_SP_CODE_FK_PKSPDDD_ATCDDD_CATC_CODE_FK_PKSPDDD_ATCDDD_CDF_VO_CODE_FK_PKSPDDD_ATCDDD_DOSAGE_PKSPDDD_ATCDDD_CDF_UD_CODE_FK_PK(ByVal SPDDD_SP_CODE_FK_PK As Integer, ByVal SPDDD_ATCDDD_CATC_CODE_FK_PK As String, ByVal SPDDD_ATCDDD_CDF_VO_CODE_FK_PK As String, ByVal SPDDD_ATCDDD_DOSAGE_PK As Decimal, ByVal SPDDD_ATCDDD_CDF_UD_CODE_FK_PK As String) As SPDDD_DOSE_USUELLE_JOURRow
            Return CType(Me.Rows.Find(New Object() {SPDDD_SP_CODE_FK_PK, SPDDD_ATCDDD_CATC_CODE_FK_PK, SPDDD_ATCDDD_CDF_VO_CODE_FK_PK, SPDDD_ATCDDD_DOSAGE_PK, SPDDD_ATCDDD_CDF_UD_CODE_FK_PK}),SPDDD_DOSE_USUELLE_JOURRow)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As System.Data.DataTable
            Dim cln As SPDDD_DOSE_USUELLE_JOURDataTable = CType(MyBase.Clone,SPDDD_DOSE_USUELLE_JOURDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As System.Data.DataTable
            Return New SPDDD_DOSE_USUELLE_JOURDataTable
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnSPDDD_SP_CODE_FK_PK = MyBase.Columns("SPDDD_SP_CODE_FK_PK")
            Me.columnSPDDD_ATCDDD_CATC_CODE_FK_PK = MyBase.Columns("SPDDD_ATCDDD_CATC_CODE_FK_PK")
            Me.columnSPDDD_ATCDDD_CDF_VO_CODE_FK_PK = MyBase.Columns("SPDDD_ATCDDD_CDF_VO_CODE_FK_PK")
            Me.columnSPDDD_ATCDDD_DOSAGE_PK = MyBase.Columns("SPDDD_ATCDDD_DOSAGE_PK")
            Me.columnSPDDD_ATCDDD_CDF_UD_CODE_FK_PK = MyBase.Columns("SPDDD_ATCDDD_CDF_UD_CODE_FK_PK")
            Me.columnSPDDD_NUMORD = MyBase.Columns("SPDDD_NUMORD")
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnSPDDD_SP_CODE_FK_PK = New System.Data.DataColumn("SPDDD_SP_CODE_FK_PK", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSPDDD_SP_CODE_FK_PK)
            Me.columnSPDDD_ATCDDD_CATC_CODE_FK_PK = New System.Data.DataColumn("SPDDD_ATCDDD_CATC_CODE_FK_PK", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSPDDD_ATCDDD_CATC_CODE_FK_PK)
            Me.columnSPDDD_ATCDDD_CDF_VO_CODE_FK_PK = New System.Data.DataColumn("SPDDD_ATCDDD_CDF_VO_CODE_FK_PK", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSPDDD_ATCDDD_CDF_VO_CODE_FK_PK)
            Me.columnSPDDD_ATCDDD_DOSAGE_PK = New System.Data.DataColumn("SPDDD_ATCDDD_DOSAGE_PK", GetType(Decimal), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSPDDD_ATCDDD_DOSAGE_PK)
            Me.columnSPDDD_ATCDDD_CDF_UD_CODE_FK_PK = New System.Data.DataColumn("SPDDD_ATCDDD_CDF_UD_CODE_FK_PK", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSPDDD_ATCDDD_CDF_UD_CODE_FK_PK)
            Me.columnSPDDD_NUMORD = New System.Data.DataColumn("SPDDD_NUMORD", GetType(Short), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSPDDD_NUMORD)
            Me.Constraints.Add(New System.Data.UniqueConstraint("Constraint1", New System.Data.DataColumn() {Me.columnSPDDD_SP_CODE_FK_PK, Me.columnSPDDD_ATCDDD_CATC_CODE_FK_PK, Me.columnSPDDD_ATCDDD_CDF_VO_CODE_FK_PK, Me.columnSPDDD_ATCDDD_DOSAGE_PK, Me.columnSPDDD_ATCDDD_CDF_UD_CODE_FK_PK}, true))
            Me.columnSPDDD_SP_CODE_FK_PK.AllowDBNull = false
            Me.columnSPDDD_ATCDDD_CATC_CODE_FK_PK.AllowDBNull = false
            Me.columnSPDDD_ATCDDD_CATC_CODE_FK_PK.MaxLength = 10
            Me.columnSPDDD_ATCDDD_CDF_VO_CODE_FK_PK.AllowDBNull = false
            Me.columnSPDDD_ATCDDD_CDF_VO_CODE_FK_PK.MaxLength = 10
            Me.columnSPDDD_ATCDDD_DOSAGE_PK.AllowDBNull = false
            Me.columnSPDDD_ATCDDD_CDF_UD_CODE_FK_PK.AllowDBNull = false
            Me.columnSPDDD_ATCDDD_CDF_UD_CODE_FK_PK.MaxLength = 10
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewSPDDD_DOSE_USUELLE_JOURRow() As SPDDD_DOSE_USUELLE_JOURRow
            Return CType(Me.NewRow,SPDDD_DOSE_USUELLE_JOURRow)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As System.Data.DataRowBuilder) As System.Data.DataRow
            Return New SPDDD_DOSE_USUELLE_JOURRow(builder)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(SPDDD_DOSE_USUELLE_JOURRow)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.SPDDD_DOSE_USUELLE_JOURRowChangedEvent) Is Nothing) Then
                RaiseEvent SPDDD_DOSE_USUELLE_JOURRowChanged(Me, New SPDDD_DOSE_USUELLE_JOURRowChangeEvent(CType(e.Row,SPDDD_DOSE_USUELLE_JOURRow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.SPDDD_DOSE_USUELLE_JOURRowChangingEvent) Is Nothing) Then
                RaiseEvent SPDDD_DOSE_USUELLE_JOURRowChanging(Me, New SPDDD_DOSE_USUELLE_JOURRowChangeEvent(CType(e.Row,SPDDD_DOSE_USUELLE_JOURRow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.SPDDD_DOSE_USUELLE_JOURRowDeletedEvent) Is Nothing) Then
                RaiseEvent SPDDD_DOSE_USUELLE_JOURRowDeleted(Me, New SPDDD_DOSE_USUELLE_JOURRowChangeEvent(CType(e.Row,SPDDD_DOSE_USUELLE_JOURRow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.SPDDD_DOSE_USUELLE_JOURRowDeletingEvent) Is Nothing) Then
                RaiseEvent SPDDD_DOSE_USUELLE_JOURRowDeleting(Me, New SPDDD_DOSE_USUELLE_JOURRowChangeEvent(CType(e.Row,SPDDD_DOSE_USUELLE_JOURRow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveSPDDD_DOSE_USUELLE_JOURRow(ByVal row As SPDDD_DOSE_USUELLE_JOURRow)
            Me.Rows.Remove(row)
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As System.Xml.Schema.XmlSchemaSet) As System.Xml.Schema.XmlSchemaComplexType
            Dim type As System.Xml.Schema.XmlSchemaComplexType = New System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As System.Xml.Schema.XmlSchemaSequence = New System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsTheriaque_GrosseRequete = New dsTheriaque_GrosseRequete
            xs.Add(ds.GetSchemaSerializable)
            Dim any1 As System.Xml.Schema.XmlSchemaAny = New System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As System.Xml.Schema.XmlSchemaAny = New System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As System.Xml.Schema.XmlSchemaAttribute = New System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As System.Xml.Schema.XmlSchemaAttribute = New System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "SPDDD_DOSE_USUELLE_JOURDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Return type
        End Function
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     System.Serializable(),  _
     System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class PRETSS_PRESENTATION_TAUXDataTable
        Inherits System.Data.DataTable
        Implements System.Collections.IEnumerable
        
        Private columnPRETSS_PRE_CODE_FK_PK As System.Data.DataColumn
        
        Private columnPRETSS_CDF_TSS_CODE_FK_PK As System.Data.DataColumn
        
        Private columnPRETSS_NUMSEQ As System.Data.DataColumn
        
        Private columnPRETSS_DATE_APPLI_PK As System.Data.DataColumn
        
        Private columnPRETSS_DATE_APPLIQUEE As System.Data.DataColumn
        
        Private columnPRETSS_TEXTE As System.Data.DataColumn
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "PRETSS_PRESENTATION_TAUX"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As System.Runtime.Serialization.SerializationInfo, ByVal context As System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PRETSS_PRE_CODE_FK_PKColumn() As System.Data.DataColumn
            Get
                Return Me.columnPRETSS_PRE_CODE_FK_PK
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PRETSS_CDF_TSS_CODE_FK_PKColumn() As System.Data.DataColumn
            Get
                Return Me.columnPRETSS_CDF_TSS_CODE_FK_PK
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PRETSS_NUMSEQColumn() As System.Data.DataColumn
            Get
                Return Me.columnPRETSS_NUMSEQ
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PRETSS_DATE_APPLI_PKColumn() As System.Data.DataColumn
            Get
                Return Me.columnPRETSS_DATE_APPLI_PK
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PRETSS_DATE_APPLIQUEEColumn() As System.Data.DataColumn
            Get
                Return Me.columnPRETSS_DATE_APPLIQUEE
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PRETSS_TEXTEColumn() As System.Data.DataColumn
            Get
                Return Me.columnPRETSS_TEXTE
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As PRETSS_PRESENTATION_TAUXRow
            Get
                Return CType(Me.Rows(index),PRETSS_PRESENTATION_TAUXRow)
            End Get
        End Property
        
        Public Event PRETSS_PRESENTATION_TAUXRowChanging As PRETSS_PRESENTATION_TAUXRowChangeEventHandler
        
        Public Event PRETSS_PRESENTATION_TAUXRowChanged As PRETSS_PRESENTATION_TAUXRowChangeEventHandler
        
        Public Event PRETSS_PRESENTATION_TAUXRowDeleting As PRETSS_PRESENTATION_TAUXRowChangeEventHandler
        
        Public Event PRETSS_PRESENTATION_TAUXRowDeleted As PRETSS_PRESENTATION_TAUXRowChangeEventHandler
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddPRETSS_PRESENTATION_TAUXRow(ByVal row As PRETSS_PRESENTATION_TAUXRow)
            Me.Rows.Add(row)
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddPRETSS_PRESENTATION_TAUXRow(ByVal parentPRE_PRESENTATIONRowByFK1_PRETSS_PRESENTATION_TAUX As PRE_PRESENTATIONRow, ByVal PRETSS_CDF_TSS_CODE_FK_PK As String, ByVal PRETSS_NUMSEQ As Short, ByVal PRETSS_DATE_APPLI_PK As Date, ByVal PRETSS_DATE_APPLIQUEE As Date, ByVal PRETSS_TEXTE As String) As PRETSS_PRESENTATION_TAUXRow
            Dim rowPRETSS_PRESENTATION_TAUXRow As PRETSS_PRESENTATION_TAUXRow = CType(Me.NewRow,PRETSS_PRESENTATION_TAUXRow)
            rowPRETSS_PRESENTATION_TAUXRow.ItemArray = New Object() {parentPRE_PRESENTATIONRowByFK1_PRETSS_PRESENTATION_TAUX(0), PRETSS_CDF_TSS_CODE_FK_PK, PRETSS_NUMSEQ, PRETSS_DATE_APPLI_PK, PRETSS_DATE_APPLIQUEE, PRETSS_TEXTE}
            Me.Rows.Add(rowPRETSS_PRESENTATION_TAUXRow)
            Return rowPRETSS_PRESENTATION_TAUXRow
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByPRETSS_PRE_CODE_FK_PKPRETSS_CDF_TSS_CODE_FK_PKPRETSS_NUMSEQ(ByVal PRETSS_PRE_CODE_FK_PK As String, ByVal PRETSS_CDF_TSS_CODE_FK_PK As String, ByVal PRETSS_NUMSEQ As Short) As PRETSS_PRESENTATION_TAUXRow
            Return CType(Me.Rows.Find(New Object() {PRETSS_PRE_CODE_FK_PK, PRETSS_CDF_TSS_CODE_FK_PK, PRETSS_NUMSEQ}),PRETSS_PRESENTATION_TAUXRow)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As System.Data.DataTable
            Dim cln As PRETSS_PRESENTATION_TAUXDataTable = CType(MyBase.Clone,PRETSS_PRESENTATION_TAUXDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As System.Data.DataTable
            Return New PRETSS_PRESENTATION_TAUXDataTable
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnPRETSS_PRE_CODE_FK_PK = MyBase.Columns("PRETSS_PRE_CODE_FK_PK")
            Me.columnPRETSS_CDF_TSS_CODE_FK_PK = MyBase.Columns("PRETSS_CDF_TSS_CODE_FK_PK")
            Me.columnPRETSS_NUMSEQ = MyBase.Columns("PRETSS_NUMSEQ")
            Me.columnPRETSS_DATE_APPLI_PK = MyBase.Columns("PRETSS_DATE_APPLI_PK")
            Me.columnPRETSS_DATE_APPLIQUEE = MyBase.Columns("PRETSS_DATE_APPLIQUEE")
            Me.columnPRETSS_TEXTE = MyBase.Columns("PRETSS_TEXTE")
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnPRETSS_PRE_CODE_FK_PK = New System.Data.DataColumn("PRETSS_PRE_CODE_FK_PK", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRETSS_PRE_CODE_FK_PK)
            Me.columnPRETSS_CDF_TSS_CODE_FK_PK = New System.Data.DataColumn("PRETSS_CDF_TSS_CODE_FK_PK", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRETSS_CDF_TSS_CODE_FK_PK)
            Me.columnPRETSS_NUMSEQ = New System.Data.DataColumn("PRETSS_NUMSEQ", GetType(Short), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRETSS_NUMSEQ)
            Me.columnPRETSS_DATE_APPLI_PK = New System.Data.DataColumn("PRETSS_DATE_APPLI_PK", GetType(Date), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRETSS_DATE_APPLI_PK)
            Me.columnPRETSS_DATE_APPLIQUEE = New System.Data.DataColumn("PRETSS_DATE_APPLIQUEE", GetType(Date), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRETSS_DATE_APPLIQUEE)
            Me.columnPRETSS_TEXTE = New System.Data.DataColumn("PRETSS_TEXTE", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRETSS_TEXTE)
            Me.Constraints.Add(New System.Data.UniqueConstraint("Constraint1", New System.Data.DataColumn() {Me.columnPRETSS_PRE_CODE_FK_PK, Me.columnPRETSS_CDF_TSS_CODE_FK_PK, Me.columnPRETSS_NUMSEQ}, true))
            Me.columnPRETSS_PRE_CODE_FK_PK.AllowDBNull = false
            Me.columnPRETSS_PRE_CODE_FK_PK.MaxLength = 10
            Me.columnPRETSS_CDF_TSS_CODE_FK_PK.AllowDBNull = false
            Me.columnPRETSS_CDF_TSS_CODE_FK_PK.MaxLength = 10
            Me.columnPRETSS_NUMSEQ.AllowDBNull = false
            Me.columnPRETSS_TEXTE.MaxLength = 255
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewPRETSS_PRESENTATION_TAUXRow() As PRETSS_PRESENTATION_TAUXRow
            Return CType(Me.NewRow,PRETSS_PRESENTATION_TAUXRow)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As System.Data.DataRowBuilder) As System.Data.DataRow
            Return New PRETSS_PRESENTATION_TAUXRow(builder)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(PRETSS_PRESENTATION_TAUXRow)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.PRETSS_PRESENTATION_TAUXRowChangedEvent) Is Nothing) Then
                RaiseEvent PRETSS_PRESENTATION_TAUXRowChanged(Me, New PRETSS_PRESENTATION_TAUXRowChangeEvent(CType(e.Row,PRETSS_PRESENTATION_TAUXRow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.PRETSS_PRESENTATION_TAUXRowChangingEvent) Is Nothing) Then
                RaiseEvent PRETSS_PRESENTATION_TAUXRowChanging(Me, New PRETSS_PRESENTATION_TAUXRowChangeEvent(CType(e.Row,PRETSS_PRESENTATION_TAUXRow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.PRETSS_PRESENTATION_TAUXRowDeletedEvent) Is Nothing) Then
                RaiseEvent PRETSS_PRESENTATION_TAUXRowDeleted(Me, New PRETSS_PRESENTATION_TAUXRowChangeEvent(CType(e.Row,PRETSS_PRESENTATION_TAUXRow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.PRETSS_PRESENTATION_TAUXRowDeletingEvent) Is Nothing) Then
                RaiseEvent PRETSS_PRESENTATION_TAUXRowDeleting(Me, New PRETSS_PRESENTATION_TAUXRowChangeEvent(CType(e.Row,PRETSS_PRESENTATION_TAUXRow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemovePRETSS_PRESENTATION_TAUXRow(ByVal row As PRETSS_PRESENTATION_TAUXRow)
            Me.Rows.Remove(row)
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As System.Xml.Schema.XmlSchemaSet) As System.Xml.Schema.XmlSchemaComplexType
            Dim type As System.Xml.Schema.XmlSchemaComplexType = New System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As System.Xml.Schema.XmlSchemaSequence = New System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsTheriaque_GrosseRequete = New dsTheriaque_GrosseRequete
            xs.Add(ds.GetSchemaSerializable)
            Dim any1 As System.Xml.Schema.XmlSchemaAny = New System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As System.Xml.Schema.XmlSchemaAny = New System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As System.Xml.Schema.XmlSchemaAttribute = New System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As System.Xml.Schema.XmlSchemaAttribute = New System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "PRETSS_PRESENTATION_TAUXDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Return type
        End Function
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class SP_SPECIALITERow
        Inherits System.Data.DataRow
        
        Private tableSP_SPECIALITE As SP_SPECIALITEDataTable
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableSP_SPECIALITE = CType(Me.Table,SP_SPECIALITEDataTable)
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SP_CODE_SQ_PK() As Integer
            Get
                Return CType(Me(Me.tableSP_SPECIALITE.SP_CODE_SQ_PKColumn),Integer)
            End Get
            Set
                Me(Me.tableSP_SPECIALITE.SP_CODE_SQ_PKColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SP_GSP_CODE_FK() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSP_SPECIALITE.SP_GSP_CODE_FKColumn),Integer)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("La valeur pour la colonne 'SP_GSP_CODE_FK' dans la table 'SP_SPECIALITE' est DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_SPECIALITE.SP_GSP_CODE_FKColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SP_CDF_SLAB_CODE_FK() As String
            Get
                Return CType(Me(Me.tableSP_SPECIALITE.SP_CDF_SLAB_CODE_FKColumn),String)
            End Get
            Set
                Me(Me.tableSP_SPECIALITE.SP_CDF_SLAB_CODE_FKColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SP_CDF_LI_CODE_FK() As String
            Get
                Return CType(Me(Me.tableSP_SPECIALITE.SP_CDF_LI_CODE_FKColumn),String)
            End Get
            Set
                Me(Me.tableSP_SPECIALITE.SP_CDF_LI_CODE_FKColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SP_CATC_CODE_FK() As String
            Get
                Try 
                    Return CType(Me(Me.tableSP_SPECIALITE.SP_CATC_CODE_FKColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("La valeur pour la colonne 'SP_CATC_CODE_FK' dans la table 'SP_SPECIALITE' est DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_SPECIALITE.SP_CATC_CODE_FKColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SP_CEPH_CODE_FK() As String
            Get
                Try 
                    Return CType(Me(Me.tableSP_SPECIALITE.SP_CEPH_CODE_FKColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("La valeur pour la colonne 'SP_CEPH_CODE_FK' dans la table 'SP_SPECIALITE' est DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_SPECIALITE.SP_CEPH_CODE_FKColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SP_CGE_CODE_FK() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSP_SPECIALITE.SP_CGE_CODE_FKColumn),Integer)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("La valeur pour la colonne 'SP_CGE_CODE_FK' dans la table 'SP_SPECIALITE' est DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_SPECIALITE.SP_CGE_CODE_FKColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SP_PR_CODE_FK() As Integer
            Get
                Return CType(Me(Me.tableSP_SPECIALITE.SP_PR_CODE_FKColumn),Integer)
            End Get
            Set
                Me(Me.tableSP_SPECIALITE.SP_PR_CODE_FKColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SP_TYPE_SPE() As String
            Get
                Try 
                    Return CType(Me(Me.tableSP_SPECIALITE.SP_TYPE_SPEColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("La valeur pour la colonne 'SP_TYPE_SPE' dans la table 'SP_SPECIALITE' est DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_SPECIALITE.SP_TYPE_SPEColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SP_GREF_FK() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSP_SPECIALITE.SP_GREF_FKColumn),Integer)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("La valeur pour la colonne 'SP_GREF_FK' dans la table 'SP_SPECIALITE' est DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_SPECIALITE.SP_GREF_FKColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SP_GREF_DATECR_FK() As Date
            Get
                Try 
                    Return CType(Me(Me.tableSP_SPECIALITE.SP_GREF_DATECR_FKColumn),Date)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("La valeur pour la colonne 'SP_GREF_DATECR_FK' dans la table 'SP_SPECIALITE' est D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_SPECIALITE.SP_GREF_DATECR_FKColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SP_NOM() As String
            Get
                Return CType(Me(Me.tableSP_SPECIALITE.SP_NOMColumn),String)
            End Get
            Set
                Me(Me.tableSP_SPECIALITE.SP_NOMColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SP_NOMCOMP() As String
            Get
                Try 
                    Return CType(Me(Me.tableSP_SPECIALITE.SP_NOMCOMPColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("La valeur pour la colonne 'SP_NOMCOMP' dans la table 'SP_SPECIALITE' est DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_SPECIALITE.SP_NOMCOMPColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SP_PH() As String
            Get
                Try 
                    Return CType(Me(Me.tableSP_SPECIALITE.SP_PHColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("La valeur pour la colonne 'SP_PH' dans la table 'SP_SPECIALITE' est DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_SPECIALITE.SP_PHColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SP_CIPUCD() As String
            Get
                Try 
                    Return CType(Me(Me.tableSP_SPECIALITE.SP_CIPUCDColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("La valeur pour la colonne 'SP_CIPUCD' dans la table 'SP_SPECIALITE' est DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_SPECIALITE.SP_CIPUCDColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SP_DATECR() As Date
            Get
                Return CType(Me(Me.tableSP_SPECIALITE.SP_DATECRColumn),Date)
            End Get
            Set
                Me(Me.tableSP_SPECIALITE.SP_DATECRColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SP_DATEMJ() As Date
            Get
                Try 
                    Return CType(Me(Me.tableSP_SPECIALITE.SP_DATEMJColumn),Date)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("La valeur pour la colonne 'SP_DATEMJ' dans la table 'SP_SPECIALITE' est DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_SPECIALITE.SP_DATEMJColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SP_NL() As String
            Get
                Try 
                    Return CType(Me(Me.tableSP_SPECIALITE.SP_NLColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("La valeur pour la colonne 'SP_NL' dans la table 'SP_SPECIALITE' est DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_SPECIALITE.SP_NLColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SP_APHP() As String
            Get
                Try 
                    Return CType(Me(Me.tableSP_SPECIALITE.SP_APHPColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("La valeur pour la colonne 'SP_APHP' dans la table 'SP_SPECIALITE' est DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_SPECIALITE.SP_APHPColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SP_DATEJOGENE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableSP_SPECIALITE.SP_DATEJOGENEColumn),Date)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("La valeur pour la colonne 'SP_DATEJOGENE' dans la table 'SP_SPECIALITE' est DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_SPECIALITE.SP_DATEJOGENEColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SP_ORIGINE_GENE() As String
            Get
                Try 
                    Return CType(Me(Me.tableSP_SPECIALITE.SP_ORIGINE_GENEColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("La valeur pour la colonne 'SP_ORIGINE_GENE' dans la table 'SP_SPECIALITE' est DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_SPECIALITE.SP_ORIGINE_GENEColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SP_NOMLONG() As String
            Get
                Try 
                    Return CType(Me(Me.tableSP_SPECIALITE.SP_NOMLONGColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("La valeur pour la colonne 'SP_NOMLONG' dans la table 'SP_SPECIALITE' est DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_SPECIALITE.SP_NOMLONGColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SP_CDT_PRESCR_TEXTE() As String
            Get
                Try 
                    Return CType(Me(Me.tableSP_SPECIALITE.SP_CDT_PRESCR_TEXTEColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("La valeur pour la colonne 'SP_CDT_PRESCR_TEXTE' dans la table 'SP_SPECIALITE' est"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_SPECIALITE.SP_CDT_PRESCR_TEXTEColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SP_ATC_DDD_TEXTE() As String
            Get
                Try 
                    Return CType(Me(Me.tableSP_SPECIALITE.SP_ATC_DDD_TEXTEColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("La valeur pour la colonne 'SP_ATC_DDD_TEXTE' dans la table 'SP_SPECIALITE' est DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_SPECIALITE.SP_ATC_DDD_TEXTEColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSP_GSP_CODE_FKNull() As Boolean
            Return Me.IsNull(Me.tableSP_SPECIALITE.SP_GSP_CODE_FKColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSP_GSP_CODE_FKNull()
            Me(Me.tableSP_SPECIALITE.SP_GSP_CODE_FKColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSP_CATC_CODE_FKNull() As Boolean
            Return Me.IsNull(Me.tableSP_SPECIALITE.SP_CATC_CODE_FKColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSP_CATC_CODE_FKNull()
            Me(Me.tableSP_SPECIALITE.SP_CATC_CODE_FKColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSP_CEPH_CODE_FKNull() As Boolean
            Return Me.IsNull(Me.tableSP_SPECIALITE.SP_CEPH_CODE_FKColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSP_CEPH_CODE_FKNull()
            Me(Me.tableSP_SPECIALITE.SP_CEPH_CODE_FKColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSP_CGE_CODE_FKNull() As Boolean
            Return Me.IsNull(Me.tableSP_SPECIALITE.SP_CGE_CODE_FKColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSP_CGE_CODE_FKNull()
            Me(Me.tableSP_SPECIALITE.SP_CGE_CODE_FKColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSP_TYPE_SPENull() As Boolean
            Return Me.IsNull(Me.tableSP_SPECIALITE.SP_TYPE_SPEColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSP_TYPE_SPENull()
            Me(Me.tableSP_SPECIALITE.SP_TYPE_SPEColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSP_GREF_FKNull() As Boolean
            Return Me.IsNull(Me.tableSP_SPECIALITE.SP_GREF_FKColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSP_GREF_FKNull()
            Me(Me.tableSP_SPECIALITE.SP_GREF_FKColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSP_GREF_DATECR_FKNull() As Boolean
            Return Me.IsNull(Me.tableSP_SPECIALITE.SP_GREF_DATECR_FKColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSP_GREF_DATECR_FKNull()
            Me(Me.tableSP_SPECIALITE.SP_GREF_DATECR_FKColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSP_NOMCOMPNull() As Boolean
            Return Me.IsNull(Me.tableSP_SPECIALITE.SP_NOMCOMPColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSP_NOMCOMPNull()
            Me(Me.tableSP_SPECIALITE.SP_NOMCOMPColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSP_PHNull() As Boolean
            Return Me.IsNull(Me.tableSP_SPECIALITE.SP_PHColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSP_PHNull()
            Me(Me.tableSP_SPECIALITE.SP_PHColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSP_CIPUCDNull() As Boolean
            Return Me.IsNull(Me.tableSP_SPECIALITE.SP_CIPUCDColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSP_CIPUCDNull()
            Me(Me.tableSP_SPECIALITE.SP_CIPUCDColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSP_DATEMJNull() As Boolean
            Return Me.IsNull(Me.tableSP_SPECIALITE.SP_DATEMJColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSP_DATEMJNull()
            Me(Me.tableSP_SPECIALITE.SP_DATEMJColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSP_NLNull() As Boolean
            Return Me.IsNull(Me.tableSP_SPECIALITE.SP_NLColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSP_NLNull()
            Me(Me.tableSP_SPECIALITE.SP_NLColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSP_APHPNull() As Boolean
            Return Me.IsNull(Me.tableSP_SPECIALITE.SP_APHPColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSP_APHPNull()
            Me(Me.tableSP_SPECIALITE.SP_APHPColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSP_DATEJOGENENull() As Boolean
            Return Me.IsNull(Me.tableSP_SPECIALITE.SP_DATEJOGENEColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSP_DATEJOGENENull()
            Me(Me.tableSP_SPECIALITE.SP_DATEJOGENEColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSP_ORIGINE_GENENull() As Boolean
            Return Me.IsNull(Me.tableSP_SPECIALITE.SP_ORIGINE_GENEColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSP_ORIGINE_GENENull()
            Me(Me.tableSP_SPECIALITE.SP_ORIGINE_GENEColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSP_NOMLONGNull() As Boolean
            Return Me.IsNull(Me.tableSP_SPECIALITE.SP_NOMLONGColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSP_NOMLONGNull()
            Me(Me.tableSP_SPECIALITE.SP_NOMLONGColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSP_CDT_PRESCR_TEXTENull() As Boolean
            Return Me.IsNull(Me.tableSP_SPECIALITE.SP_CDT_PRESCR_TEXTEColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSP_CDT_PRESCR_TEXTENull()
            Me(Me.tableSP_SPECIALITE.SP_CDT_PRESCR_TEXTEColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSP_ATC_DDD_TEXTENull() As Boolean
            Return Me.IsNull(Me.tableSP_SPECIALITE.SP_ATC_DDD_TEXTEColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSP_ATC_DDD_TEXTENull()
            Me(Me.tableSP_SPECIALITE.SP_ATC_DDD_TEXTEColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function GetPRE_PRESENTATIONRows() As PRE_PRESENTATIONRow()
            Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK1_PRE_PRESENTATION")),PRE_PRESENTATIONRow())
        End Function
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class PRE_PRESENTATIONRow
        Inherits System.Data.DataRow
        
        Private tablePRE_PRESENTATION As PRE_PRESENTATIONDataTable
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablePRE_PRESENTATION = CType(Me.Table,PRE_PRESENTATIONDataTable)
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PRE_CODE_PK() As String
            Get
                Return CType(Me(Me.tablePRE_PRESENTATION.PRE_CODE_PKColumn),String)
            End Get
            Set
                Me(Me.tablePRE_PRESENTATION.PRE_CODE_PKColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PRE_SP_CODE_FK() As Integer
            Get
                Return CType(Me(Me.tablePRE_PRESENTATION.PRE_SP_CODE_FKColumn),Integer)
            End Get
            Set
                Me(Me.tablePRE_PRESENTATION.PRE_SP_CODE_FKColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PRE_EAN_REF() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRE_PRESENTATION.PRE_EAN_REFColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("La valeur pour la colonne 'PRE_EAN_REF' dans la table 'PRE_PRESENTATION' est DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRE_PRESENTATION.PRE_EAN_REFColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PRE_NBUNITE() As Short
            Get
                Try 
                    Return CType(Me(Me.tablePRE_PRESENTATION.PRE_NBUNITEColumn),Short)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("La valeur pour la colonne 'PRE_NBUNITE' dans la table 'PRE_PRESENTATION' est DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRE_PRESENTATION.PRE_NBUNITEColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PRE_CDF_UP_CODE_FK() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRE_PRESENTATION.PRE_CDF_UP_CODE_FKColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("La valeur pour la colonne 'PRE_CDF_UP_CODE_FK' dans la table 'PRE_PRESENTATION' e"& _ 
                            "st DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRE_PRESENTATION.PRE_CDF_UP_CODE_FKColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PRE_CACDT_TEXTE() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRE_PRESENTATION.PRE_CACDT_TEXTEColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("La valeur pour la colonne 'PRE_CACDT_TEXTE' dans la table 'PRE_PRESENTATION' est "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRE_PRESENTATION.PRE_CACDT_TEXTEColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PRE_CDF_RH_CODE_FK() As String
            Get
                Return CType(Me(Me.tablePRE_PRESENTATION.PRE_CDF_RH_CODE_FKColumn),String)
            End Get
            Set
                Me(Me.tablePRE_PRESENTATION.PRE_CDF_RH_CODE_FKColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PRE_CDF_LI_CODE_FK() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRE_PRESENTATION.PRE_CDF_LI_CODE_FKColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("La valeur pour la colonne 'PRE_CDF_LI_CODE_FK' dans la table 'PRE_PRESENTATION' e"& _ 
                            "st DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRE_PRESENTATION.PRE_CDF_LI_CODE_FKColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PRE_ETAT_COMMER() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRE_PRESENTATION.PRE_ETAT_COMMERColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("La valeur pour la colonne 'PRE_ETAT_COMMER' dans la table 'PRE_PRESENTATION' est "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRE_PRESENTATION.PRE_ETAT_COMMERColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PRE_DATECOMMER() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePRE_PRESENTATION.PRE_DATECOMMERColumn),Date)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("La valeur pour la colonne 'PRE_DATECOMMER' dans la table 'PRE_PRESENTATION' est D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRE_PRESENTATION.PRE_DATECOMMERColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PRE_DATESUP() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePRE_PRESENTATION.PRE_DATESUPColumn),Date)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("La valeur pour la colonne 'PRE_DATESUP' dans la table 'PRE_PRESENTATION' est DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRE_PRESENTATION.PRE_DATESUPColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PRE_CDF_PU_CODE_FK() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRE_PRESENTATION.PRE_CDF_PU_CODE_FKColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("La valeur pour la colonne 'PRE_CDF_PU_CODE_FK' dans la table 'PRE_PRESENTATION' e"& _ 
                            "st DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRE_PRESENTATION.PRE_CDF_PU_CODE_FKColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PRE_CEPH_CODE_FK() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRE_PRESENTATION.PRE_CEPH_CODE_FKColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("La valeur pour la colonne 'PRE_CEPH_CODE_FK' dans la table 'PRE_PRESENTATION' est"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRE_PRESENTATION.PRE_CEPH_CODE_FKColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PRE_CATC_CODE_FK() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRE_PRESENTATION.PRE_CATC_CODE_FKColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("La valeur pour la colonne 'PRE_CATC_CODE_FK' dans la table 'PRE_PRESENTATION' est"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRE_PRESENTATION.PRE_CATC_CODE_FKColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PRE_NATUCD_CDF_CODE_FK() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRE_PRESENTATION.PRE_NATUCD_CDF_CODE_FKColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("La valeur pour la colonne 'PRE_NATUCD_CDF_CODE_FK' dans la table 'PRE_PRESENTATIO"& _ 
                            "N' est DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRE_PRESENTATION.PRE_NATUCD_CDF_CODE_FKColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PRE_NATUCD_CDF_NUM_FK() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRE_PRESENTATION.PRE_NATUCD_CDF_NUM_FKColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("La valeur pour la colonne 'PRE_NATUCD_CDF_NUM_FK' dans la table 'PRE_PRESENTATION"& _ 
                            "' est DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRE_PRESENTATION.PRE_NATUCD_CDF_NUM_FKColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PRE_DATEJOCIP() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePRE_PRESENTATION.PRE_DATEJOCIPColumn),Date)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("La valeur pour la colonne 'PRE_DATEJOCIP' dans la table 'PRE_PRESENTATION' est DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRE_PRESENTATION.PRE_DATEJOCIPColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PRE_AGRCOLL() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRE_PRESENTATION.PRE_AGRCOLLColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("La valeur pour la colonne 'PRE_AGRCOLL' dans la table 'PRE_PRESENTATION' est DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRE_PRESENTATION.PRE_AGRCOLLColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PRE_DATEJOCOLL() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePRE_PRESENTATION.PRE_DATEJOCOLLColumn),Date)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("La valeur pour la colonne 'PRE_DATEJOCOLL' dans la table 'PRE_PRESENTATION' est D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRE_PRESENTATION.PRE_DATEJOCOLLColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PRE_DATEFINCOLL() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePRE_PRESENTATION.PRE_DATEFINCOLLColumn),Date)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("La valeur pour la colonne 'PRE_DATEFINCOLL' dans la table 'PRE_PRESENTATION' est "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRE_PRESENTATION.PRE_DATEFINCOLLColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PRE_DATE_APPLIFINCOLL() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePRE_PRESENTATION.PRE_DATE_APPLIFINCOLLColumn),Date)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("La valeur pour la colonne 'PRE_DATE_APPLIFINCOLL' dans la table 'PRE_PRESENTATION"& _ 
                            "' est DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRE_PRESENTATION.PRE_DATE_APPLIFINCOLLColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PRE_PARTSTATUT() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRE_PRESENTATION.PRE_PARTSTATUTColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("La valeur pour la colonne 'PRE_PARTSTATUT' dans la table 'PRE_PRESENTATION' est D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRE_PRESENTATION.PRE_PARTSTATUTColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PRE_TSS_TEXTE() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRE_PRESENTATION.PRE_TSS_TEXTEColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("La valeur pour la colonne 'PRE_TSS_TEXTE' dans la table 'PRE_PRESENTATION' est DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRE_PRESENTATION.PRE_TSS_TEXTEColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PRE_CONSAPOUV() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRE_PRESENTATION.PRE_CONSAPOUVColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("La valeur pour la colonne 'PRE_CONSAPOUV' dans la table 'PRE_PRESENTATION' est DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRE_PRESENTATION.PRE_CONSAPOUVColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PRE_LIB_CEPS() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRE_PRESENTATION.PRE_LIB_CEPSColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("La valeur pour la colonne 'PRE_LIB_CEPS' dans la table 'PRE_PRESENTATION' est DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRE_PRESENTATION.PRE_LIB_CEPSColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PRE_ADMIN() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRE_PRESENTATION.PRE_ADMINColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("La valeur pour la colonne 'PRE_ADMIN' dans la table 'PRE_PRESENTATION' est DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tablePRE_PRESENTATION.PRE_ADMINColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PRE_DATECR() As Date
            Get
                Return CType(Me(Me.tablePRE_PRESENTATION.PRE_DATECRColumn),Date)
            End Get
            Set
                Me(Me.tablePRE_PRESENTATION.PRE_DATECRColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PRE_DATEMJ() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePRE_PRESENTATION.PRE_DATEMJColumn),Date)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("La valeur pour la colonne 'PRE_DATEMJ' dans la table 'PRE_PRESENTATION' est DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRE_PRESENTATION.PRE_DATEMJColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SP_SPECIALITERow() As SP_SPECIALITERow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK1_PRE_PRESENTATION")),SP_SPECIALITERow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK1_PRE_PRESENTATION"))
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPRE_EAN_REFNull() As Boolean
            Return Me.IsNull(Me.tablePRE_PRESENTATION.PRE_EAN_REFColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPRE_EAN_REFNull()
            Me(Me.tablePRE_PRESENTATION.PRE_EAN_REFColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPRE_NBUNITENull() As Boolean
            Return Me.IsNull(Me.tablePRE_PRESENTATION.PRE_NBUNITEColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPRE_NBUNITENull()
            Me(Me.tablePRE_PRESENTATION.PRE_NBUNITEColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPRE_CDF_UP_CODE_FKNull() As Boolean
            Return Me.IsNull(Me.tablePRE_PRESENTATION.PRE_CDF_UP_CODE_FKColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPRE_CDF_UP_CODE_FKNull()
            Me(Me.tablePRE_PRESENTATION.PRE_CDF_UP_CODE_FKColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPRE_CACDT_TEXTENull() As Boolean
            Return Me.IsNull(Me.tablePRE_PRESENTATION.PRE_CACDT_TEXTEColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPRE_CACDT_TEXTENull()
            Me(Me.tablePRE_PRESENTATION.PRE_CACDT_TEXTEColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPRE_CDF_LI_CODE_FKNull() As Boolean
            Return Me.IsNull(Me.tablePRE_PRESENTATION.PRE_CDF_LI_CODE_FKColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPRE_CDF_LI_CODE_FKNull()
            Me(Me.tablePRE_PRESENTATION.PRE_CDF_LI_CODE_FKColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPRE_ETAT_COMMERNull() As Boolean
            Return Me.IsNull(Me.tablePRE_PRESENTATION.PRE_ETAT_COMMERColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPRE_ETAT_COMMERNull()
            Me(Me.tablePRE_PRESENTATION.PRE_ETAT_COMMERColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPRE_DATECOMMERNull() As Boolean
            Return Me.IsNull(Me.tablePRE_PRESENTATION.PRE_DATECOMMERColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPRE_DATECOMMERNull()
            Me(Me.tablePRE_PRESENTATION.PRE_DATECOMMERColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPRE_DATESUPNull() As Boolean
            Return Me.IsNull(Me.tablePRE_PRESENTATION.PRE_DATESUPColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPRE_DATESUPNull()
            Me(Me.tablePRE_PRESENTATION.PRE_DATESUPColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPRE_CDF_PU_CODE_FKNull() As Boolean
            Return Me.IsNull(Me.tablePRE_PRESENTATION.PRE_CDF_PU_CODE_FKColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPRE_CDF_PU_CODE_FKNull()
            Me(Me.tablePRE_PRESENTATION.PRE_CDF_PU_CODE_FKColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPRE_CEPH_CODE_FKNull() As Boolean
            Return Me.IsNull(Me.tablePRE_PRESENTATION.PRE_CEPH_CODE_FKColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPRE_CEPH_CODE_FKNull()
            Me(Me.tablePRE_PRESENTATION.PRE_CEPH_CODE_FKColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPRE_CATC_CODE_FKNull() As Boolean
            Return Me.IsNull(Me.tablePRE_PRESENTATION.PRE_CATC_CODE_FKColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPRE_CATC_CODE_FKNull()
            Me(Me.tablePRE_PRESENTATION.PRE_CATC_CODE_FKColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPRE_NATUCD_CDF_CODE_FKNull() As Boolean
            Return Me.IsNull(Me.tablePRE_PRESENTATION.PRE_NATUCD_CDF_CODE_FKColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPRE_NATUCD_CDF_CODE_FKNull()
            Me(Me.tablePRE_PRESENTATION.PRE_NATUCD_CDF_CODE_FKColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPRE_NATUCD_CDF_NUM_FKNull() As Boolean
            Return Me.IsNull(Me.tablePRE_PRESENTATION.PRE_NATUCD_CDF_NUM_FKColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPRE_NATUCD_CDF_NUM_FKNull()
            Me(Me.tablePRE_PRESENTATION.PRE_NATUCD_CDF_NUM_FKColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPRE_DATEJOCIPNull() As Boolean
            Return Me.IsNull(Me.tablePRE_PRESENTATION.PRE_DATEJOCIPColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPRE_DATEJOCIPNull()
            Me(Me.tablePRE_PRESENTATION.PRE_DATEJOCIPColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPRE_AGRCOLLNull() As Boolean
            Return Me.IsNull(Me.tablePRE_PRESENTATION.PRE_AGRCOLLColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPRE_AGRCOLLNull()
            Me(Me.tablePRE_PRESENTATION.PRE_AGRCOLLColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPRE_DATEJOCOLLNull() As Boolean
            Return Me.IsNull(Me.tablePRE_PRESENTATION.PRE_DATEJOCOLLColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPRE_DATEJOCOLLNull()
            Me(Me.tablePRE_PRESENTATION.PRE_DATEJOCOLLColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPRE_DATEFINCOLLNull() As Boolean
            Return Me.IsNull(Me.tablePRE_PRESENTATION.PRE_DATEFINCOLLColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPRE_DATEFINCOLLNull()
            Me(Me.tablePRE_PRESENTATION.PRE_DATEFINCOLLColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPRE_DATE_APPLIFINCOLLNull() As Boolean
            Return Me.IsNull(Me.tablePRE_PRESENTATION.PRE_DATE_APPLIFINCOLLColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPRE_DATE_APPLIFINCOLLNull()
            Me(Me.tablePRE_PRESENTATION.PRE_DATE_APPLIFINCOLLColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPRE_PARTSTATUTNull() As Boolean
            Return Me.IsNull(Me.tablePRE_PRESENTATION.PRE_PARTSTATUTColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPRE_PARTSTATUTNull()
            Me(Me.tablePRE_PRESENTATION.PRE_PARTSTATUTColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPRE_TSS_TEXTENull() As Boolean
            Return Me.IsNull(Me.tablePRE_PRESENTATION.PRE_TSS_TEXTEColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPRE_TSS_TEXTENull()
            Me(Me.tablePRE_PRESENTATION.PRE_TSS_TEXTEColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPRE_CONSAPOUVNull() As Boolean
            Return Me.IsNull(Me.tablePRE_PRESENTATION.PRE_CONSAPOUVColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPRE_CONSAPOUVNull()
            Me(Me.tablePRE_PRESENTATION.PRE_CONSAPOUVColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPRE_LIB_CEPSNull() As Boolean
            Return Me.IsNull(Me.tablePRE_PRESENTATION.PRE_LIB_CEPSColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPRE_LIB_CEPSNull()
            Me(Me.tablePRE_PRESENTATION.PRE_LIB_CEPSColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPRE_ADMINNull() As Boolean
            Return Me.IsNull(Me.tablePRE_PRESENTATION.PRE_ADMINColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPRE_ADMINNull()
            Me(Me.tablePRE_PRESENTATION.PRE_ADMINColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPRE_DATEMJNull() As Boolean
            Return Me.IsNull(Me.tablePRE_PRESENTATION.PRE_DATEMJColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPRE_DATEMJNull()
            Me(Me.tablePRE_PRESENTATION.PRE_DATEMJColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function GetPRETSS_PRESENTATION_TAUXRows() As PRETSS_PRESENTATION_TAUXRow()
            Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK1_PRETSS_PRESENTATION_TAUX")),PRETSS_PRESENTATION_TAUXRow())
        End Function
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class SPDDD_DOSE_USUELLE_JOURRow
        Inherits System.Data.DataRow
        
        Private tableSPDDD_DOSE_USUELLE_JOUR As SPDDD_DOSE_USUELLE_JOURDataTable
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableSPDDD_DOSE_USUELLE_JOUR = CType(Me.Table,SPDDD_DOSE_USUELLE_JOURDataTable)
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SPDDD_SP_CODE_FK_PK() As Integer
            Get
                Return CType(Me(Me.tableSPDDD_DOSE_USUELLE_JOUR.SPDDD_SP_CODE_FK_PKColumn),Integer)
            End Get
            Set
                Me(Me.tableSPDDD_DOSE_USUELLE_JOUR.SPDDD_SP_CODE_FK_PKColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SPDDD_ATCDDD_CATC_CODE_FK_PK() As String
            Get
                Return CType(Me(Me.tableSPDDD_DOSE_USUELLE_JOUR.SPDDD_ATCDDD_CATC_CODE_FK_PKColumn),String)
            End Get
            Set
                Me(Me.tableSPDDD_DOSE_USUELLE_JOUR.SPDDD_ATCDDD_CATC_CODE_FK_PKColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SPDDD_ATCDDD_CDF_VO_CODE_FK_PK() As String
            Get
                Return CType(Me(Me.tableSPDDD_DOSE_USUELLE_JOUR.SPDDD_ATCDDD_CDF_VO_CODE_FK_PKColumn),String)
            End Get
            Set
                Me(Me.tableSPDDD_DOSE_USUELLE_JOUR.SPDDD_ATCDDD_CDF_VO_CODE_FK_PKColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SPDDD_ATCDDD_DOSAGE_PK() As Decimal
            Get
                Return CType(Me(Me.tableSPDDD_DOSE_USUELLE_JOUR.SPDDD_ATCDDD_DOSAGE_PKColumn),Decimal)
            End Get
            Set
                Me(Me.tableSPDDD_DOSE_USUELLE_JOUR.SPDDD_ATCDDD_DOSAGE_PKColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SPDDD_ATCDDD_CDF_UD_CODE_FK_PK() As String
            Get
                Return CType(Me(Me.tableSPDDD_DOSE_USUELLE_JOUR.SPDDD_ATCDDD_CDF_UD_CODE_FK_PKColumn),String)
            End Get
            Set
                Me(Me.tableSPDDD_DOSE_USUELLE_JOUR.SPDDD_ATCDDD_CDF_UD_CODE_FK_PKColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SPDDD_NUMORD() As Short
            Get
                Try 
                    Return CType(Me(Me.tableSPDDD_DOSE_USUELLE_JOUR.SPDDD_NUMORDColumn),Short)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("La valeur pour la colonne 'SPDDD_NUMORD' dans la table 'SPDDD_DOSE_USUELLE_JOUR' "& _ 
                            "est DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSPDDD_DOSE_USUELLE_JOUR.SPDDD_NUMORDColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSPDDD_NUMORDNull() As Boolean
            Return Me.IsNull(Me.tableSPDDD_DOSE_USUELLE_JOUR.SPDDD_NUMORDColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSPDDD_NUMORDNull()
            Me(Me.tableSPDDD_DOSE_USUELLE_JOUR.SPDDD_NUMORDColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class PRETSS_PRESENTATION_TAUXRow
        Inherits System.Data.DataRow
        
        Private tablePRETSS_PRESENTATION_TAUX As PRETSS_PRESENTATION_TAUXDataTable
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablePRETSS_PRESENTATION_TAUX = CType(Me.Table,PRETSS_PRESENTATION_TAUXDataTable)
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PRETSS_PRE_CODE_FK_PK() As String
            Get
                Return CType(Me(Me.tablePRETSS_PRESENTATION_TAUX.PRETSS_PRE_CODE_FK_PKColumn),String)
            End Get
            Set
                Me(Me.tablePRETSS_PRESENTATION_TAUX.PRETSS_PRE_CODE_FK_PKColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PRETSS_CDF_TSS_CODE_FK_PK() As String
            Get
                Return CType(Me(Me.tablePRETSS_PRESENTATION_TAUX.PRETSS_CDF_TSS_CODE_FK_PKColumn),String)
            End Get
            Set
                Me(Me.tablePRETSS_PRESENTATION_TAUX.PRETSS_CDF_TSS_CODE_FK_PKColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PRETSS_NUMSEQ() As Short
            Get
                Return CType(Me(Me.tablePRETSS_PRESENTATION_TAUX.PRETSS_NUMSEQColumn),Short)
            End Get
            Set
                Me(Me.tablePRETSS_PRESENTATION_TAUX.PRETSS_NUMSEQColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PRETSS_DATE_APPLI_PK() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePRETSS_PRESENTATION_TAUX.PRETSS_DATE_APPLI_PKColumn),Date)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("La valeur pour la colonne 'PRETSS_DATE_APPLI_PK' dans la table 'PRETSS_PRESENTATI"& _ 
                            "ON_TAUX' est DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRETSS_PRESENTATION_TAUX.PRETSS_DATE_APPLI_PKColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PRETSS_DATE_APPLIQUEE() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePRETSS_PRESENTATION_TAUX.PRETSS_DATE_APPLIQUEEColumn),Date)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("La valeur pour la colonne 'PRETSS_DATE_APPLIQUEE' dans la table 'PRETSS_PRESENTAT"& _ 
                            "ION_TAUX' est DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRETSS_PRESENTATION_TAUX.PRETSS_DATE_APPLIQUEEColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PRETSS_TEXTE() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRETSS_PRESENTATION_TAUX.PRETSS_TEXTEColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("La valeur pour la colonne 'PRETSS_TEXTE' dans la table 'PRETSS_PRESENTATION_TAUX'"& _ 
                            " est DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRETSS_PRESENTATION_TAUX.PRETSS_TEXTEColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PRE_PRESENTATIONRow() As PRE_PRESENTATIONRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK1_PRETSS_PRESENTATION_TAUX")),PRE_PRESENTATIONRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK1_PRETSS_PRESENTATION_TAUX"))
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPRETSS_DATE_APPLI_PKNull() As Boolean
            Return Me.IsNull(Me.tablePRETSS_PRESENTATION_TAUX.PRETSS_DATE_APPLI_PKColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPRETSS_DATE_APPLI_PKNull()
            Me(Me.tablePRETSS_PRESENTATION_TAUX.PRETSS_DATE_APPLI_PKColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPRETSS_DATE_APPLIQUEENull() As Boolean
            Return Me.IsNull(Me.tablePRETSS_PRESENTATION_TAUX.PRETSS_DATE_APPLIQUEEColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPRETSS_DATE_APPLIQUEENull()
            Me(Me.tablePRETSS_PRESENTATION_TAUX.PRETSS_DATE_APPLIQUEEColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPRETSS_TEXTENull() As Boolean
            Return Me.IsNull(Me.tablePRETSS_PRESENTATION_TAUX.PRETSS_TEXTEColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPRETSS_TEXTENull()
            Me(Me.tablePRETSS_PRESENTATION_TAUX.PRETSS_TEXTEColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class SP_SPECIALITERowChangeEvent
        Inherits System.EventArgs
        
        Private eventRow As SP_SPECIALITERow
        
        Private eventAction As System.Data.DataRowAction
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As SP_SPECIALITERow, ByVal action As System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As SP_SPECIALITERow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class PRE_PRESENTATIONRowChangeEvent
        Inherits System.EventArgs
        
        Private eventRow As PRE_PRESENTATIONRow
        
        Private eventAction As System.Data.DataRowAction
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As PRE_PRESENTATIONRow, ByVal action As System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As PRE_PRESENTATIONRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class SPDDD_DOSE_USUELLE_JOURRowChangeEvent
        Inherits System.EventArgs
        
        Private eventRow As SPDDD_DOSE_USUELLE_JOURRow
        
        Private eventAction As System.Data.DataRowAction
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As SPDDD_DOSE_USUELLE_JOURRow, ByVal action As System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As SPDDD_DOSE_USUELLE_JOURRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class PRETSS_PRESENTATION_TAUXRowChangeEvent
        Inherits System.EventArgs
        
        Private eventRow As PRETSS_PRESENTATION_TAUXRow
        
        Private eventAction As System.Data.DataRowAction
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As PRETSS_PRESENTATION_TAUXRow, ByVal action As System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As PRETSS_PRESENTATION_TAUXRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace dsTheriaque_GrosseRequeteTableAdapters
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.ComponentModel.ToolboxItem(true),  _
     System.ComponentModel.DataObjectAttribute(true),  _
     System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class SP_SPECIALITETableAdapter
        Inherits System.ComponentModel.Component
        
        Private WithEvents _adapter As System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private ReadOnly Property Adapter() As System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As System.Data.Common.DataTableMapping = New System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "SP_SPECIALITE"
            tableMapping.ColumnMappings.Add("SP_CODE_SQ_PK", "SP_CODE_SQ_PK")
            tableMapping.ColumnMappings.Add("SP_GSP_CODE_FK", "SP_GSP_CODE_FK")
            tableMapping.ColumnMappings.Add("SP_CDF_SLAB_CODE_FK", "SP_CDF_SLAB_CODE_FK")
            tableMapping.ColumnMappings.Add("SP_CDF_LI_CODE_FK", "SP_CDF_LI_CODE_FK")
            tableMapping.ColumnMappings.Add("SP_CATC_CODE_FK", "SP_CATC_CODE_FK")
            tableMapping.ColumnMappings.Add("SP_CEPH_CODE_FK", "SP_CEPH_CODE_FK")
            tableMapping.ColumnMappings.Add("SP_CGE_CODE_FK", "SP_CGE_CODE_FK")
            tableMapping.ColumnMappings.Add("SP_PR_CODE_FK", "SP_PR_CODE_FK")
            tableMapping.ColumnMappings.Add("SP_TYPE_SPE", "SP_TYPE_SPE")
            tableMapping.ColumnMappings.Add("SP_GREF_FK", "SP_GREF_FK")
            tableMapping.ColumnMappings.Add("SP_GREF_DATECR_FK", "SP_GREF_DATECR_FK")
            tableMapping.ColumnMappings.Add("SP_NOM", "SP_NOM")
            tableMapping.ColumnMappings.Add("SP_NOMCOMP", "SP_NOMCOMP")
            tableMapping.ColumnMappings.Add("SP_PH", "SP_PH")
            tableMapping.ColumnMappings.Add("SP_CIPUCD", "SP_CIPUCD")
            tableMapping.ColumnMappings.Add("SP_DATECR", "SP_DATECR")
            tableMapping.ColumnMappings.Add("SP_DATEMJ", "SP_DATEMJ")
            tableMapping.ColumnMappings.Add("SP_NL", "SP_NL")
            tableMapping.ColumnMappings.Add("SP_APHP", "SP_APHP")
            tableMapping.ColumnMappings.Add("SP_DATEJOGENE", "SP_DATEJOGENE")
            tableMapping.ColumnMappings.Add("SP_ORIGINE_GENE", "SP_ORIGINE_GENE")
            tableMapping.ColumnMappings.Add("SP_NOMLONG", "SP_NOMLONG")
            tableMapping.ColumnMappings.Add("SP_CDT_PRESCR_TEXTE", "SP_CDT_PRESCR_TEXTE")
            tableMapping.ColumnMappings.Add("SP_ATC_DDD_TEXTE", "SP_ATC_DDD_TEXTE")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New System.Data.SqlClient.SqlCommand
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [theriaque].[SP_SPECIALITE] WHERE (([SP_CODE_SQ_PK] = @Original_SP_CO"& _ 
                "DE_SQ_PK) AND ((@IsNull_SP_GSP_CODE_FK = 1 AND [SP_GSP_CODE_FK] IS NULL) OR ([SP"& _ 
                "_GSP_CODE_FK] = @Original_SP_GSP_CODE_FK)) AND ([SP_CDF_SLAB_CODE_FK] = @Origina"& _ 
                "l_SP_CDF_SLAB_CODE_FK) AND ([SP_CDF_LI_CODE_FK] = @Original_SP_CDF_LI_CODE_FK) A"& _ 
                "ND ((@IsNull_SP_CATC_CODE_FK = 1 AND [SP_CATC_CODE_FK] IS NULL) OR ([SP_CATC_COD"& _ 
                "E_FK] = @Original_SP_CATC_CODE_FK)) AND ((@IsNull_SP_CEPH_CODE_FK = 1 AND [SP_CE"& _ 
                "PH_CODE_FK] IS NULL) OR ([SP_CEPH_CODE_FK] = @Original_SP_CEPH_CODE_FK)) AND ((@"& _ 
                "IsNull_SP_CGE_CODE_FK = 1 AND [SP_CGE_CODE_FK] IS NULL) OR ([SP_CGE_CODE_FK] = @"& _ 
                "Original_SP_CGE_CODE_FK)) AND ([SP_PR_CODE_FK] = @Original_SP_PR_CODE_FK) AND (("& _ 
                "@IsNull_SP_TYPE_SPE = 1 AND [SP_TYPE_SPE] IS NULL) OR ([SP_TYPE_SPE] = @Original"& _ 
                "_SP_TYPE_SPE)) AND ((@IsNull_SP_GREF_FK = 1 AND [SP_GREF_FK] IS NULL) OR ([SP_GR"& _ 
                "EF_FK] = @Original_SP_GREF_FK)) AND ((@IsNull_SP_GREF_DATECR_FK = 1 AND [SP_GREF"& _ 
                "_DATECR_FK] IS NULL) OR ([SP_GREF_DATECR_FK] = @Original_SP_GREF_DATECR_FK)) AND"& _ 
                " ([SP_NOM] = @Original_SP_NOM) AND ((@IsNull_SP_NOMCOMP = 1 AND [SP_NOMCOMP] IS "& _ 
                "NULL) OR ([SP_NOMCOMP] = @Original_SP_NOMCOMP)) AND ((@IsNull_SP_PH = 1 AND [SP_"& _ 
                "PH] IS NULL) OR ([SP_PH] = @Original_SP_PH)) AND ((@IsNull_SP_CIPUCD = 1 AND [SP"& _ 
                "_CIPUCD] IS NULL) OR ([SP_CIPUCD] = @Original_SP_CIPUCD)) AND ([SP_DATECR] = @Or"& _ 
                "iginal_SP_DATECR) AND ((@IsNull_SP_DATEMJ = 1 AND [SP_DATEMJ] IS NULL) OR ([SP_D"& _ 
                "ATEMJ] = @Original_SP_DATEMJ)) AND ((@IsNull_SP_NL = 1 AND [SP_NL] IS NULL) OR ("& _ 
                "[SP_NL] = @Original_SP_NL)) AND ((@IsNull_SP_APHP = 1 AND [SP_APHP] IS NULL) OR "& _ 
                "([SP_APHP] = @Original_SP_APHP)) AND ((@IsNull_SP_DATEJOGENE = 1 AND [SP_DATEJOG"& _ 
                "ENE] IS NULL) OR ([SP_DATEJOGENE] = @Original_SP_DATEJOGENE)) AND ((@IsNull_SP_O"& _ 
                "RIGINE_GENE = 1 AND [SP_ORIGINE_GENE] IS NULL) OR ([SP_ORIGINE_GENE] = @Original"& _ 
                "_SP_ORIGINE_GENE)) AND ((@IsNull_SP_NOMLONG = 1 AND [SP_NOMLONG] IS NULL) OR ([S"& _ 
                "P_NOMLONG] = @Original_SP_NOMLONG)) AND ((@IsNull_SP_CDT_PRESCR_TEXTE = 1 AND [S"& _ 
                "P_CDT_PRESCR_TEXTE] IS NULL) OR ([SP_CDT_PRESCR_TEXTE] = @Original_SP_CDT_PRESCR"& _ 
                "_TEXTE)) AND ((@IsNull_SP_ATC_DDD_TEXTE = 1 AND [SP_ATC_DDD_TEXTE] IS NULL) OR ("& _ 
                "[SP_ATC_DDD_TEXTE] = @Original_SP_ATC_DDD_TEXTE)))"
            Me._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_SP_CODE_SQ_PK", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_CODE_SQ_PK", System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IsNull_SP_GSP_CODE_FK", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_GSP_CODE_FK", System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_SP_GSP_CODE_FK", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_GSP_CODE_FK", System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_SP_CDF_SLAB_CODE_FK", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_CDF_SLAB_CODE_FK", System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_SP_CDF_LI_CODE_FK", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_CDF_LI_CODE_FK", System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IsNull_SP_CATC_CODE_FK", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_CATC_CODE_FK", System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_SP_CATC_CODE_FK", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_CATC_CODE_FK", System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IsNull_SP_CEPH_CODE_FK", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_CEPH_CODE_FK", System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_SP_CEPH_CODE_FK", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_CEPH_CODE_FK", System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IsNull_SP_CGE_CODE_FK", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_CGE_CODE_FK", System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_SP_CGE_CODE_FK", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_CGE_CODE_FK", System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_SP_PR_CODE_FK", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_PR_CODE_FK", System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IsNull_SP_TYPE_SPE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_TYPE_SPE", System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_SP_TYPE_SPE", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_TYPE_SPE", System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IsNull_SP_GREF_FK", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_GREF_FK", System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_SP_GREF_FK", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_GREF_FK", System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IsNull_SP_GREF_DATECR_FK", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_GREF_DATECR_FK", System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_SP_GREF_DATECR_FK", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_GREF_DATECR_FK", System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_SP_NOM", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_NOM", System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IsNull_SP_NOMCOMP", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_NOMCOMP", System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_SP_NOMCOMP", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_NOMCOMP", System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IsNull_SP_PH", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_PH", System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_SP_PH", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_PH", System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IsNull_SP_CIPUCD", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_CIPUCD", System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_SP_CIPUCD", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_CIPUCD", System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_SP_DATECR", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_DATECR", System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IsNull_SP_DATEMJ", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_DATEMJ", System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_SP_DATEMJ", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_DATEMJ", System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IsNull_SP_NL", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_NL", System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_SP_NL", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_NL", System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IsNull_SP_APHP", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_APHP", System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_SP_APHP", System.Data.SqlDbType.[Char], 0, System.Data.ParameterDirection.Input, 0, 0, "SP_APHP", System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IsNull_SP_DATEJOGENE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_DATEJOGENE", System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_SP_DATEJOGENE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_DATEJOGENE", System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IsNull_SP_ORIGINE_GENE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_ORIGINE_GENE", System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_SP_ORIGINE_GENE", System.Data.SqlDbType.[Char], 0, System.Data.ParameterDirection.Input, 0, 0, "SP_ORIGINE_GENE", System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IsNull_SP_NOMLONG", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_NOMLONG", System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_SP_NOMLONG", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_NOMLONG", System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IsNull_SP_CDT_PRESCR_TEXTE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_CDT_PRESCR_TEXTE", System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_SP_CDT_PRESCR_TEXTE", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_CDT_PRESCR_TEXTE", System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IsNull_SP_ATC_DDD_TEXTE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_ATC_DDD_TEXTE", System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_SP_ATC_DDD_TEXTE", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_ATC_DDD_TEXTE", System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New System.Data.SqlClient.SqlCommand
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [theriaque].[SP_SPECIALITE] ([SP_CODE_SQ_PK], [SP_GSP_CODE_FK], [SP_C"& _ 
                "DF_SLAB_CODE_FK], [SP_CDF_LI_CODE_FK], [SP_CATC_CODE_FK], [SP_CEPH_CODE_FK], [SP"& _ 
                "_CGE_CODE_FK], [SP_PR_CODE_FK], [SP_TYPE_SPE], [SP_GREF_FK], [SP_GREF_DATECR_FK]"& _ 
                ", [SP_NOM], [SP_NOMCOMP], [SP_PH], [SP_CIPUCD], [SP_DATECR], [SP_DATEMJ], [SP_NL"& _ 
                "], [SP_APHP], [SP_DATEJOGENE], [SP_ORIGINE_GENE], [SP_NOMLONG], [SP_CDT_PRESCR_T"& _ 
                "EXTE], [SP_ATC_DDD_TEXTE]) VALUES (@SP_CODE_SQ_PK, @SP_GSP_CODE_FK, @SP_CDF_SLAB"& _ 
                "_CODE_FK, @SP_CDF_LI_CODE_FK, @SP_CATC_CODE_FK, @SP_CEPH_CODE_FK, @SP_CGE_CODE_F"& _ 
                "K, @SP_PR_CODE_FK, @SP_TYPE_SPE, @SP_GREF_FK, @SP_GREF_DATECR_FK, @SP_NOM, @SP_N"& _ 
                "OMCOMP, @SP_PH, @SP_CIPUCD, @SP_DATECR, @SP_DATEMJ, @SP_NL, @SP_APHP, @SP_DATEJO"& _ 
                "GENE, @SP_ORIGINE_GENE, @SP_NOMLONG, @SP_CDT_PRESCR_TEXTE, @SP_ATC_DDD_TEXTE);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)& _ 
                "SELECT SP_CODE_SQ_PK, SP_GSP_CODE_FK, SP_CDF_SLAB_CODE_FK, SP_CDF_LI_CODE_FK, SP"& _ 
                "_CATC_CODE_FK, SP_CEPH_CODE_FK, SP_CGE_CODE_FK, SP_PR_CODE_FK, SP_TYPE_SPE, SP_G"& _ 
                "REF_FK, SP_GREF_DATECR_FK, SP_NOM, SP_NOMCOMP, SP_PH, SP_CIPUCD, SP_DATECR, SP_D"& _ 
                "ATEMJ, SP_NL, SP_APHP, SP_DATEJOGENE, SP_ORIGINE_GENE, SP_NOMLONG, SP_CDT_PRESCR"& _ 
                "_TEXTE, SP_ATC_DDD_TEXTE FROM theriaque.SP_SPECIALITE WHERE (SP_CODE_SQ_PK = @SP"& _ 
                "_CODE_SQ_PK)"
            Me._adapter.InsertCommand.CommandType = System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@SP_CODE_SQ_PK", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_CODE_SQ_PK", System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@SP_GSP_CODE_FK", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_GSP_CODE_FK", System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@SP_CDF_SLAB_CODE_FK", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_CDF_SLAB_CODE_FK", System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@SP_CDF_LI_CODE_FK", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_CDF_LI_CODE_FK", System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@SP_CATC_CODE_FK", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_CATC_CODE_FK", System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@SP_CEPH_CODE_FK", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_CEPH_CODE_FK", System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@SP_CGE_CODE_FK", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_CGE_CODE_FK", System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@SP_PR_CODE_FK", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_PR_CODE_FK", System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@SP_TYPE_SPE", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_TYPE_SPE", System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@SP_GREF_FK", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_GREF_FK", System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@SP_GREF_DATECR_FK", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_GREF_DATECR_FK", System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@SP_NOM", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_NOM", System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@SP_NOMCOMP", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_NOMCOMP", System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@SP_PH", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_PH", System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@SP_CIPUCD", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_CIPUCD", System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@SP_DATECR", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_DATECR", System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@SP_DATEMJ", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_DATEMJ", System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@SP_NL", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_NL", System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@SP_APHP", System.Data.SqlDbType.[Char], 0, System.Data.ParameterDirection.Input, 0, 0, "SP_APHP", System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@SP_DATEJOGENE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_DATEJOGENE", System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@SP_ORIGINE_GENE", System.Data.SqlDbType.[Char], 0, System.Data.ParameterDirection.Input, 0, 0, "SP_ORIGINE_GENE", System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@SP_NOMLONG", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_NOMLONG", System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@SP_CDT_PRESCR_TEXTE", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_CDT_PRESCR_TEXTE", System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@SP_ATC_DDD_TEXTE", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_ATC_DDD_TEXTE", System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New System.Data.SqlClient.SqlCommand
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [theriaque].[SP_SPECIALITE] SET [SP_CODE_SQ_PK] = @SP_CODE_SQ_PK, [SP_GSP_"& _ 
                "CODE_FK] = @SP_GSP_CODE_FK, [SP_CDF_SLAB_CODE_FK] = @SP_CDF_SLAB_CODE_FK, [SP_CD"& _ 
                "F_LI_CODE_FK] = @SP_CDF_LI_CODE_FK, [SP_CATC_CODE_FK] = @SP_CATC_CODE_FK, [SP_CE"& _ 
                "PH_CODE_FK] = @SP_CEPH_CODE_FK, [SP_CGE_CODE_FK] = @SP_CGE_CODE_FK, [SP_PR_CODE_"& _ 
                "FK] = @SP_PR_CODE_FK, [SP_TYPE_SPE] = @SP_TYPE_SPE, [SP_GREF_FK] = @SP_GREF_FK, "& _ 
                "[SP_GREF_DATECR_FK] = @SP_GREF_DATECR_FK, [SP_NOM] = @SP_NOM, [SP_NOMCOMP] = @SP"& _ 
                "_NOMCOMP, [SP_PH] = @SP_PH, [SP_CIPUCD] = @SP_CIPUCD, [SP_DATECR] = @SP_DATECR, "& _ 
                "[SP_DATEMJ] = @SP_DATEMJ, [SP_NL] = @SP_NL, [SP_APHP] = @SP_APHP, [SP_DATEJOGENE"& _ 
                "] = @SP_DATEJOGENE, [SP_ORIGINE_GENE] = @SP_ORIGINE_GENE, [SP_NOMLONG] = @SP_NOM"& _ 
                "LONG, [SP_CDT_PRESCR_TEXTE] = @SP_CDT_PRESCR_TEXTE, [SP_ATC_DDD_TEXTE] = @SP_ATC"& _ 
                "_DDD_TEXTE WHERE (([SP_CODE_SQ_PK] = @Original_SP_CODE_SQ_PK) AND ((@IsNull_SP_G"& _ 
                "SP_CODE_FK = 1 AND [SP_GSP_CODE_FK] IS NULL) OR ([SP_GSP_CODE_FK] = @Original_SP"& _ 
                "_GSP_CODE_FK)) AND ([SP_CDF_SLAB_CODE_FK] = @Original_SP_CDF_SLAB_CODE_FK) AND ("& _ 
                "[SP_CDF_LI_CODE_FK] = @Original_SP_CDF_LI_CODE_FK) AND ((@IsNull_SP_CATC_CODE_FK"& _ 
                " = 1 AND [SP_CATC_CODE_FK] IS NULL) OR ([SP_CATC_CODE_FK] = @Original_SP_CATC_CO"& _ 
                "DE_FK)) AND ((@IsNull_SP_CEPH_CODE_FK = 1 AND [SP_CEPH_CODE_FK] IS NULL) OR ([SP"& _ 
                "_CEPH_CODE_FK] = @Original_SP_CEPH_CODE_FK)) AND ((@IsNull_SP_CGE_CODE_FK = 1 AN"& _ 
                "D [SP_CGE_CODE_FK] IS NULL) OR ([SP_CGE_CODE_FK] = @Original_SP_CGE_CODE_FK)) AN"& _ 
                "D ([SP_PR_CODE_FK] = @Original_SP_PR_CODE_FK) AND ((@IsNull_SP_TYPE_SPE = 1 AND "& _ 
                "[SP_TYPE_SPE] IS NULL) OR ([SP_TYPE_SPE] = @Original_SP_TYPE_SPE)) AND ((@IsNull"& _ 
                "_SP_GREF_FK = 1 AND [SP_GREF_FK] IS NULL) OR ([SP_GREF_FK] = @Original_SP_GREF_F"& _ 
                "K)) AND ((@IsNull_SP_GREF_DATECR_FK = 1 AND [SP_GREF_DATECR_FK] IS NULL) OR ([SP"& _ 
                "_GREF_DATECR_FK] = @Original_SP_GREF_DATECR_FK)) AND ([SP_NOM] = @Original_SP_NO"& _ 
                "M) AND ((@IsNull_SP_NOMCOMP = 1 AND [SP_NOMCOMP] IS NULL) OR ([SP_NOMCOMP] = @Or"& _ 
                "iginal_SP_NOMCOMP)) AND ((@IsNull_SP_PH = 1 AND [SP_PH] IS NULL) OR ([SP_PH] = @"& _ 
                "Original_SP_PH)) AND ((@IsNull_SP_CIPUCD = 1 AND [SP_CIPUCD] IS NULL) OR ([SP_CI"& _ 
                "PUCD] = @Original_SP_CIPUCD)) AND ([SP_DATECR] = @Original_SP_DATECR) AND ((@IsN"& _ 
                "ull_SP_DATEMJ = 1 AND [SP_DATEMJ] IS NULL) OR ([SP_DATEMJ] = @Original_SP_DATEMJ"& _ 
                ")) AND ((@IsNull_SP_NL = 1 AND [SP_NL] IS NULL) OR ([SP_NL] = @Original_SP_NL)) "& _ 
                "AND ((@IsNull_SP_APHP = 1 AND [SP_APHP] IS NULL) OR ([SP_APHP] = @Original_SP_AP"& _ 
                "HP)) AND ((@IsNull_SP_DATEJOGENE = 1 AND [SP_DATEJOGENE] IS NULL) OR ([SP_DATEJO"& _ 
                "GENE] = @Original_SP_DATEJOGENE)) AND ((@IsNull_SP_ORIGINE_GENE = 1 AND [SP_ORIG"& _ 
                "INE_GENE] IS NULL) OR ([SP_ORIGINE_GENE] = @Original_SP_ORIGINE_GENE)) AND ((@Is"& _ 
                "Null_SP_NOMLONG = 1 AND [SP_NOMLONG] IS NULL) OR ([SP_NOMLONG] = @Original_SP_NO"& _ 
                "MLONG)) AND ((@IsNull_SP_CDT_PRESCR_TEXTE = 1 AND [SP_CDT_PRESCR_TEXTE] IS NULL)"& _ 
                " OR ([SP_CDT_PRESCR_TEXTE] = @Original_SP_CDT_PRESCR_TEXTE)) AND ((@IsNull_SP_AT"& _ 
                "C_DDD_TEXTE = 1 AND [SP_ATC_DDD_TEXTE] IS NULL) OR ([SP_ATC_DDD_TEXTE] = @Origin"& _ 
                "al_SP_ATC_DDD_TEXTE)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT SP_CODE_SQ_PK, SP_GSP_CODE_FK, SP_CDF_SLAB_CODE_"& _ 
                "FK, SP_CDF_LI_CODE_FK, SP_CATC_CODE_FK, SP_CEPH_CODE_FK, SP_CGE_CODE_FK, SP_PR_C"& _ 
                "ODE_FK, SP_TYPE_SPE, SP_GREF_FK, SP_GREF_DATECR_FK, SP_NOM, SP_NOMCOMP, SP_PH, S"& _ 
                "P_CIPUCD, SP_DATECR, SP_DATEMJ, SP_NL, SP_APHP, SP_DATEJOGENE, SP_ORIGINE_GENE, "& _ 
                "SP_NOMLONG, SP_CDT_PRESCR_TEXTE, SP_ATC_DDD_TEXTE FROM theriaque.SP_SPECIALITE W"& _ 
                "HERE (SP_CODE_SQ_PK = @SP_CODE_SQ_PK)"
            Me._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@SP_CODE_SQ_PK", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_CODE_SQ_PK", System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@SP_GSP_CODE_FK", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_GSP_CODE_FK", System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@SP_CDF_SLAB_CODE_FK", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_CDF_SLAB_CODE_FK", System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@SP_CDF_LI_CODE_FK", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_CDF_LI_CODE_FK", System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@SP_CATC_CODE_FK", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_CATC_CODE_FK", System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@SP_CEPH_CODE_FK", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_CEPH_CODE_FK", System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@SP_CGE_CODE_FK", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_CGE_CODE_FK", System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@SP_PR_CODE_FK", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_PR_CODE_FK", System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@SP_TYPE_SPE", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_TYPE_SPE", System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@SP_GREF_FK", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_GREF_FK", System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@SP_GREF_DATECR_FK", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_GREF_DATECR_FK", System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@SP_NOM", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_NOM", System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@SP_NOMCOMP", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_NOMCOMP", System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@SP_PH", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_PH", System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@SP_CIPUCD", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_CIPUCD", System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@SP_DATECR", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_DATECR", System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@SP_DATEMJ", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_DATEMJ", System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@SP_NL", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_NL", System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@SP_APHP", System.Data.SqlDbType.[Char], 0, System.Data.ParameterDirection.Input, 0, 0, "SP_APHP", System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@SP_DATEJOGENE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_DATEJOGENE", System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@SP_ORIGINE_GENE", System.Data.SqlDbType.[Char], 0, System.Data.ParameterDirection.Input, 0, 0, "SP_ORIGINE_GENE", System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@SP_NOMLONG", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_NOMLONG", System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@SP_CDT_PRESCR_TEXTE", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_CDT_PRESCR_TEXTE", System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@SP_ATC_DDD_TEXTE", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_ATC_DDD_TEXTE", System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_SP_CODE_SQ_PK", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_CODE_SQ_PK", System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IsNull_SP_GSP_CODE_FK", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_GSP_CODE_FK", System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_SP_GSP_CODE_FK", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_GSP_CODE_FK", System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_SP_CDF_SLAB_CODE_FK", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_CDF_SLAB_CODE_FK", System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_SP_CDF_LI_CODE_FK", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_CDF_LI_CODE_FK", System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IsNull_SP_CATC_CODE_FK", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_CATC_CODE_FK", System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_SP_CATC_CODE_FK", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_CATC_CODE_FK", System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IsNull_SP_CEPH_CODE_FK", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_CEPH_CODE_FK", System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_SP_CEPH_CODE_FK", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_CEPH_CODE_FK", System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IsNull_SP_CGE_CODE_FK", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_CGE_CODE_FK", System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_SP_CGE_CODE_FK", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_CGE_CODE_FK", System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_SP_PR_CODE_FK", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_PR_CODE_FK", System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IsNull_SP_TYPE_SPE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_TYPE_SPE", System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_SP_TYPE_SPE", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_TYPE_SPE", System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IsNull_SP_GREF_FK", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_GREF_FK", System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_SP_GREF_FK", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_GREF_FK", System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IsNull_SP_GREF_DATECR_FK", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_GREF_DATECR_FK", System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_SP_GREF_DATECR_FK", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_GREF_DATECR_FK", System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_SP_NOM", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_NOM", System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IsNull_SP_NOMCOMP", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_NOMCOMP", System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_SP_NOMCOMP", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_NOMCOMP", System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IsNull_SP_PH", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_PH", System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_SP_PH", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_PH", System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IsNull_SP_CIPUCD", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_CIPUCD", System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_SP_CIPUCD", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_CIPUCD", System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_SP_DATECR", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_DATECR", System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IsNull_SP_DATEMJ", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_DATEMJ", System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_SP_DATEMJ", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_DATEMJ", System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IsNull_SP_NL", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_NL", System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_SP_NL", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_NL", System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IsNull_SP_APHP", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_APHP", System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_SP_APHP", System.Data.SqlDbType.[Char], 0, System.Data.ParameterDirection.Input, 0, 0, "SP_APHP", System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IsNull_SP_DATEJOGENE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_DATEJOGENE", System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_SP_DATEJOGENE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_DATEJOGENE", System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IsNull_SP_ORIGINE_GENE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_ORIGINE_GENE", System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_SP_ORIGINE_GENE", System.Data.SqlDbType.[Char], 0, System.Data.ParameterDirection.Input, 0, 0, "SP_ORIGINE_GENE", System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IsNull_SP_NOMLONG", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_NOMLONG", System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_SP_NOMLONG", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_NOMLONG", System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IsNull_SP_CDT_PRESCR_TEXTE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_CDT_PRESCR_TEXTE", System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_SP_CDT_PRESCR_TEXTE", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_CDT_PRESCR_TEXTE", System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IsNull_SP_ATC_DDD_TEXTE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_ATC_DDD_TEXTE", System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_SP_ATC_DDD_TEXTE", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SP_ATC_DDD_TEXTE", System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Theriaque.My.Settings.ConnectionString
        End Sub

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Private Sub InitCommandCollection()
            Me._commandCollection = New System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT SP_CODE_SQ_PK, SP_GSP_CODE_FK, SP_CDF_SLAB_CODE_FK, SP_CDF_LI_CODE_FK, SP_" & _
                "CATC_CODE_FK, SP_CEPH_CODE_FK, SP_CGE_CODE_FK, SP_PR_CODE_FK, SP_TYPE_SPE, SP_GR" & _
                "EF_FK, SP_GREF_DATECR_FK, SP_NOM, SP_NOMCOMP, SP_PH, SP_CIPUCD, SP_DATECR, SP_DA" & _
                "TEMJ, SP_NL, SP_APHP, SP_DATEJOGENE, SP_ORIGINE_GENE, SP_NOMLONG, SP_CDT_PRESCR_" & _
                "TEXTE, SP_ATC_DDD_TEXTE FROM theriaque.SP_SPECIALITE"
            Me._commandCollection(0).CommandType = System.Data.CommandType.Text
            Me._commandCollection(1) = New System.Data.SqlClient.SqlCommand
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT SP_CODE_SQ_PK, SP_GSP_CODE_FK, SP_CDF_SLAB_CODE_FK, SP_CDF_LI_CODE_FK, SP_" & _
                "CATC_CODE_FK, SP_CEPH_CODE_FK, SP_CGE_CODE_FK, SP_PR_CODE_FK, SP_TYPE_SPE, SP_GR" & _
                "EF_FK, SP_GREF_DATECR_FK, SP_NOM, SP_NOMCOMP, SP_PH, SP_CIPUCD, SP_DATECR, SP_DA" & _
                "TEMJ, SP_NL, SP_APHP, SP_DATEJOGENE, SP_ORIGINE_GENE, SP_NOMLONG, SP_CDT_PRESCR_" & _
                "TEXTE, SP_ATC_DDD_TEXTE FROM theriaque.SP_SPECIALITE" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "WHERE SP_CODE_SQ_PK = @SP_" & _
                "CODE_SQ_PK"
            Me._commandCollection(1).CommandType = System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New System.Data.SqlClient.SqlParameter("@SP_CODE_SQ_PK", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, 0, 0, "SP_CODE_SQ_PK", System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
        End Sub

        <System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, True)> _
        Public Overridable Overloads Function Fill(ByVal dataTable As dsTheriaque_GrosseRequete.SP_SPECIALITEDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.[Select], True)> _
        Public Overridable Overloads Function GetData() As dsTheriaque_GrosseRequete.SP_SPECIALITEDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsTheriaque_GrosseRequete.SP_SPECIALITEDataTable = New dsTheriaque_GrosseRequete.SP_SPECIALITEDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function

        <System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, False)> _
        Public Overridable Overloads Function FillByCode(ByVal dataTable As dsTheriaque_GrosseRequete.SP_SPECIALITEDataTable, ByVal SP_CODE_SQ_PK As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(SP_CODE_SQ_PK, Integer)
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.[Select], False)> _
        Public Overridable Overloads Function GetDataByCode(ByVal SP_CODE_SQ_PK As Integer) As dsTheriaque_GrosseRequete.SP_SPECIALITEDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(SP_CODE_SQ_PK, Integer)
            Dim dataTable As dsTheriaque_GrosseRequete.SP_SPECIALITEDataTable = New dsTheriaque_GrosseRequete.SP_SPECIALITEDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function

        <System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataTable As dsTheriaque_GrosseRequete.SP_SPECIALITEDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function

        <System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataSet As dsTheriaque_GrosseRequete) As Integer
            Return Me.Adapter.Update(dataSet, "SP_SPECIALITE")
        End Function

        <System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataRow As System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New System.Data.DataRow() {dataRow})
        End Function

        <System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataRows() As System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function

        <System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, True)> _
        Public Overridable Overloads Function Delete( _
                    ByVal Original_SP_CODE_SQ_PK As Integer, _
                    ByVal Original_SP_GSP_CODE_FK As System.Nullable(Of Integer), _
                    ByVal Original_SP_CDF_SLAB_CODE_FK As String, _
                    ByVal Original_SP_CDF_LI_CODE_FK As String, _
                    ByVal Original_SP_CATC_CODE_FK As String, _
                    ByVal Original_SP_CEPH_CODE_FK As String, _
                    ByVal Original_SP_CGE_CODE_FK As System.Nullable(Of Integer), _
                    ByVal Original_SP_PR_CODE_FK As Integer, _
                    ByVal Original_SP_TYPE_SPE As String, _
                    ByVal Original_SP_GREF_FK As System.Nullable(Of Integer), _
                    ByVal Original_SP_GREF_DATECR_FK As System.Nullable(Of Date), _
                    ByVal Original_SP_NOM As String, _
                    ByVal Original_SP_NOMCOMP As String, _
                    ByVal Original_SP_PH As String, _
                    ByVal Original_SP_CIPUCD As String, _
                    ByVal Original_SP_DATECR As Date, _
                    ByVal Original_SP_DATEMJ As System.Nullable(Of Date), _
                    ByVal Original_SP_NL As String, _
                    ByVal Original_SP_APHP As String, _
                    ByVal Original_SP_DATEJOGENE As System.Nullable(Of Date), _
                    ByVal Original_SP_ORIGINE_GENE As String, _
                    ByVal Original_SP_NOMLONG As String, _
                    ByVal Original_SP_CDT_PRESCR_TEXTE As String, _
                    ByVal Original_SP_ATC_DDD_TEXTE As String) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_SP_CODE_SQ_PK, Integer)
            If (Original_SP_GSP_CODE_FK.HasValue = True) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_SP_GSP_CODE_FK.Value, Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = System.DBNull.Value
            End If
            If (Original_SP_CDF_SLAB_CODE_FK Is Nothing) Then
                Throw New System.ArgumentNullException("Original_SP_CDF_SLAB_CODE_FK")
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_SP_CDF_SLAB_CODE_FK, String)
            End If
            If (Original_SP_CDF_LI_CODE_FK Is Nothing) Then
                Throw New System.ArgumentNullException("Original_SP_CDF_LI_CODE_FK")
            Else
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_SP_CDF_LI_CODE_FK, String)
            End If
            If (Original_SP_CATC_CODE_FK Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_SP_CATC_CODE_FK, String)
            End If
            If (Original_SP_CEPH_CODE_FK Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_SP_CEPH_CODE_FK, String)
            End If
            If (Original_SP_CGE_CODE_FK.HasValue = True) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_SP_CGE_CODE_FK.Value, Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = System.DBNull.Value
            End If
            Me.Adapter.DeleteCommand.Parameters(11).Value = CType(Original_SP_PR_CODE_FK, Integer)
            If (Original_SP_TYPE_SPE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(13).Value = System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(Original_SP_TYPE_SPE, String)
            End If
            If (Original_SP_GREF_FK.HasValue = True) Then
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(Original_SP_GREF_FK.Value, Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(15).Value = System.DBNull.Value
            End If
            If (Original_SP_GREF_DATECR_FK.HasValue = True) Then
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(Original_SP_GREF_DATECR_FK.Value, Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(17).Value = System.DBNull.Value
            End If
            If (Original_SP_NOM Is Nothing) Then
                Throw New System.ArgumentNullException("Original_SP_NOM")
            Else
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(Original_SP_NOM, String)
            End If
            If (Original_SP_NOMCOMP Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(Original_SP_NOMCOMP, String)
            End If
            If (Original_SP_PH Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(Original_SP_PH, String)
            End If
            If (Original_SP_CIPUCD Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(Original_SP_CIPUCD, String)
            End If
            Me.Adapter.DeleteCommand.Parameters(25).Value = CType(Original_SP_DATECR, Date)
            If (Original_SP_DATEMJ.HasValue = True) Then
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(Original_SP_DATEMJ.Value, Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(27).Value = System.DBNull.Value
            End If
            If (Original_SP_NL Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(29).Value = System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(Original_SP_NL, String)
            End If
            If (Original_SP_APHP Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(31).Value = System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(Original_SP_APHP, String)
            End If
            If (Original_SP_DATEJOGENE.HasValue = True) Then
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(Original_SP_DATEJOGENE.Value, Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(33).Value = System.DBNull.Value
            End If
            If (Original_SP_ORIGINE_GENE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(34).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(35).Value = System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(34).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(Original_SP_ORIGINE_GENE, String)
            End If
            If (Original_SP_NOMLONG Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(36).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(37).Value = System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(36).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(Original_SP_NOMLONG, String)
            End If
            If (Original_SP_CDT_PRESCR_TEXTE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(38).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(39).Value = System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(38).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(Original_SP_CDT_PRESCR_TEXTE, String)
            End If
            If (Original_SP_ATC_DDD_TEXTE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(40).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(41).Value = System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(40).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(Original_SP_ATC_DDD_TEXTE, String)
            End If
            Dim previousConnectionState As System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And System.Data.ConnectionState.Open) _
                        <> System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open()
            End If
            Try
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close()
                End If
            End Try
        End Function

        <System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, True)> _
        Public Overridable Overloads Function Insert( _
                    ByVal SP_CODE_SQ_PK As Integer, _
                    ByVal SP_GSP_CODE_FK As System.Nullable(Of Integer), _
                    ByVal SP_CDF_SLAB_CODE_FK As String, _
                    ByVal SP_CDF_LI_CODE_FK As String, _
                    ByVal SP_CATC_CODE_FK As String, _
                    ByVal SP_CEPH_CODE_FK As String, _
                    ByVal SP_CGE_CODE_FK As System.Nullable(Of Integer), _
                    ByVal SP_PR_CODE_FK As Integer, _
                    ByVal SP_TYPE_SPE As String, _
                    ByVal SP_GREF_FK As System.Nullable(Of Integer), _
                    ByVal SP_GREF_DATECR_FK As System.Nullable(Of Date), _
                    ByVal SP_NOM As String, _
                    ByVal SP_NOMCOMP As String, _
                    ByVal SP_PH As String, _
                    ByVal SP_CIPUCD As String, _
                    ByVal SP_DATECR As Date, _
                    ByVal SP_DATEMJ As System.Nullable(Of Date), _
                    ByVal SP_NL As String, _
                    ByVal SP_APHP As String, _
                    ByVal SP_DATEJOGENE As System.Nullable(Of Date), _
                    ByVal SP_ORIGINE_GENE As String, _
                    ByVal SP_NOMLONG As String, _
                    ByVal SP_CDT_PRESCR_TEXTE As String, _
                    ByVal SP_ATC_DDD_TEXTE As String) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(SP_CODE_SQ_PK, Integer)
            If (SP_GSP_CODE_FK.HasValue = True) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(SP_GSP_CODE_FK.Value, Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = System.DBNull.Value
            End If
            If (SP_CDF_SLAB_CODE_FK Is Nothing) Then
                Throw New System.ArgumentNullException("SP_CDF_SLAB_CODE_FK")
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(SP_CDF_SLAB_CODE_FK, String)
            End If
            If (SP_CDF_LI_CODE_FK Is Nothing) Then
                Throw New System.ArgumentNullException("SP_CDF_LI_CODE_FK")
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(SP_CDF_LI_CODE_FK, String)
            End If
            If (SP_CATC_CODE_FK Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(SP_CATC_CODE_FK, String)
            End If
            If (SP_CEPH_CODE_FK Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(SP_CEPH_CODE_FK, String)
            End If
            If (SP_CGE_CODE_FK.HasValue = True) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(SP_CGE_CODE_FK.Value, Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = System.DBNull.Value
            End If
            Me.Adapter.InsertCommand.Parameters(7).Value = CType(SP_PR_CODE_FK, Integer)
            If (SP_TYPE_SPE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(SP_TYPE_SPE, String)
            End If
            If (SP_GREF_FK.HasValue = True) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(SP_GREF_FK.Value, Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = System.DBNull.Value
            End If
            If (SP_GREF_DATECR_FK.HasValue = True) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(SP_GREF_DATECR_FK.Value, Date)
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = System.DBNull.Value
            End If
            If (SP_NOM Is Nothing) Then
                Throw New System.ArgumentNullException("SP_NOM")
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(SP_NOM, String)
            End If
            If (SP_NOMCOMP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(SP_NOMCOMP, String)
            End If
            If (SP_PH Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(SP_PH, String)
            End If
            If (SP_CIPUCD Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(SP_CIPUCD, String)
            End If
            Me.Adapter.InsertCommand.Parameters(15).Value = CType(SP_DATECR, Date)
            If (SP_DATEMJ.HasValue = True) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(SP_DATEMJ.Value, Date)
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = System.DBNull.Value
            End If
            If (SP_NL Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(SP_NL, String)
            End If
            If (SP_APHP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(SP_APHP, String)
            End If
            If (SP_DATEJOGENE.HasValue = True) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(SP_DATEJOGENE.Value, Date)
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = System.DBNull.Value
            End If
            If (SP_ORIGINE_GENE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(SP_ORIGINE_GENE, String)
            End If
            If (SP_NOMLONG Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(SP_NOMLONG, String)
            End If
            If (SP_CDT_PRESCR_TEXTE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(SP_CDT_PRESCR_TEXTE, String)
            End If
            If (SP_ATC_DDD_TEXTE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(SP_ATC_DDD_TEXTE, String)
            End If
            Dim previousConnectionState As System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And System.Data.ConnectionState.Open) _
                        <> System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open()
            End If
            Try
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close()
                End If
            End Try
        End Function

        <System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, True)> _
        Public Overridable Overloads Function Update( _
                    ByVal SP_CODE_SQ_PK As Integer, _
                    ByVal SP_GSP_CODE_FK As System.Nullable(Of Integer), _
                    ByVal SP_CDF_SLAB_CODE_FK As String, _
                    ByVal SP_CDF_LI_CODE_FK As String, _
                    ByVal SP_CATC_CODE_FK As String, _
                    ByVal SP_CEPH_CODE_FK As String, _
                    ByVal SP_CGE_CODE_FK As System.Nullable(Of Integer), _
                    ByVal SP_PR_CODE_FK As Integer, _
                    ByVal SP_TYPE_SPE As String, _
                    ByVal SP_GREF_FK As System.Nullable(Of Integer), _
                    ByVal SP_GREF_DATECR_FK As System.Nullable(Of Date), _
                    ByVal SP_NOM As String, _
                    ByVal SP_NOMCOMP As String, _
                    ByVal SP_PH As String, _
                    ByVal SP_CIPUCD As String, _
                    ByVal SP_DATECR As Date, _
                    ByVal SP_DATEMJ As System.Nullable(Of Date), _
                    ByVal SP_NL As String, _
                    ByVal SP_APHP As String, _
                    ByVal SP_DATEJOGENE As System.Nullable(Of Date), _
                    ByVal SP_ORIGINE_GENE As String, _
                    ByVal SP_NOMLONG As String, _
                    ByVal SP_CDT_PRESCR_TEXTE As String, _
                    ByVal SP_ATC_DDD_TEXTE As String, _
                    ByVal Original_SP_CODE_SQ_PK As Integer, _
                    ByVal Original_SP_GSP_CODE_FK As System.Nullable(Of Integer), _
                    ByVal Original_SP_CDF_SLAB_CODE_FK As String, _
                    ByVal Original_SP_CDF_LI_CODE_FK As String, _
                    ByVal Original_SP_CATC_CODE_FK As String, _
                    ByVal Original_SP_CEPH_CODE_FK As String, _
                    ByVal Original_SP_CGE_CODE_FK As System.Nullable(Of Integer), _
                    ByVal Original_SP_PR_CODE_FK As Integer, _
                    ByVal Original_SP_TYPE_SPE As String, _
                    ByVal Original_SP_GREF_FK As System.Nullable(Of Integer), _
                    ByVal Original_SP_GREF_DATECR_FK As System.Nullable(Of Date), _
                    ByVal Original_SP_NOM As String, _
                    ByVal Original_SP_NOMCOMP As String, _
                    ByVal Original_SP_PH As String, _
                    ByVal Original_SP_CIPUCD As String, _
                    ByVal Original_SP_DATECR As Date, _
                    ByVal Original_SP_DATEMJ As System.Nullable(Of Date), _
                    ByVal Original_SP_NL As String, _
                    ByVal Original_SP_APHP As String, _
                    ByVal Original_SP_DATEJOGENE As System.Nullable(Of Date), _
                    ByVal Original_SP_ORIGINE_GENE As String, _
                    ByVal Original_SP_NOMLONG As String, _
                    ByVal Original_SP_CDT_PRESCR_TEXTE As String, _
                    ByVal Original_SP_ATC_DDD_TEXTE As String) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(SP_CODE_SQ_PK, Integer)
            If (SP_GSP_CODE_FK.HasValue = True) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(SP_GSP_CODE_FK.Value, Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = System.DBNull.Value
            End If
            If (SP_CDF_SLAB_CODE_FK Is Nothing) Then
                Throw New System.ArgumentNullException("SP_CDF_SLAB_CODE_FK")
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(SP_CDF_SLAB_CODE_FK, String)
            End If
            If (SP_CDF_LI_CODE_FK Is Nothing) Then
                Throw New System.ArgumentNullException("SP_CDF_LI_CODE_FK")
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(SP_CDF_LI_CODE_FK, String)
            End If
            If (SP_CATC_CODE_FK Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(SP_CATC_CODE_FK, String)
            End If
            If (SP_CEPH_CODE_FK Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(SP_CEPH_CODE_FK, String)
            End If
            If (SP_CGE_CODE_FK.HasValue = True) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(SP_CGE_CODE_FK.Value, Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(7).Value = CType(SP_PR_CODE_FK, Integer)
            If (SP_TYPE_SPE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(SP_TYPE_SPE, String)
            End If
            If (SP_GREF_FK.HasValue = True) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(SP_GREF_FK.Value, Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = System.DBNull.Value
            End If
            If (SP_GREF_DATECR_FK.HasValue = True) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(SP_GREF_DATECR_FK.Value, Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = System.DBNull.Value
            End If
            If (SP_NOM Is Nothing) Then
                Throw New System.ArgumentNullException("SP_NOM")
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(SP_NOM, String)
            End If
            If (SP_NOMCOMP Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(SP_NOMCOMP, String)
            End If
            If (SP_PH Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(SP_PH, String)
            End If
            If (SP_CIPUCD Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(SP_CIPUCD, String)
            End If
            Me.Adapter.UpdateCommand.Parameters(15).Value = CType(SP_DATECR, Date)
            If (SP_DATEMJ.HasValue = True) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(SP_DATEMJ.Value, Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = System.DBNull.Value
            End If
            If (SP_NL Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(SP_NL, String)
            End If
            If (SP_APHP Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(SP_APHP, String)
            End If
            If (SP_DATEJOGENE.HasValue = True) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(SP_DATEJOGENE.Value, Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = System.DBNull.Value
            End If
            If (SP_ORIGINE_GENE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(SP_ORIGINE_GENE, String)
            End If
            If (SP_NOMLONG Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(SP_NOMLONG, String)
            End If
            If (SP_CDT_PRESCR_TEXTE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(SP_CDT_PRESCR_TEXTE, String)
            End If
            If (SP_ATC_DDD_TEXTE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(23).Value = System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(SP_ATC_DDD_TEXTE, String)
            End If
            Me.Adapter.UpdateCommand.Parameters(24).Value = CType(Original_SP_CODE_SQ_PK, Integer)
            If (Original_SP_GSP_CODE_FK.HasValue = True) Then
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(Original_SP_GSP_CODE_FK.Value, Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(26).Value = System.DBNull.Value
            End If
            If (Original_SP_CDF_SLAB_CODE_FK Is Nothing) Then
                Throw New System.ArgumentNullException("Original_SP_CDF_SLAB_CODE_FK")
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(Original_SP_CDF_SLAB_CODE_FK, String)
            End If
            If (Original_SP_CDF_LI_CODE_FK Is Nothing) Then
                Throw New System.ArgumentNullException("Original_SP_CDF_LI_CODE_FK")
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(Original_SP_CDF_LI_CODE_FK, String)
            End If
            If (Original_SP_CATC_CODE_FK Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(30).Value = System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(Original_SP_CATC_CODE_FK, String)
            End If
            If (Original_SP_CEPH_CODE_FK Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(32).Value = System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(Original_SP_CEPH_CODE_FK, String)
            End If
            If (Original_SP_CGE_CODE_FK.HasValue = True) Then
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(Original_SP_CGE_CODE_FK.Value, Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(34).Value = System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(35).Value = CType(Original_SP_PR_CODE_FK, Integer)
            If (Original_SP_TYPE_SPE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(37).Value = System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(Original_SP_TYPE_SPE, String)
            End If
            If (Original_SP_GREF_FK.HasValue = True) Then
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(Original_SP_GREF_FK.Value, Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(39).Value = System.DBNull.Value
            End If
            If (Original_SP_GREF_DATECR_FK.HasValue = True) Then
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(Original_SP_GREF_DATECR_FK.Value, Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(41).Value = System.DBNull.Value
            End If
            If (Original_SP_NOM Is Nothing) Then
                Throw New System.ArgumentNullException("Original_SP_NOM")
            Else
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(Original_SP_NOM, String)
            End If
            If (Original_SP_NOMCOMP Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(44).Value = System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(Original_SP_NOMCOMP, String)
            End If
            If (Original_SP_PH Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(46).Value = System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(Original_SP_PH, String)
            End If
            If (Original_SP_CIPUCD Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(48).Value = System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(Original_SP_CIPUCD, String)
            End If
            Me.Adapter.UpdateCommand.Parameters(49).Value = CType(Original_SP_DATECR, Date)
            If (Original_SP_DATEMJ.HasValue = True) Then
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(Original_SP_DATEMJ.Value, Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(51).Value = System.DBNull.Value
            End If
            If (Original_SP_NL Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(53).Value = System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(53).Value = CType(Original_SP_NL, String)
            End If
            If (Original_SP_APHP Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(55).Value = System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(55).Value = CType(Original_SP_APHP, String)
            End If
            If (Original_SP_DATEJOGENE.HasValue = True) Then
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(57).Value = CType(Original_SP_DATEJOGENE.Value, Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(57).Value = System.DBNull.Value
            End If
            If (Original_SP_ORIGINE_GENE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(59).Value = System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(59).Value = CType(Original_SP_ORIGINE_GENE, String)
            End If
            If (Original_SP_NOMLONG Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(61).Value = System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(61).Value = CType(Original_SP_NOMLONG, String)
            End If
            If (Original_SP_CDT_PRESCR_TEXTE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(62).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(63).Value = System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(62).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(63).Value = CType(Original_SP_CDT_PRESCR_TEXTE, String)
            End If
            If (Original_SP_ATC_DDD_TEXTE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(64).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(65).Value = System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(64).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(65).Value = CType(Original_SP_ATC_DDD_TEXTE, String)
            End If
            Dim previousConnectionState As System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And System.Data.ConnectionState.Open) _
                        <> System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open()
            End If
            Try
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close()
                End If
            End Try
        End Function
    End Class

    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"), _
     System.ComponentModel.DesignerCategoryAttribute("code"), _
     System.ComponentModel.ToolboxItem(True), _
     System.ComponentModel.DataObjectAttribute(True), _
     System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" & _
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), _
     System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
    Partial Public Class PRE_PRESENTATIONTableAdapter
        Inherits System.ComponentModel.Component

        Private WithEvents _adapter As System.Data.SqlClient.SqlDataAdapter

        Private _connection As System.Data.SqlClient.SqlConnection

        Private _commandCollection() As System.Data.SqlClient.SqlCommand

        Private _clearBeforeFill As Boolean

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Sub New()
            MyBase.New()
            Me.ClearBeforeFill = True
        End Sub

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Private ReadOnly Property Adapter() As System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter()
                End If
                Return Me._adapter
            End Get
        End Property

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Friend Property Connection() As System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection()
                End If
                Return Me._connection
            End Get
            Set(ByVal value As System.Data.SqlClient.SqlConnection)
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i), System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Protected ReadOnly Property CommandCollection() As System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection()
                End If
                Return Me._commandCollection
            End Get
        End Property

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set(ByVal value As Boolean)
                Me._clearBeforeFill = value
            End Set
        End Property

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Private Sub InitAdapter()
            Me._adapter = New System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As System.Data.Common.DataTableMapping = New System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "PRE_PRESENTATION"
            tableMapping.ColumnMappings.Add("PRE_CODE_PK", "PRE_CODE_PK")
            tableMapping.ColumnMappings.Add("PRE_SP_CODE_FK", "PRE_SP_CODE_FK")
            tableMapping.ColumnMappings.Add("PRE_EAN_REF", "PRE_EAN_REF")
            tableMapping.ColumnMappings.Add("PRE_NBUNITE", "PRE_NBUNITE")
            tableMapping.ColumnMappings.Add("PRE_CDF_UP_CODE_FK", "PRE_CDF_UP_CODE_FK")
            tableMapping.ColumnMappings.Add("PRE_CACDT_TEXTE", "PRE_CACDT_TEXTE")
            tableMapping.ColumnMappings.Add("PRE_CDF_RH_CODE_FK", "PRE_CDF_RH_CODE_FK")
            tableMapping.ColumnMappings.Add("PRE_CDF_LI_CODE_FK", "PRE_CDF_LI_CODE_FK")
            tableMapping.ColumnMappings.Add("PRE_ETAT_COMMER", "PRE_ETAT_COMMER")
            tableMapping.ColumnMappings.Add("PRE_DATECOMMER", "PRE_DATECOMMER")
            tableMapping.ColumnMappings.Add("PRE_DATESUP", "PRE_DATESUP")
            tableMapping.ColumnMappings.Add("PRE_CDF_PU_CODE_FK", "PRE_CDF_PU_CODE_FK")
            tableMapping.ColumnMappings.Add("PRE_CEPH_CODE_FK", "PRE_CEPH_CODE_FK")
            tableMapping.ColumnMappings.Add("PRE_CATC_CODE_FK", "PRE_CATC_CODE_FK")
            tableMapping.ColumnMappings.Add("PRE_NATUCD_CDF_CODE_FK", "PRE_NATUCD_CDF_CODE_FK")
            tableMapping.ColumnMappings.Add("PRE_NATUCD_CDF_NUM_FK", "PRE_NATUCD_CDF_NUM_FK")
            tableMapping.ColumnMappings.Add("PRE_DATEJOCIP", "PRE_DATEJOCIP")
            tableMapping.ColumnMappings.Add("PRE_AGRCOLL", "PRE_AGRCOLL")
            tableMapping.ColumnMappings.Add("PRE_DATEJOCOLL", "PRE_DATEJOCOLL")
            tableMapping.ColumnMappings.Add("PRE_DATEFINCOLL", "PRE_DATEFINCOLL")
            tableMapping.ColumnMappings.Add("PRE_DATE_APPLIFINCOLL", "PRE_DATE_APPLIFINCOLL")
            tableMapping.ColumnMappings.Add("PRE_PARTSTATUT", "PRE_PARTSTATUT")
            tableMapping.ColumnMappings.Add("PRE_TSS_TEXTE", "PRE_TSS_TEXTE")
            tableMapping.ColumnMappings.Add("PRE_CONSAPOUV", "PRE_CONSAPOUV")
            tableMapping.ColumnMappings.Add("PRE_LIB_CEPS", "PRE_LIB_CEPS")
            tableMapping.ColumnMappings.Add("PRE_ADMIN", "PRE_ADMIN")
            tableMapping.ColumnMappings.Add("PRE_DATECR", "PRE_DATECR")
            tableMapping.ColumnMappings.Add("PRE_DATEMJ", "PRE_DATEMJ")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New System.Data.SqlClient.SqlCommand
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [theriaque].[PRE_PRESENTATION] WHERE (([PRE_CODE_PK] = @Original_PRE_" & _
                "CODE_PK) AND ([PRE_SP_CODE_FK] = @Original_PRE_SP_CODE_FK) AND ((@IsNull_PRE_EAN" & _
                "_REF = 1 AND [PRE_EAN_REF] IS NULL) OR ([PRE_EAN_REF] = @Original_PRE_EAN_REF)) " & _
                "AND ((@IsNull_PRE_NBUNITE = 1 AND [PRE_NBUNITE] IS NULL) OR ([PRE_NBUNITE] = @Or" & _
                "iginal_PRE_NBUNITE)) AND ((@IsNull_PRE_CDF_UP_CODE_FK = 1 AND [PRE_CDF_UP_CODE_F" & _
                "K] IS NULL) OR ([PRE_CDF_UP_CODE_FK] = @Original_PRE_CDF_UP_CODE_FK)) AND ((@IsN" & _
                "ull_PRE_CACDT_TEXTE = 1 AND [PRE_CACDT_TEXTE] IS NULL) OR ([PRE_CACDT_TEXTE] = @" & _
                "Original_PRE_CACDT_TEXTE)) AND ([PRE_CDF_RH_CODE_FK] = @Original_PRE_CDF_RH_CODE" & _
                "_FK) AND ((@IsNull_PRE_CDF_LI_CODE_FK = 1 AND [PRE_CDF_LI_CODE_FK] IS NULL) OR (" & _
                "[PRE_CDF_LI_CODE_FK] = @Original_PRE_CDF_LI_CODE_FK)) AND ((@IsNull_PRE_ETAT_COM" & _
                "MER = 1 AND [PRE_ETAT_COMMER] IS NULL) OR ([PRE_ETAT_COMMER] = @Original_PRE_ETA" & _
                "T_COMMER)) AND ((@IsNull_PRE_DATECOMMER = 1 AND [PRE_DATECOMMER] IS NULL) OR ([P" & _
                "RE_DATECOMMER] = @Original_PRE_DATECOMMER)) AND ((@IsNull_PRE_DATESUP = 1 AND [P" & _
                "RE_DATESUP] IS NULL) OR ([PRE_DATESUP] = @Original_PRE_DATESUP)) AND ((@IsNull_P" & _
                "RE_CDF_PU_CODE_FK = 1 AND [PRE_CDF_PU_CODE_FK] IS NULL) OR ([PRE_CDF_PU_CODE_FK]" & _
                " = @Original_PRE_CDF_PU_CODE_FK)) AND ((@IsNull_PRE_CEPH_CODE_FK = 1 AND [PRE_CE" & _
                "PH_CODE_FK] IS NULL) OR ([PRE_CEPH_CODE_FK] = @Original_PRE_CEPH_CODE_FK)) AND (" & _
                "(@IsNull_PRE_CATC_CODE_FK = 1 AND [PRE_CATC_CODE_FK] IS NULL) OR ([PRE_CATC_CODE" & _
                "_FK] = @Original_PRE_CATC_CODE_FK)) AND ((@IsNull_PRE_NATUCD_CDF_CODE_FK = 1 AND" & _
                " [PRE_NATUCD_CDF_CODE_FK] IS NULL) OR ([PRE_NATUCD_CDF_CODE_FK] = @Original_PRE_" & _
                "NATUCD_CDF_CODE_FK)) AND ((@IsNull_PRE_NATUCD_CDF_NUM_FK = 1 AND [PRE_NATUCD_CDF" & _
                "_NUM_FK] IS NULL) OR ([PRE_NATUCD_CDF_NUM_FK] = @Original_PRE_NATUCD_CDF_NUM_FK)" & _
                ") AND ((@IsNull_PRE_DATEJOCIP = 1 AND [PRE_DATEJOCIP] IS NULL) OR ([PRE_DATEJOCI" & _
                "P] = @Original_PRE_DATEJOCIP)) AND ((@IsNull_PRE_AGRCOLL = 1 AND [PRE_AGRCOLL] I" & _
                "S NULL) OR ([PRE_AGRCOLL] = @Original_PRE_AGRCOLL)) AND ((@IsNull_PRE_DATEJOCOLL" & _
                " = 1 AND [PRE_DATEJOCOLL] IS NULL) OR ([PRE_DATEJOCOLL] = @Original_PRE_DATEJOCO" & _
                "LL)) AND ((@IsNull_PRE_DATEFINCOLL = 1 AND [PRE_DATEFINCOLL] IS NULL) OR ([PRE_D" & _
                "ATEFINCOLL] = @Original_PRE_DATEFINCOLL)) AND ((@IsNull_PRE_DATE_APPLIFINCOLL = " & _
                "1 AND [PRE_DATE_APPLIFINCOLL] IS NULL) OR ([PRE_DATE_APPLIFINCOLL] = @Original_P" & _
                "RE_DATE_APPLIFINCOLL)) AND ((@IsNull_PRE_PARTSTATUT = 1 AND [PRE_PARTSTATUT] IS " & _
                "NULL) OR ([PRE_PARTSTATUT] = @Original_PRE_PARTSTATUT)) AND ((@IsNull_PRE_TSS_TE" & _
                "XTE = 1 AND [PRE_TSS_TEXTE] IS NULL) OR ([PRE_TSS_TEXTE] = @Original_PRE_TSS_TEX" & _
                "TE)) AND ((@IsNull_PRE_LIB_CEPS = 1 AND [PRE_LIB_CEPS] IS NULL) OR ([PRE_LIB_CEP" & _
                "S] = @Original_PRE_LIB_CEPS)) AND ((@IsNull_PRE_ADMIN = 1 AND [PRE_ADMIN] IS NUL" & _
                "L) OR ([PRE_ADMIN] = @Original_PRE_ADMIN)) AND ([PRE_DATECR] = @Original_PRE_DAT" & _
                "ECR) AND ((@IsNull_PRE_DATEMJ = 1 AND [PRE_DATEMJ] IS NULL) OR ([PRE_DATEMJ] = @" & _
                "Original_PRE_DATEMJ)))"
            Me._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_PRE_CODE_PK", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_CODE_PK", System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_PRE_SP_CODE_FK", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_SP_CODE_FK", System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IsNull_PRE_EAN_REF", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_EAN_REF", System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_PRE_EAN_REF", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_EAN_REF", System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IsNull_PRE_NBUNITE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_NBUNITE", System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_PRE_NBUNITE", System.Data.SqlDbType.SmallInt, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_NBUNITE", System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IsNull_PRE_CDF_UP_CODE_FK", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_CDF_UP_CODE_FK", System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_PRE_CDF_UP_CODE_FK", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_CDF_UP_CODE_FK", System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IsNull_PRE_CACDT_TEXTE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_CACDT_TEXTE", System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_PRE_CACDT_TEXTE", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_CACDT_TEXTE", System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_PRE_CDF_RH_CODE_FK", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_CDF_RH_CODE_FK", System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IsNull_PRE_CDF_LI_CODE_FK", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_CDF_LI_CODE_FK", System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_PRE_CDF_LI_CODE_FK", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_CDF_LI_CODE_FK", System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IsNull_PRE_ETAT_COMMER", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_ETAT_COMMER", System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_PRE_ETAT_COMMER", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_ETAT_COMMER", System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IsNull_PRE_DATECOMMER", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_DATECOMMER", System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_PRE_DATECOMMER", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_DATECOMMER", System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IsNull_PRE_DATESUP", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_DATESUP", System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_PRE_DATESUP", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_DATESUP", System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IsNull_PRE_CDF_PU_CODE_FK", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_CDF_PU_CODE_FK", System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_PRE_CDF_PU_CODE_FK", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_CDF_PU_CODE_FK", System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IsNull_PRE_CEPH_CODE_FK", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_CEPH_CODE_FK", System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_PRE_CEPH_CODE_FK", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_CEPH_CODE_FK", System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IsNull_PRE_CATC_CODE_FK", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_CATC_CODE_FK", System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_PRE_CATC_CODE_FK", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_CATC_CODE_FK", System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IsNull_PRE_NATUCD_CDF_CODE_FK", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_NATUCD_CDF_CODE_FK", System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_PRE_NATUCD_CDF_CODE_FK", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_NATUCD_CDF_CODE_FK", System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IsNull_PRE_NATUCD_CDF_NUM_FK", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_NATUCD_CDF_NUM_FK", System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_PRE_NATUCD_CDF_NUM_FK", System.Data.SqlDbType.[Char], 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_NATUCD_CDF_NUM_FK", System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IsNull_PRE_DATEJOCIP", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_DATEJOCIP", System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_PRE_DATEJOCIP", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_DATEJOCIP", System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IsNull_PRE_AGRCOLL", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_AGRCOLL", System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_PRE_AGRCOLL", System.Data.SqlDbType.[Char], 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_AGRCOLL", System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IsNull_PRE_DATEJOCOLL", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_DATEJOCOLL", System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_PRE_DATEJOCOLL", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_DATEJOCOLL", System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IsNull_PRE_DATEFINCOLL", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_DATEFINCOLL", System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_PRE_DATEFINCOLL", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_DATEFINCOLL", System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IsNull_PRE_DATE_APPLIFINCOLL", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_DATE_APPLIFINCOLL", System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_PRE_DATE_APPLIFINCOLL", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_DATE_APPLIFINCOLL", System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IsNull_PRE_PARTSTATUT", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_PARTSTATUT", System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_PRE_PARTSTATUT", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_PARTSTATUT", System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IsNull_PRE_TSS_TEXTE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_TSS_TEXTE", System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_PRE_TSS_TEXTE", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_TSS_TEXTE", System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IsNull_PRE_LIB_CEPS", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_LIB_CEPS", System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_PRE_LIB_CEPS", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_LIB_CEPS", System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IsNull_PRE_ADMIN", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_ADMIN", System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_PRE_ADMIN", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_ADMIN", System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_PRE_DATECR", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_DATECR", System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IsNull_PRE_DATEMJ", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_DATEMJ", System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_PRE_DATEMJ", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_DATEMJ", System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New System.Data.SqlClient.SqlCommand
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [theriaque].[PRE_PRESENTATION] ([PRE_CODE_PK], [PRE_SP_CODE_FK], [PRE" & _
                "_EAN_REF], [PRE_NBUNITE], [PRE_CDF_UP_CODE_FK], [PRE_CACDT_TEXTE], [PRE_CDF_RH_C" & _
                "ODE_FK], [PRE_CDF_LI_CODE_FK], [PRE_ETAT_COMMER], [PRE_DATECOMMER], [PRE_DATESUP" & _
                "], [PRE_CDF_PU_CODE_FK], [PRE_CEPH_CODE_FK], [PRE_CATC_CODE_FK], [PRE_NATUCD_CDF" & _
                "_CODE_FK], [PRE_NATUCD_CDF_NUM_FK], [PRE_DATEJOCIP], [PRE_AGRCOLL], [PRE_DATEJOC" & _
                "OLL], [PRE_DATEFINCOLL], [PRE_DATE_APPLIFINCOLL], [PRE_PARTSTATUT], [PRE_TSS_TEX" & _
                "TE], [PRE_CONSAPOUV], [PRE_LIB_CEPS], [PRE_ADMIN], [PRE_DATECR], [PRE_DATEMJ]) V" & _
                "ALUES (@PRE_CODE_PK, @PRE_SP_CODE_FK, @PRE_EAN_REF, @PRE_NBUNITE, @PRE_CDF_UP_CO" & _
                "DE_FK, @PRE_CACDT_TEXTE, @PRE_CDF_RH_CODE_FK, @PRE_CDF_LI_CODE_FK, @PRE_ETAT_COM" & _
                "MER, @PRE_DATECOMMER, @PRE_DATESUP, @PRE_CDF_PU_CODE_FK, @PRE_CEPH_CODE_FK, @PRE" & _
                "_CATC_CODE_FK, @PRE_NATUCD_CDF_CODE_FK, @PRE_NATUCD_CDF_NUM_FK, @PRE_DATEJOCIP, " & _
                "@PRE_AGRCOLL, @PRE_DATEJOCOLL, @PRE_DATEFINCOLL, @PRE_DATE_APPLIFINCOLL, @PRE_PA" & _
                "RTSTATUT, @PRE_TSS_TEXTE, @PRE_CONSAPOUV, @PRE_LIB_CEPS, @PRE_ADMIN, @PRE_DATECR" & _
                ", @PRE_DATEMJ);" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "SELECT PRE_CODE_PK, PRE_SP_CODE_FK, PRE_EAN_REF, PRE_NBUNITE, P" & _
                "RE_CDF_UP_CODE_FK, PRE_CACDT_TEXTE, PRE_CDF_RH_CODE_FK, PRE_CDF_LI_CODE_FK, PRE_" & _
                "ETAT_COMMER, PRE_DATECOMMER, PRE_DATESUP, PRE_CDF_PU_CODE_FK, PRE_CEPH_CODE_FK, " & _
                "PRE_CATC_CODE_FK, PRE_NATUCD_CDF_CODE_FK, PRE_NATUCD_CDF_NUM_FK, PRE_DATEJOCIP, " & _
                "PRE_AGRCOLL, PRE_DATEJOCOLL, PRE_DATEFINCOLL, PRE_DATE_APPLIFINCOLL, PRE_PARTSTA" & _
                "TUT, PRE_TSS_TEXTE, PRE_CONSAPOUV, PRE_LIB_CEPS, PRE_ADMIN, PRE_DATECR, PRE_DATE" & _
                "MJ FROM theriaque.PRE_PRESENTATION WHERE (PRE_CODE_PK = @PRE_CODE_PK)"
            Me._adapter.InsertCommand.CommandType = System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PRE_CODE_PK", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_CODE_PK", System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PRE_SP_CODE_FK", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_SP_CODE_FK", System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PRE_EAN_REF", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_EAN_REF", System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PRE_NBUNITE", System.Data.SqlDbType.SmallInt, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_NBUNITE", System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PRE_CDF_UP_CODE_FK", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_CDF_UP_CODE_FK", System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PRE_CACDT_TEXTE", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_CACDT_TEXTE", System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PRE_CDF_RH_CODE_FK", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_CDF_RH_CODE_FK", System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PRE_CDF_LI_CODE_FK", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_CDF_LI_CODE_FK", System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PRE_ETAT_COMMER", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_ETAT_COMMER", System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PRE_DATECOMMER", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_DATECOMMER", System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PRE_DATESUP", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_DATESUP", System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PRE_CDF_PU_CODE_FK", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_CDF_PU_CODE_FK", System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PRE_CEPH_CODE_FK", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_CEPH_CODE_FK", System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PRE_CATC_CODE_FK", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_CATC_CODE_FK", System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PRE_NATUCD_CDF_CODE_FK", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_NATUCD_CDF_CODE_FK", System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PRE_NATUCD_CDF_NUM_FK", System.Data.SqlDbType.[Char], 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_NATUCD_CDF_NUM_FK", System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PRE_DATEJOCIP", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_DATEJOCIP", System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PRE_AGRCOLL", System.Data.SqlDbType.[Char], 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_AGRCOLL", System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PRE_DATEJOCOLL", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_DATEJOCOLL", System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PRE_DATEFINCOLL", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_DATEFINCOLL", System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PRE_DATE_APPLIFINCOLL", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_DATE_APPLIFINCOLL", System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PRE_PARTSTATUT", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_PARTSTATUT", System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PRE_TSS_TEXTE", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_TSS_TEXTE", System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PRE_CONSAPOUV", System.Data.SqlDbType.Text, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_CONSAPOUV", System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PRE_LIB_CEPS", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_LIB_CEPS", System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PRE_ADMIN", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_ADMIN", System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PRE_DATECR", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_DATECR", System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PRE_DATEMJ", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_DATEMJ", System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New System.Data.SqlClient.SqlCommand
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [theriaque].[PRE_PRESENTATION] SET [PRE_CODE_PK] = @PRE_CODE_PK, [PRE_SP_C" & _
                "ODE_FK] = @PRE_SP_CODE_FK, [PRE_EAN_REF] = @PRE_EAN_REF, [PRE_NBUNITE] = @PRE_NB" & _
                "UNITE, [PRE_CDF_UP_CODE_FK] = @PRE_CDF_UP_CODE_FK, [PRE_CACDT_TEXTE] = @PRE_CACD" & _
                "T_TEXTE, [PRE_CDF_RH_CODE_FK] = @PRE_CDF_RH_CODE_FK, [PRE_CDF_LI_CODE_FK] = @PRE" & _
                "_CDF_LI_CODE_FK, [PRE_ETAT_COMMER] = @PRE_ETAT_COMMER, [PRE_DATECOMMER] = @PRE_D" & _
                "ATECOMMER, [PRE_DATESUP] = @PRE_DATESUP, [PRE_CDF_PU_CODE_FK] = @PRE_CDF_PU_CODE" & _
                "_FK, [PRE_CEPH_CODE_FK] = @PRE_CEPH_CODE_FK, [PRE_CATC_CODE_FK] = @PRE_CATC_CODE" & _
                "_FK, [PRE_NATUCD_CDF_CODE_FK] = @PRE_NATUCD_CDF_CODE_FK, [PRE_NATUCD_CDF_NUM_FK]" & _
                " = @PRE_NATUCD_CDF_NUM_FK, [PRE_DATEJOCIP] = @PRE_DATEJOCIP, [PRE_AGRCOLL] = @PR" & _
                "E_AGRCOLL, [PRE_DATEJOCOLL] = @PRE_DATEJOCOLL, [PRE_DATEFINCOLL] = @PRE_DATEFINC" & _
                "OLL, [PRE_DATE_APPLIFINCOLL] = @PRE_DATE_APPLIFINCOLL, [PRE_PARTSTATUT] = @PRE_P" & _
                "ARTSTATUT, [PRE_TSS_TEXTE] = @PRE_TSS_TEXTE, [PRE_CONSAPOUV] = @PRE_CONSAPOUV, [" & _
                "PRE_LIB_CEPS] = @PRE_LIB_CEPS, [PRE_ADMIN] = @PRE_ADMIN, [PRE_DATECR] = @PRE_DAT" & _
                "ECR, [PRE_DATEMJ] = @PRE_DATEMJ WHERE (([PRE_CODE_PK] = @Original_PRE_CODE_PK) A" & _
                "ND ([PRE_SP_CODE_FK] = @Original_PRE_SP_CODE_FK) AND ((@IsNull_PRE_EAN_REF = 1 A" & _
                "ND [PRE_EAN_REF] IS NULL) OR ([PRE_EAN_REF] = @Original_PRE_EAN_REF)) AND ((@IsN" & _
                "ull_PRE_NBUNITE = 1 AND [PRE_NBUNITE] IS NULL) OR ([PRE_NBUNITE] = @Original_PRE" & _
                "_NBUNITE)) AND ((@IsNull_PRE_CDF_UP_CODE_FK = 1 AND [PRE_CDF_UP_CODE_FK] IS NULL" & _
                ") OR ([PRE_CDF_UP_CODE_FK] = @Original_PRE_CDF_UP_CODE_FK)) AND ((@IsNull_PRE_CA" & _
                "CDT_TEXTE = 1 AND [PRE_CACDT_TEXTE] IS NULL) OR ([PRE_CACDT_TEXTE] = @Original_P" & _
                "RE_CACDT_TEXTE)) AND ([PRE_CDF_RH_CODE_FK] = @Original_PRE_CDF_RH_CODE_FK) AND (" & _
                "(@IsNull_PRE_CDF_LI_CODE_FK = 1 AND [PRE_CDF_LI_CODE_FK] IS NULL) OR ([PRE_CDF_L" & _
                "I_CODE_FK] = @Original_PRE_CDF_LI_CODE_FK)) AND ((@IsNull_PRE_ETAT_COMMER = 1 AN" & _
                "D [PRE_ETAT_COMMER] IS NULL) OR ([PRE_ETAT_COMMER] = @Original_PRE_ETAT_COMMER))" & _
                " AND ((@IsNull_PRE_DATECOMMER = 1 AND [PRE_DATECOMMER] IS NULL) OR ([PRE_DATECOM" & _
                "MER] = @Original_PRE_DATECOMMER)) AND ((@IsNull_PRE_DATESUP = 1 AND [PRE_DATESUP" & _
                "] IS NULL) OR ([PRE_DATESUP] = @Original_PRE_DATESUP)) AND ((@IsNull_PRE_CDF_PU_" & _
                "CODE_FK = 1 AND [PRE_CDF_PU_CODE_FK] IS NULL) OR ([PRE_CDF_PU_CODE_FK] = @Origin" & _
                "al_PRE_CDF_PU_CODE_FK)) AND ((@IsNull_PRE_CEPH_CODE_FK = 1 AND [PRE_CEPH_CODE_FK" & _
                "] IS NULL) OR ([PRE_CEPH_CODE_FK] = @Original_PRE_CEPH_CODE_FK)) AND ((@IsNull_P" & _
                "RE_CATC_CODE_FK = 1 AND [PRE_CATC_CODE_FK] IS NULL) OR ([PRE_CATC_CODE_FK] = @Or" & _
                "iginal_PRE_CATC_CODE_FK)) AND ((@IsNull_PRE_NATUCD_CDF_CODE_FK = 1 AND [PRE_NATU" & _
                "CD_CDF_CODE_FK] IS NULL) OR ([PRE_NATUCD_CDF_CODE_FK] = @Original_PRE_NATUCD_CDF" & _
                "_CODE_FK)) AND ((@IsNull_PRE_NATUCD_CDF_NUM_FK = 1 AND [PRE_NATUCD_CDF_NUM_FK] I" & _
                "S NULL) OR ([PRE_NATUCD_CDF_NUM_FK] = @Original_PRE_NATUCD_CDF_NUM_FK)) AND ((@I" & _
                "sNull_PRE_DATEJOCIP = 1 AND [PRE_DATEJOCIP] IS NULL) OR ([PRE_DATEJOCIP] = @Orig" & _
                "inal_PRE_DATEJOCIP)) AND ((@IsNull_PRE_AGRCOLL = 1 AND [PRE_AGRCOLL] IS NULL) OR" & _
                " ([PRE_AGRCOLL] = @Original_PRE_AGRCOLL)) AND ((@IsNull_PRE_DATEJOCOLL = 1 AND [" & _
                "PRE_DATEJOCOLL] IS NULL) OR ([PRE_DATEJOCOLL] = @Original_PRE_DATEJOCOLL)) AND (" & _
                "(@IsNull_PRE_DATEFINCOLL = 1 AND [PRE_DATEFINCOLL] IS NULL) OR ([PRE_DATEFINCOLL" & _
                "] = @Original_PRE_DATEFINCOLL)) AND ((@IsNull_PRE_DATE_APPLIFINCOLL = 1 AND [PRE" & _
                "_DATE_APPLIFINCOLL] IS NULL) OR ([PRE_DATE_APPLIFINCOLL] = @Original_PRE_DATE_AP" & _
                "PLIFINCOLL)) AND ((@IsNull_PRE_PARTSTATUT = 1 AND [PRE_PARTSTATUT] IS NULL) OR (" & _
                "[PRE_PARTSTATUT] = @Original_PRE_PARTSTATUT)) AND ((@IsNull_PRE_TSS_TEXTE = 1 AN" & _
                "D [PRE_TSS_TEXTE] IS NULL) OR ([PRE_TSS_TEXTE] = @Original_PRE_TSS_TEXTE)) AND (" & _
                "(@IsNull_PRE_LIB_CEPS = 1 AND [PRE_LIB_CEPS] IS NULL) OR ([PRE_LIB_CEPS] = @Orig" & _
                "inal_PRE_LIB_CEPS)) AND ((@IsNull_PRE_ADMIN = 1 AND [PRE_ADMIN] IS NULL) OR ([PR" & _
                "E_ADMIN] = @Original_PRE_ADMIN)) AND ([PRE_DATECR] = @Original_PRE_DATECR) AND (" & _
                "(@IsNull_PRE_DATEMJ = 1 AND [PRE_DATEMJ] IS NULL) OR ([PRE_DATEMJ] = @Original_P" & _
                "RE_DATEMJ)));" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "SELECT PRE_CODE_PK, PRE_SP_CODE_FK, PRE_EAN_REF, PRE_NBUNITE, PRE" & _
                "_CDF_UP_CODE_FK, PRE_CACDT_TEXTE, PRE_CDF_RH_CODE_FK, PRE_CDF_LI_CODE_FK, PRE_ET" & _
                "AT_COMMER, PRE_DATECOMMER, PRE_DATESUP, PRE_CDF_PU_CODE_FK, PRE_CEPH_CODE_FK, PR" & _
                "E_CATC_CODE_FK, PRE_NATUCD_CDF_CODE_FK, PRE_NATUCD_CDF_NUM_FK, PRE_DATEJOCIP, PR" & _
                "E_AGRCOLL, PRE_DATEJOCOLL, PRE_DATEFINCOLL, PRE_DATE_APPLIFINCOLL, PRE_PARTSTATU" & _
                "T, PRE_TSS_TEXTE, PRE_CONSAPOUV, PRE_LIB_CEPS, PRE_ADMIN, PRE_DATECR, PRE_DATEMJ" & _
                " FROM theriaque.PRE_PRESENTATION WHERE (PRE_CODE_PK = @PRE_CODE_PK)"
            Me._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PRE_CODE_PK", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_CODE_PK", System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PRE_SP_CODE_FK", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_SP_CODE_FK", System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PRE_EAN_REF", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_EAN_REF", System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PRE_NBUNITE", System.Data.SqlDbType.SmallInt, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_NBUNITE", System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PRE_CDF_UP_CODE_FK", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_CDF_UP_CODE_FK", System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PRE_CACDT_TEXTE", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_CACDT_TEXTE", System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PRE_CDF_RH_CODE_FK", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_CDF_RH_CODE_FK", System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PRE_CDF_LI_CODE_FK", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_CDF_LI_CODE_FK", System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PRE_ETAT_COMMER", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_ETAT_COMMER", System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PRE_DATECOMMER", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_DATECOMMER", System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PRE_DATESUP", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_DATESUP", System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PRE_CDF_PU_CODE_FK", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_CDF_PU_CODE_FK", System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PRE_CEPH_CODE_FK", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_CEPH_CODE_FK", System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PRE_CATC_CODE_FK", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_CATC_CODE_FK", System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PRE_NATUCD_CDF_CODE_FK", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_NATUCD_CDF_CODE_FK", System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PRE_NATUCD_CDF_NUM_FK", System.Data.SqlDbType.[Char], 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_NATUCD_CDF_NUM_FK", System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PRE_DATEJOCIP", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_DATEJOCIP", System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PRE_AGRCOLL", System.Data.SqlDbType.[Char], 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_AGRCOLL", System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PRE_DATEJOCOLL", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_DATEJOCOLL", System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PRE_DATEFINCOLL", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_DATEFINCOLL", System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PRE_DATE_APPLIFINCOLL", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_DATE_APPLIFINCOLL", System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PRE_PARTSTATUT", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_PARTSTATUT", System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PRE_TSS_TEXTE", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_TSS_TEXTE", System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PRE_CONSAPOUV", System.Data.SqlDbType.Text, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_CONSAPOUV", System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PRE_LIB_CEPS", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_LIB_CEPS", System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PRE_ADMIN", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_ADMIN", System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PRE_DATECR", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_DATECR", System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PRE_DATEMJ", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_DATEMJ", System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_PRE_CODE_PK", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_CODE_PK", System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_PRE_SP_CODE_FK", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_SP_CODE_FK", System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IsNull_PRE_EAN_REF", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_EAN_REF", System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_PRE_EAN_REF", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_EAN_REF", System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IsNull_PRE_NBUNITE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_NBUNITE", System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_PRE_NBUNITE", System.Data.SqlDbType.SmallInt, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_NBUNITE", System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IsNull_PRE_CDF_UP_CODE_FK", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_CDF_UP_CODE_FK", System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_PRE_CDF_UP_CODE_FK", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_CDF_UP_CODE_FK", System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IsNull_PRE_CACDT_TEXTE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_CACDT_TEXTE", System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_PRE_CACDT_TEXTE", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_CACDT_TEXTE", System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_PRE_CDF_RH_CODE_FK", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_CDF_RH_CODE_FK", System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IsNull_PRE_CDF_LI_CODE_FK", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_CDF_LI_CODE_FK", System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_PRE_CDF_LI_CODE_FK", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_CDF_LI_CODE_FK", System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IsNull_PRE_ETAT_COMMER", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_ETAT_COMMER", System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_PRE_ETAT_COMMER", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_ETAT_COMMER", System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IsNull_PRE_DATECOMMER", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_DATECOMMER", System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_PRE_DATECOMMER", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_DATECOMMER", System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IsNull_PRE_DATESUP", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_DATESUP", System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_PRE_DATESUP", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_DATESUP", System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IsNull_PRE_CDF_PU_CODE_FK", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_CDF_PU_CODE_FK", System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_PRE_CDF_PU_CODE_FK", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_CDF_PU_CODE_FK", System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IsNull_PRE_CEPH_CODE_FK", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_CEPH_CODE_FK", System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_PRE_CEPH_CODE_FK", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_CEPH_CODE_FK", System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IsNull_PRE_CATC_CODE_FK", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_CATC_CODE_FK", System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_PRE_CATC_CODE_FK", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_CATC_CODE_FK", System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IsNull_PRE_NATUCD_CDF_CODE_FK", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_NATUCD_CDF_CODE_FK", System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_PRE_NATUCD_CDF_CODE_FK", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_NATUCD_CDF_CODE_FK", System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IsNull_PRE_NATUCD_CDF_NUM_FK", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_NATUCD_CDF_NUM_FK", System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_PRE_NATUCD_CDF_NUM_FK", System.Data.SqlDbType.[Char], 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_NATUCD_CDF_NUM_FK", System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IsNull_PRE_DATEJOCIP", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_DATEJOCIP", System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_PRE_DATEJOCIP", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_DATEJOCIP", System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IsNull_PRE_AGRCOLL", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_AGRCOLL", System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_PRE_AGRCOLL", System.Data.SqlDbType.[Char], 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_AGRCOLL", System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IsNull_PRE_DATEJOCOLL", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_DATEJOCOLL", System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_PRE_DATEJOCOLL", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_DATEJOCOLL", System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IsNull_PRE_DATEFINCOLL", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_DATEFINCOLL", System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_PRE_DATEFINCOLL", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_DATEFINCOLL", System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IsNull_PRE_DATE_APPLIFINCOLL", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_DATE_APPLIFINCOLL", System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_PRE_DATE_APPLIFINCOLL", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_DATE_APPLIFINCOLL", System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IsNull_PRE_PARTSTATUT", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_PARTSTATUT", System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_PRE_PARTSTATUT", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_PARTSTATUT", System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IsNull_PRE_TSS_TEXTE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_TSS_TEXTE", System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_PRE_TSS_TEXTE", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_TSS_TEXTE", System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IsNull_PRE_LIB_CEPS", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_LIB_CEPS", System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_PRE_LIB_CEPS", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_LIB_CEPS", System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IsNull_PRE_ADMIN", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_ADMIN", System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_PRE_ADMIN", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_ADMIN", System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_PRE_DATECR", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_DATECR", System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IsNull_PRE_DATEMJ", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_DATEMJ", System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_PRE_DATEMJ", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "PRE_DATEMJ", System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
        End Sub

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Private Sub InitConnection()
            Me._connection = New System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Theriaque.My.Settings.ConnectionString
        End Sub

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Private Sub InitCommandCollection()
            Me._commandCollection = New System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT PRE_CODE_PK, PRE_SP_CODE_FK, PRE_EAN_REF, PRE_NBUNITE, PRE_CDF_UP_CODE_FK," & _
                " PRE_CACDT_TEXTE, PRE_CDF_RH_CODE_FK, PRE_CDF_LI_CODE_FK, PRE_ETAT_COMMER, PRE_D" & _
                "ATECOMMER, PRE_DATESUP, PRE_CDF_PU_CODE_FK, PRE_CEPH_CODE_FK, PRE_CATC_CODE_FK, " & _
                "PRE_NATUCD_CDF_CODE_FK, PRE_NATUCD_CDF_NUM_FK, PRE_DATEJOCIP, PRE_AGRCOLL, PRE_D" & _
                "ATEJOCOLL, PRE_DATEFINCOLL, PRE_DATE_APPLIFINCOLL, PRE_PARTSTATUT, PRE_TSS_TEXTE" & _
                ", PRE_CONSAPOUV, PRE_LIB_CEPS, PRE_ADMIN, PRE_DATECR, PRE_DATEMJ FROM theriaque." & _
                "PRE_PRESENTATION"
            Me._commandCollection(0).CommandType = System.Data.CommandType.Text
            Me._commandCollection(1) = New System.Data.SqlClient.SqlCommand
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT PRE_CODE_PK, PRE_SP_CODE_FK, PRE_EAN_REF, PRE_NBUNITE, PRE_CDF_UP_CODE_FK," & _
                " PRE_CACDT_TEXTE, PRE_CDF_RH_CODE_FK, PRE_CDF_LI_CODE_FK, PRE_ETAT_COMMER, PRE_D" & _
                "ATECOMMER, PRE_DATESUP, PRE_CDF_PU_CODE_FK, PRE_CEPH_CODE_FK, PRE_CATC_CODE_FK, " & _
                "PRE_NATUCD_CDF_CODE_FK, PRE_NATUCD_CDF_NUM_FK, PRE_DATEJOCIP, PRE_AGRCOLL, PRE_D" & _
                "ATEJOCOLL, PRE_DATEFINCOLL, PRE_DATE_APPLIFINCOLL, PRE_PARTSTATUT, PRE_TSS_TEXTE" & _
                ", PRE_CONSAPOUV, PRE_LIB_CEPS, PRE_ADMIN, PRE_DATECR, PRE_DATEMJ FROM theriaque." & _
                "PRE_PRESENTATION" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "WHERE PRE_CODE_PK = @PRE_CODE_PK"
            Me._commandCollection(1).CommandType = System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New System.Data.SqlClient.SqlParameter("@PRE_CODE_PK", System.Data.SqlDbType.VarChar, 10, System.Data.ParameterDirection.Input, 0, 0, "PRE_CODE_PK", System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
        End Sub

        <System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, True)> _
        Public Overridable Overloads Function Fill(ByVal dataTable As dsTheriaque_GrosseRequete.PRE_PRESENTATIONDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.[Select], True)> _
        Public Overridable Overloads Function GetData() As dsTheriaque_GrosseRequete.PRE_PRESENTATIONDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsTheriaque_GrosseRequete.PRE_PRESENTATIONDataTable = New dsTheriaque_GrosseRequete.PRE_PRESENTATIONDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function

        <System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, False)> _
        Public Overridable Overloads Function FillByCode(ByVal dataTable As dsTheriaque_GrosseRequete.PRE_PRESENTATIONDataTable, ByVal PRE_CODE_PK As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (PRE_CODE_PK Is Nothing) Then
                Throw New System.ArgumentNullException("PRE_CODE_PK")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(PRE_CODE_PK, String)
            End If
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.[Select], False)> _
        Public Overridable Overloads Function GetDataByCode(ByVal PRE_CODE_PK As String) As dsTheriaque_GrosseRequete.PRE_PRESENTATIONDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (PRE_CODE_PK Is Nothing) Then
                Throw New System.ArgumentNullException("PRE_CODE_PK")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(PRE_CODE_PK, String)
            End If
            Dim dataTable As dsTheriaque_GrosseRequete.PRE_PRESENTATIONDataTable = New dsTheriaque_GrosseRequete.PRE_PRESENTATIONDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function

        <System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataTable As dsTheriaque_GrosseRequete.PRE_PRESENTATIONDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function

        <System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataSet As dsTheriaque_GrosseRequete) As Integer
            Return Me.Adapter.Update(dataSet, "PRE_PRESENTATION")
        End Function

        <System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataRow As System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New System.Data.DataRow() {dataRow})
        End Function

        <System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataRows() As System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function

        <System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, True)> _
        Public Overridable Overloads Function Delete( _
                    ByVal Original_PRE_CODE_PK As String, _
                    ByVal Original_PRE_SP_CODE_FK As Integer, _
                    ByVal Original_PRE_EAN_REF As String, _
                    ByVal Original_PRE_NBUNITE As System.Nullable(Of Short), _
                    ByVal Original_PRE_CDF_UP_CODE_FK As String, _
                    ByVal Original_PRE_CACDT_TEXTE As String, _
                    ByVal Original_PRE_CDF_RH_CODE_FK As String, _
                    ByVal Original_PRE_CDF_LI_CODE_FK As String, _
                    ByVal Original_PRE_ETAT_COMMER As String, _
                    ByVal Original_PRE_DATECOMMER As System.Nullable(Of Date), _
                    ByVal Original_PRE_DATESUP As System.Nullable(Of Date), _
                    ByVal Original_PRE_CDF_PU_CODE_FK As String, _
                    ByVal Original_PRE_CEPH_CODE_FK As String, _
                    ByVal Original_PRE_CATC_CODE_FK As String, _
                    ByVal Original_PRE_NATUCD_CDF_CODE_FK As String, _
                    ByVal Original_PRE_NATUCD_CDF_NUM_FK As String, _
                    ByVal Original_PRE_DATEJOCIP As System.Nullable(Of Date), _
                    ByVal Original_PRE_AGRCOLL As String, _
                    ByVal Original_PRE_DATEJOCOLL As System.Nullable(Of Date), _
                    ByVal Original_PRE_DATEFINCOLL As System.Nullable(Of Date), _
                    ByVal Original_PRE_DATE_APPLIFINCOLL As System.Nullable(Of Date), _
                    ByVal Original_PRE_PARTSTATUT As String, _
                    ByVal Original_PRE_TSS_TEXTE As String, _
                    ByVal Original_PRE_LIB_CEPS As String, _
                    ByVal Original_PRE_ADMIN As String, _
                    ByVal Original_PRE_DATECR As Date, _
                    ByVal Original_PRE_DATEMJ As System.Nullable(Of Date)) As Integer
            If (Original_PRE_CODE_PK Is Nothing) Then
                Throw New System.ArgumentNullException("Original_PRE_CODE_PK")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_PRE_CODE_PK, String)
            End If
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_PRE_SP_CODE_FK, Integer)
            If (Original_PRE_EAN_REF Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_PRE_EAN_REF, String)
            End If
            If (Original_PRE_NBUNITE.HasValue = True) Then
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_PRE_NBUNITE.Value, Short)
            Else
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = System.DBNull.Value
            End If
            If (Original_PRE_CDF_UP_CODE_FK Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(7).Value = System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(Original_PRE_CDF_UP_CODE_FK, String)
            End If
            If (Original_PRE_CACDT_TEXTE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(9).Value = System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(Original_PRE_CACDT_TEXTE, String)
            End If
            If (Original_PRE_CDF_RH_CODE_FK Is Nothing) Then
                Throw New System.ArgumentNullException("Original_PRE_CDF_RH_CODE_FK")
            Else
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_PRE_CDF_RH_CODE_FK, String)
            End If
            If (Original_PRE_CDF_LI_CODE_FK Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_PRE_CDF_LI_CODE_FK, String)
            End If
            If (Original_PRE_ETAT_COMMER Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_PRE_ETAT_COMMER, String)
            End If
            If (Original_PRE_DATECOMMER.HasValue = True) Then
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_PRE_DATECOMMER.Value, Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = System.DBNull.Value
            End If
            If (Original_PRE_DATESUP.HasValue = True) Then
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(Original_PRE_DATESUP.Value, Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = System.DBNull.Value
            End If
            If (Original_PRE_CDF_PU_CODE_FK Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(Original_PRE_CDF_PU_CODE_FK, String)
            End If
            If (Original_PRE_CEPH_CODE_FK Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(Original_PRE_CEPH_CODE_FK, String)
            End If
            If (Original_PRE_CATC_CODE_FK Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(Original_PRE_CATC_CODE_FK, String)
            End If
            If (Original_PRE_NATUCD_CDF_CODE_FK Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(Original_PRE_NATUCD_CDF_CODE_FK, String)
            End If
            If (Original_PRE_NATUCD_CDF_NUM_FK Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(Original_PRE_NATUCD_CDF_NUM_FK, String)
            End If
            If (Original_PRE_DATEJOCIP.HasValue = True) Then
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(Original_PRE_DATEJOCIP.Value, Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = System.DBNull.Value
            End If
            If (Original_PRE_AGRCOLL Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(32).Value = System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(Original_PRE_AGRCOLL, String)
            End If
            If (Original_PRE_DATEJOCOLL.HasValue = True) Then
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(34).Value = CType(Original_PRE_DATEJOCOLL.Value, Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(34).Value = System.DBNull.Value
            End If
            If (Original_PRE_DATEFINCOLL.HasValue = True) Then
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(36).Value = CType(Original_PRE_DATEFINCOLL.Value, Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(36).Value = System.DBNull.Value
            End If
            If (Original_PRE_DATE_APPLIFINCOLL.HasValue = True) Then
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(38).Value = CType(Original_PRE_DATE_APPLIFINCOLL.Value, Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(38).Value = System.DBNull.Value
            End If
            If (Original_PRE_PARTSTATUT Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(40).Value = System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(40).Value = CType(Original_PRE_PARTSTATUT, String)
            End If
            If (Original_PRE_TSS_TEXTE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(42).Value = System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(42).Value = CType(Original_PRE_TSS_TEXTE, String)
            End If
            If (Original_PRE_LIB_CEPS Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(44).Value = System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(44).Value = CType(Original_PRE_LIB_CEPS, String)
            End If
            If (Original_PRE_ADMIN Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(46).Value = System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(46).Value = CType(Original_PRE_ADMIN, String)
            End If
            Me.Adapter.DeleteCommand.Parameters(47).Value = CType(Original_PRE_DATECR, Date)
            If (Original_PRE_DATEMJ.HasValue = True) Then
                Me.Adapter.DeleteCommand.Parameters(48).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(49).Value = CType(Original_PRE_DATEMJ.Value, Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(48).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(49).Value = System.DBNull.Value
            End If
            Dim previousConnectionState As System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And System.Data.ConnectionState.Open) _
                        <> System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open()
            End If
            Try
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close()
                End If
            End Try
        End Function

        <System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, True)> _
        Public Overridable Overloads Function Insert( _
                    ByVal PRE_CODE_PK As String, _
                    ByVal PRE_SP_CODE_FK As Integer, _
                    ByVal PRE_EAN_REF As String, _
                    ByVal PRE_NBUNITE As System.Nullable(Of Short), _
                    ByVal PRE_CDF_UP_CODE_FK As String, _
                    ByVal PRE_CACDT_TEXTE As String, _
                    ByVal PRE_CDF_RH_CODE_FK As String, _
                    ByVal PRE_CDF_LI_CODE_FK As String, _
                    ByVal PRE_ETAT_COMMER As String, _
                    ByVal PRE_DATECOMMER As System.Nullable(Of Date), _
                    ByVal PRE_DATESUP As System.Nullable(Of Date), _
                    ByVal PRE_CDF_PU_CODE_FK As String, _
                    ByVal PRE_CEPH_CODE_FK As String, _
                    ByVal PRE_CATC_CODE_FK As String, _
                    ByVal PRE_NATUCD_CDF_CODE_FK As String, _
                    ByVal PRE_NATUCD_CDF_NUM_FK As String, _
                    ByVal PRE_DATEJOCIP As System.Nullable(Of Date), _
                    ByVal PRE_AGRCOLL As String, _
                    ByVal PRE_DATEJOCOLL As System.Nullable(Of Date), _
                    ByVal PRE_DATEFINCOLL As System.Nullable(Of Date), _
                    ByVal PRE_DATE_APPLIFINCOLL As System.Nullable(Of Date), _
                    ByVal PRE_PARTSTATUT As String, _
                    ByVal PRE_TSS_TEXTE As String, _
                    ByVal PRE_CONSAPOUV As String, _
                    ByVal PRE_LIB_CEPS As String, _
                    ByVal PRE_ADMIN As String, _
                    ByVal PRE_DATECR As Date, _
                    ByVal PRE_DATEMJ As System.Nullable(Of Date)) As Integer
            If (PRE_CODE_PK Is Nothing) Then
                Throw New System.ArgumentNullException("PRE_CODE_PK")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(PRE_CODE_PK, String)
            End If
            Me.Adapter.InsertCommand.Parameters(1).Value = CType(PRE_SP_CODE_FK, Integer)
            If (PRE_EAN_REF Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(PRE_EAN_REF, String)
            End If
            If (PRE_NBUNITE.HasValue = True) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(PRE_NBUNITE.Value, Short)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = System.DBNull.Value
            End If
            If (PRE_CDF_UP_CODE_FK Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(PRE_CDF_UP_CODE_FK, String)
            End If
            If (PRE_CACDT_TEXTE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(PRE_CACDT_TEXTE, String)
            End If
            If (PRE_CDF_RH_CODE_FK Is Nothing) Then
                Throw New System.ArgumentNullException("PRE_CDF_RH_CODE_FK")
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(PRE_CDF_RH_CODE_FK, String)
            End If
            If (PRE_CDF_LI_CODE_FK Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(PRE_CDF_LI_CODE_FK, String)
            End If
            If (PRE_ETAT_COMMER Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(PRE_ETAT_COMMER, String)
            End If
            If (PRE_DATECOMMER.HasValue = True) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(PRE_DATECOMMER.Value, Date)
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = System.DBNull.Value
            End If
            If (PRE_DATESUP.HasValue = True) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(PRE_DATESUP.Value, Date)
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = System.DBNull.Value
            End If
            If (PRE_CDF_PU_CODE_FK Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(PRE_CDF_PU_CODE_FK, String)
            End If
            If (PRE_CEPH_CODE_FK Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(PRE_CEPH_CODE_FK, String)
            End If
            If (PRE_CATC_CODE_FK Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(PRE_CATC_CODE_FK, String)
            End If
            If (PRE_NATUCD_CDF_CODE_FK Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(PRE_NATUCD_CDF_CODE_FK, String)
            End If
            If (PRE_NATUCD_CDF_NUM_FK Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(PRE_NATUCD_CDF_NUM_FK, String)
            End If
            If (PRE_DATEJOCIP.HasValue = True) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(PRE_DATEJOCIP.Value, Date)
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = System.DBNull.Value
            End If
            If (PRE_AGRCOLL Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(PRE_AGRCOLL, String)
            End If
            If (PRE_DATEJOCOLL.HasValue = True) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(PRE_DATEJOCOLL.Value, Date)
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = System.DBNull.Value
            End If
            If (PRE_DATEFINCOLL.HasValue = True) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(PRE_DATEFINCOLL.Value, Date)
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = System.DBNull.Value
            End If
            If (PRE_DATE_APPLIFINCOLL.HasValue = True) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(PRE_DATE_APPLIFINCOLL.Value, Date)
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = System.DBNull.Value
            End If
            If (PRE_PARTSTATUT Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(PRE_PARTSTATUT, String)
            End If
            If (PRE_TSS_TEXTE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(PRE_TSS_TEXTE, String)
            End If
            If (PRE_CONSAPOUV Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(PRE_CONSAPOUV, String)
            End If
            If (PRE_LIB_CEPS Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(PRE_LIB_CEPS, String)
            End If
            If (PRE_ADMIN Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(PRE_ADMIN, String)
            End If
            Me.Adapter.InsertCommand.Parameters(26).Value = CType(PRE_DATECR, Date)
            If (PRE_DATEMJ.HasValue = True) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(PRE_DATEMJ.Value, Date)
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = System.DBNull.Value
            End If
            Dim previousConnectionState As System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And System.Data.ConnectionState.Open) _
                        <> System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open()
            End If
            Try
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close()
                End If
            End Try
        End Function

        <System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, True)> _
        Public Overridable Overloads Function Update( _
                    ByVal PRE_CODE_PK As String, _
                    ByVal PRE_SP_CODE_FK As Integer, _
                    ByVal PRE_EAN_REF As String, _
                    ByVal PRE_NBUNITE As System.Nullable(Of Short), _
                    ByVal PRE_CDF_UP_CODE_FK As String, _
                    ByVal PRE_CACDT_TEXTE As String, _
                    ByVal PRE_CDF_RH_CODE_FK As String, _
                    ByVal PRE_CDF_LI_CODE_FK As String, _
                    ByVal PRE_ETAT_COMMER As String, _
                    ByVal PRE_DATECOMMER As System.Nullable(Of Date), _
                    ByVal PRE_DATESUP As System.Nullable(Of Date), _
                    ByVal PRE_CDF_PU_CODE_FK As String, _
                    ByVal PRE_CEPH_CODE_FK As String, _
                    ByVal PRE_CATC_CODE_FK As String, _
                    ByVal PRE_NATUCD_CDF_CODE_FK As String, _
                    ByVal PRE_NATUCD_CDF_NUM_FK As String, _
                    ByVal PRE_DATEJOCIP As System.Nullable(Of Date), _
                    ByVal PRE_AGRCOLL As String, _
                    ByVal PRE_DATEJOCOLL As System.Nullable(Of Date), _
                    ByVal PRE_DATEFINCOLL As System.Nullable(Of Date), _
                    ByVal PRE_DATE_APPLIFINCOLL As System.Nullable(Of Date), _
                    ByVal PRE_PARTSTATUT As String, _
                    ByVal PRE_TSS_TEXTE As String, _
                    ByVal PRE_CONSAPOUV As String, _
                    ByVal PRE_LIB_CEPS As String, _
                    ByVal PRE_ADMIN As String, _
                    ByVal PRE_DATECR As Date, _
                    ByVal PRE_DATEMJ As System.Nullable(Of Date), _
                    ByVal Original_PRE_CODE_PK As String, _
                    ByVal Original_PRE_SP_CODE_FK As Integer, _
                    ByVal Original_PRE_EAN_REF As String, _
                    ByVal Original_PRE_NBUNITE As System.Nullable(Of Short), _
                    ByVal Original_PRE_CDF_UP_CODE_FK As String, _
                    ByVal Original_PRE_CACDT_TEXTE As String, _
                    ByVal Original_PRE_CDF_RH_CODE_FK As String, _
                    ByVal Original_PRE_CDF_LI_CODE_FK As String, _
                    ByVal Original_PRE_ETAT_COMMER As String, _
                    ByVal Original_PRE_DATECOMMER As System.Nullable(Of Date), _
                    ByVal Original_PRE_DATESUP As System.Nullable(Of Date), _
                    ByVal Original_PRE_CDF_PU_CODE_FK As String, _
                    ByVal Original_PRE_CEPH_CODE_FK As String, _
                    ByVal Original_PRE_CATC_CODE_FK As String, _
                    ByVal Original_PRE_NATUCD_CDF_CODE_FK As String, _
                    ByVal Original_PRE_NATUCD_CDF_NUM_FK As String, _
                    ByVal Original_PRE_DATEJOCIP As System.Nullable(Of Date), _
                    ByVal Original_PRE_AGRCOLL As String, _
                    ByVal Original_PRE_DATEJOCOLL As System.Nullable(Of Date), _
                    ByVal Original_PRE_DATEFINCOLL As System.Nullable(Of Date), _
                    ByVal Original_PRE_DATE_APPLIFINCOLL As System.Nullable(Of Date), _
                    ByVal Original_PRE_PARTSTATUT As String, _
                    ByVal Original_PRE_TSS_TEXTE As String, _
                    ByVal Original_PRE_LIB_CEPS As String, _
                    ByVal Original_PRE_ADMIN As String, _
                    ByVal Original_PRE_DATECR As Date, _
                    ByVal Original_PRE_DATEMJ As System.Nullable(Of Date)) As Integer
            If (PRE_CODE_PK Is Nothing) Then
                Throw New System.ArgumentNullException("PRE_CODE_PK")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(PRE_CODE_PK, String)
            End If
            Me.Adapter.UpdateCommand.Parameters(1).Value = CType(PRE_SP_CODE_FK, Integer)
            If (PRE_EAN_REF Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(PRE_EAN_REF, String)
            End If
            If (PRE_NBUNITE.HasValue = True) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(PRE_NBUNITE.Value, Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = System.DBNull.Value
            End If
            If (PRE_CDF_UP_CODE_FK Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(PRE_CDF_UP_CODE_FK, String)
            End If
            If (PRE_CACDT_TEXTE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(PRE_CACDT_TEXTE, String)
            End If
            If (PRE_CDF_RH_CODE_FK Is Nothing) Then
                Throw New System.ArgumentNullException("PRE_CDF_RH_CODE_FK")
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(PRE_CDF_RH_CODE_FK, String)
            End If
            If (PRE_CDF_LI_CODE_FK Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(PRE_CDF_LI_CODE_FK, String)
            End If
            If (PRE_ETAT_COMMER Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(PRE_ETAT_COMMER, String)
            End If
            If (PRE_DATECOMMER.HasValue = True) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(PRE_DATECOMMER.Value, Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = System.DBNull.Value
            End If
            If (PRE_DATESUP.HasValue = True) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(PRE_DATESUP.Value, Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = System.DBNull.Value
            End If
            If (PRE_CDF_PU_CODE_FK Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(PRE_CDF_PU_CODE_FK, String)
            End If
            If (PRE_CEPH_CODE_FK Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(PRE_CEPH_CODE_FK, String)
            End If
            If (PRE_CATC_CODE_FK Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(PRE_CATC_CODE_FK, String)
            End If
            If (PRE_NATUCD_CDF_CODE_FK Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(PRE_NATUCD_CDF_CODE_FK, String)
            End If
            If (PRE_NATUCD_CDF_NUM_FK Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(PRE_NATUCD_CDF_NUM_FK, String)
            End If
            If (PRE_DATEJOCIP.HasValue = True) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(PRE_DATEJOCIP.Value, Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = System.DBNull.Value
            End If
            If (PRE_AGRCOLL Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(PRE_AGRCOLL, String)
            End If
            If (PRE_DATEJOCOLL.HasValue = True) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(PRE_DATEJOCOLL.Value, Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = System.DBNull.Value
            End If
            If (PRE_DATEFINCOLL.HasValue = True) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(PRE_DATEFINCOLL.Value, Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = System.DBNull.Value
            End If
            If (PRE_DATE_APPLIFINCOLL.HasValue = True) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(PRE_DATE_APPLIFINCOLL.Value, Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = System.DBNull.Value
            End If
            If (PRE_PARTSTATUT Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(PRE_PARTSTATUT, String)
            End If
            If (PRE_TSS_TEXTE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(PRE_TSS_TEXTE, String)
            End If
            If (PRE_CONSAPOUV Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(23).Value = System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(PRE_CONSAPOUV, String)
            End If
            If (PRE_LIB_CEPS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(24).Value = System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(PRE_LIB_CEPS, String)
            End If
            If (PRE_ADMIN Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(25).Value = System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(PRE_ADMIN, String)
            End If
            Me.Adapter.UpdateCommand.Parameters(26).Value = CType(PRE_DATECR, Date)
            If (PRE_DATEMJ.HasValue = True) Then
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(PRE_DATEMJ.Value, Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = System.DBNull.Value
            End If
            If (Original_PRE_CODE_PK Is Nothing) Then
                Throw New System.ArgumentNullException("Original_PRE_CODE_PK")
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(Original_PRE_CODE_PK, String)
            End If
            Me.Adapter.UpdateCommand.Parameters(29).Value = CType(Original_PRE_SP_CODE_FK, Integer)
            If (Original_PRE_EAN_REF Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(31).Value = System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(Original_PRE_EAN_REF, String)
            End If
            If (Original_PRE_NBUNITE.HasValue = True) Then
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(Original_PRE_NBUNITE.Value, Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(33).Value = System.DBNull.Value
            End If
            If (Original_PRE_CDF_UP_CODE_FK Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(35).Value = System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(Original_PRE_CDF_UP_CODE_FK, String)
            End If
            If (Original_PRE_CACDT_TEXTE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(37).Value = System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(Original_PRE_CACDT_TEXTE, String)
            End If
            If (Original_PRE_CDF_RH_CODE_FK Is Nothing) Then
                Throw New System.ArgumentNullException("Original_PRE_CDF_RH_CODE_FK")
            Else
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(Original_PRE_CDF_RH_CODE_FK, String)
            End If
            If (Original_PRE_CDF_LI_CODE_FK Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(40).Value = System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(Original_PRE_CDF_LI_CODE_FK, String)
            End If
            If (Original_PRE_ETAT_COMMER Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(42).Value = System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(Original_PRE_ETAT_COMMER, String)
            End If
            If (Original_PRE_DATECOMMER.HasValue = True) Then
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(Original_PRE_DATECOMMER.Value, Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(44).Value = System.DBNull.Value
            End If
            If (Original_PRE_DATESUP.HasValue = True) Then
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(Original_PRE_DATESUP.Value, Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(46).Value = System.DBNull.Value
            End If
            If (Original_PRE_CDF_PU_CODE_FK Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(48).Value = System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(Original_PRE_CDF_PU_CODE_FK, String)
            End If
            If (Original_PRE_CEPH_CODE_FK Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(50).Value = System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(Original_PRE_CEPH_CODE_FK, String)
            End If
            If (Original_PRE_CATC_CODE_FK Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(52).Value = System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(Original_PRE_CATC_CODE_FK, String)
            End If
            If (Original_PRE_NATUCD_CDF_CODE_FK Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(53).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(54).Value = System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(53).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(Original_PRE_NATUCD_CDF_CODE_FK, String)
            End If
            If (Original_PRE_NATUCD_CDF_NUM_FK Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(55).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(56).Value = System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(55).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(Original_PRE_NATUCD_CDF_NUM_FK, String)
            End If
            If (Original_PRE_DATEJOCIP.HasValue = True) Then
                Me.Adapter.UpdateCommand.Parameters(57).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(Original_PRE_DATEJOCIP.Value, Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(57).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(58).Value = System.DBNull.Value
            End If
            If (Original_PRE_AGRCOLL Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(59).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(60).Value = System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(59).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(Original_PRE_AGRCOLL, String)
            End If
            If (Original_PRE_DATEJOCOLL.HasValue = True) Then
                Me.Adapter.UpdateCommand.Parameters(61).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(62).Value = CType(Original_PRE_DATEJOCOLL.Value, Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(61).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(62).Value = System.DBNull.Value
            End If
            If (Original_PRE_DATEFINCOLL.HasValue = True) Then
                Me.Adapter.UpdateCommand.Parameters(63).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(64).Value = CType(Original_PRE_DATEFINCOLL.Value, Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(63).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(64).Value = System.DBNull.Value
            End If
            If (Original_PRE_DATE_APPLIFINCOLL.HasValue = True) Then
                Me.Adapter.UpdateCommand.Parameters(65).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(66).Value = CType(Original_PRE_DATE_APPLIFINCOLL.Value, Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(65).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(66).Value = System.DBNull.Value
            End If
            If (Original_PRE_PARTSTATUT Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(67).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(68).Value = System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(67).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(68).Value = CType(Original_PRE_PARTSTATUT, String)
            End If
            If (Original_PRE_TSS_TEXTE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(69).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(70).Value = System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(69).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(70).Value = CType(Original_PRE_TSS_TEXTE, String)
            End If
            If (Original_PRE_LIB_CEPS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(71).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(72).Value = System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(71).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(72).Value = CType(Original_PRE_LIB_CEPS, String)
            End If
            If (Original_PRE_ADMIN Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(73).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(74).Value = System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(73).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(74).Value = CType(Original_PRE_ADMIN, String)
            End If
            Me.Adapter.UpdateCommand.Parameters(75).Value = CType(Original_PRE_DATECR, Date)
            If (Original_PRE_DATEMJ.HasValue = True) Then
                Me.Adapter.UpdateCommand.Parameters(76).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(77).Value = CType(Original_PRE_DATEMJ.Value, Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(76).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(77).Value = System.DBNull.Value
            End If
            Dim previousConnectionState As System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And System.Data.ConnectionState.Open) _
                        <> System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open()
            End If
            Try
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close()
                End If
            End Try
        End Function
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.ComponentModel.ToolboxItem(true),  _
     System.ComponentModel.DataObjectAttribute(true),  _
     System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class SPDDD_DOSE_USUELLE_JOURTableAdapter
        Inherits System.ComponentModel.Component
        
        Private WithEvents _adapter As System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private ReadOnly Property Adapter() As System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As System.Data.Common.DataTableMapping = New System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "SPDDD_DOSE_USUELLE_JOUR"
            tableMapping.ColumnMappings.Add("SPDDD_SP_CODE_FK_PK", "SPDDD_SP_CODE_FK_PK")
            tableMapping.ColumnMappings.Add("SPDDD_ATCDDD_CATC_CODE_FK_PK", "SPDDD_ATCDDD_CATC_CODE_FK_PK")
            tableMapping.ColumnMappings.Add("SPDDD_ATCDDD_CDF_VO_CODE_FK_PK", "SPDDD_ATCDDD_CDF_VO_CODE_FK_PK")
            tableMapping.ColumnMappings.Add("SPDDD_ATCDDD_DOSAGE_PK", "SPDDD_ATCDDD_DOSAGE_PK")
            tableMapping.ColumnMappings.Add("SPDDD_ATCDDD_CDF_UD_CODE_FK_PK", "SPDDD_ATCDDD_CDF_UD_CODE_FK_PK")
            tableMapping.ColumnMappings.Add("SPDDD_NUMORD", "SPDDD_NUMORD")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New System.Data.SqlClient.SqlCommand
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [theriaque].[SPDDD_DOSE_USUELLE_JOUR] WHERE (([SPDDD_SP_CODE_FK_PK] ="& _ 
                " @Original_SPDDD_SP_CODE_FK_PK) AND ([SPDDD_ATCDDD_CATC_CODE_FK_PK] = @Original_"& _ 
                "SPDDD_ATCDDD_CATC_CODE_FK_PK) AND ([SPDDD_ATCDDD_CDF_VO_CODE_FK_PK] = @Original_"& _ 
                "SPDDD_ATCDDD_CDF_VO_CODE_FK_PK) AND ([SPDDD_ATCDDD_DOSAGE_PK] = @Original_SPDDD_"& _ 
                "ATCDDD_DOSAGE_PK) AND ([SPDDD_ATCDDD_CDF_UD_CODE_FK_PK] = @Original_SPDDD_ATCDDD"& _ 
                "_CDF_UD_CODE_FK_PK) AND ((@IsNull_SPDDD_NUMORD = 1 AND [SPDDD_NUMORD] IS NULL) O"& _ 
                "R ([SPDDD_NUMORD] = @Original_SPDDD_NUMORD)))"
            Me._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_SPDDD_SP_CODE_FK_PK", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SPDDD_SP_CODE_FK_PK", System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_SPDDD_ATCDDD_CATC_CODE_FK_PK", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SPDDD_ATCDDD_CATC_CODE_FK_PK", System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_SPDDD_ATCDDD_CDF_VO_CODE_FK_PK", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SPDDD_ATCDDD_CDF_VO_CODE_FK_PK", System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_SPDDD_ATCDDD_DOSAGE_PK", System.Data.SqlDbType.[Decimal], 0, System.Data.ParameterDirection.Input, 10, 4, "SPDDD_ATCDDD_DOSAGE_PK", System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_SPDDD_ATCDDD_CDF_UD_CODE_FK_PK", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SPDDD_ATCDDD_CDF_UD_CODE_FK_PK", System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IsNull_SPDDD_NUMORD", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SPDDD_NUMORD", System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_SPDDD_NUMORD", System.Data.SqlDbType.SmallInt, 0, System.Data.ParameterDirection.Input, 0, 0, "SPDDD_NUMORD", System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New System.Data.SqlClient.SqlCommand
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [theriaque].[SPDDD_DOSE_USUELLE_JOUR] ([SPDDD_SP_CODE_FK_PK], [SPDDD_"& _ 
                "ATCDDD_CATC_CODE_FK_PK], [SPDDD_ATCDDD_CDF_VO_CODE_FK_PK], [SPDDD_ATCDDD_DOSAGE_"& _ 
                "PK], [SPDDD_ATCDDD_CDF_UD_CODE_FK_PK], [SPDDD_NUMORD]) VALUES (@SPDDD_SP_CODE_FK"& _ 
                "_PK, @SPDDD_ATCDDD_CATC_CODE_FK_PK, @SPDDD_ATCDDD_CDF_VO_CODE_FK_PK, @SPDDD_ATCD"& _ 
                "DD_DOSAGE_PK, @SPDDD_ATCDDD_CDF_UD_CODE_FK_PK, @SPDDD_NUMORD);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT SPDDD_SP_"& _ 
                "CODE_FK_PK, SPDDD_ATCDDD_CATC_CODE_FK_PK, SPDDD_ATCDDD_CDF_VO_CODE_FK_PK, SPDDD_"& _ 
                "ATCDDD_DOSAGE_PK, SPDDD_ATCDDD_CDF_UD_CODE_FK_PK, SPDDD_NUMORD FROM theriaque.SP"& _ 
                "DDD_DOSE_USUELLE_JOUR WHERE (SPDDD_ATCDDD_CATC_CODE_FK_PK = @SPDDD_ATCDDD_CATC_C"& _ 
                "ODE_FK_PK) AND (SPDDD_ATCDDD_CDF_UD_CODE_FK_PK = @SPDDD_ATCDDD_CDF_UD_CODE_FK_PK"& _ 
                ") AND (SPDDD_ATCDDD_CDF_VO_CODE_FK_PK = @SPDDD_ATCDDD_CDF_VO_CODE_FK_PK) AND (SP"& _ 
                "DDD_ATCDDD_DOSAGE_PK = @SPDDD_ATCDDD_DOSAGE_PK) AND (SPDDD_SP_CODE_FK_PK = @SPDD"& _ 
                "D_SP_CODE_FK_PK)"
            Me._adapter.InsertCommand.CommandType = System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@SPDDD_SP_CODE_FK_PK", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SPDDD_SP_CODE_FK_PK", System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@SPDDD_ATCDDD_CATC_CODE_FK_PK", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SPDDD_ATCDDD_CATC_CODE_FK_PK", System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@SPDDD_ATCDDD_CDF_VO_CODE_FK_PK", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SPDDD_ATCDDD_CDF_VO_CODE_FK_PK", System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@SPDDD_ATCDDD_DOSAGE_PK", System.Data.SqlDbType.[Decimal], 0, System.Data.ParameterDirection.Input, 10, 4, "SPDDD_ATCDDD_DOSAGE_PK", System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@SPDDD_ATCDDD_CDF_UD_CODE_FK_PK", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SPDDD_ATCDDD_CDF_UD_CODE_FK_PK", System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@SPDDD_NUMORD", System.Data.SqlDbType.SmallInt, 0, System.Data.ParameterDirection.Input, 0, 0, "SPDDD_NUMORD", System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New System.Data.SqlClient.SqlCommand
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [theriaque].[SPDDD_DOSE_USUELLE_JOUR] SET [SPDDD_SP_CODE_FK_PK] = @SPDDD_S"& _ 
                "P_CODE_FK_PK, [SPDDD_ATCDDD_CATC_CODE_FK_PK] = @SPDDD_ATCDDD_CATC_CODE_FK_PK, [S"& _ 
                "PDDD_ATCDDD_CDF_VO_CODE_FK_PK] = @SPDDD_ATCDDD_CDF_VO_CODE_FK_PK, [SPDDD_ATCDDD_"& _ 
                "DOSAGE_PK] = @SPDDD_ATCDDD_DOSAGE_PK, [SPDDD_ATCDDD_CDF_UD_CODE_FK_PK] = @SPDDD_"& _ 
                "ATCDDD_CDF_UD_CODE_FK_PK, [SPDDD_NUMORD] = @SPDDD_NUMORD WHERE (([SPDDD_SP_CODE_"& _ 
                "FK_PK] = @Original_SPDDD_SP_CODE_FK_PK) AND ([SPDDD_ATCDDD_CATC_CODE_FK_PK] = @O"& _ 
                "riginal_SPDDD_ATCDDD_CATC_CODE_FK_PK) AND ([SPDDD_ATCDDD_CDF_VO_CODE_FK_PK] = @O"& _ 
                "riginal_SPDDD_ATCDDD_CDF_VO_CODE_FK_PK) AND ([SPDDD_ATCDDD_DOSAGE_PK] = @Origina"& _ 
                "l_SPDDD_ATCDDD_DOSAGE_PK) AND ([SPDDD_ATCDDD_CDF_UD_CODE_FK_PK] = @Original_SPDD"& _ 
                "D_ATCDDD_CDF_UD_CODE_FK_PK) AND ((@IsNull_SPDDD_NUMORD = 1 AND [SPDDD_NUMORD] IS"& _ 
                " NULL) OR ([SPDDD_NUMORD] = @Original_SPDDD_NUMORD)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT SPDDD_SP_CODE_FK_"& _ 
                "PK, SPDDD_ATCDDD_CATC_CODE_FK_PK, SPDDD_ATCDDD_CDF_VO_CODE_FK_PK, SPDDD_ATCDDD_D"& _ 
                "OSAGE_PK, SPDDD_ATCDDD_CDF_UD_CODE_FK_PK, SPDDD_NUMORD FROM theriaque.SPDDD_DOSE"& _ 
                "_USUELLE_JOUR WHERE (SPDDD_ATCDDD_CATC_CODE_FK_PK = @SPDDD_ATCDDD_CATC_CODE_FK_P"& _ 
                "K) AND (SPDDD_ATCDDD_CDF_UD_CODE_FK_PK = @SPDDD_ATCDDD_CDF_UD_CODE_FK_PK) AND (S"& _ 
                "PDDD_ATCDDD_CDF_VO_CODE_FK_PK = @SPDDD_ATCDDD_CDF_VO_CODE_FK_PK) AND (SPDDD_ATCD"& _ 
                "DD_DOSAGE_PK = @SPDDD_ATCDDD_DOSAGE_PK) AND (SPDDD_SP_CODE_FK_PK = @SPDDD_SP_COD"& _ 
                "E_FK_PK)"
            Me._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@SPDDD_SP_CODE_FK_PK", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SPDDD_SP_CODE_FK_PK", System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@SPDDD_ATCDDD_CATC_CODE_FK_PK", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SPDDD_ATCDDD_CATC_CODE_FK_PK", System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@SPDDD_ATCDDD_CDF_VO_CODE_FK_PK", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SPDDD_ATCDDD_CDF_VO_CODE_FK_PK", System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@SPDDD_ATCDDD_DOSAGE_PK", System.Data.SqlDbType.[Decimal], 0, System.Data.ParameterDirection.Input, 10, 4, "SPDDD_ATCDDD_DOSAGE_PK", System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@SPDDD_ATCDDD_CDF_UD_CODE_FK_PK", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SPDDD_ATCDDD_CDF_UD_CODE_FK_PK", System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@SPDDD_NUMORD", System.Data.SqlDbType.SmallInt, 0, System.Data.ParameterDirection.Input, 0, 0, "SPDDD_NUMORD", System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_SPDDD_SP_CODE_FK_PK", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SPDDD_SP_CODE_FK_PK", System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_SPDDD_ATCDDD_CATC_CODE_FK_PK", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SPDDD_ATCDDD_CATC_CODE_FK_PK", System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_SPDDD_ATCDDD_CDF_VO_CODE_FK_PK", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SPDDD_ATCDDD_CDF_VO_CODE_FK_PK", System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_SPDDD_ATCDDD_DOSAGE_PK", System.Data.SqlDbType.[Decimal], 0, System.Data.ParameterDirection.Input, 10, 4, "SPDDD_ATCDDD_DOSAGE_PK", System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_SPDDD_ATCDDD_CDF_UD_CODE_FK_PK", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SPDDD_ATCDDD_CDF_UD_CODE_FK_PK", System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IsNull_SPDDD_NUMORD", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SPDDD_NUMORD", System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_SPDDD_NUMORD", System.Data.SqlDbType.SmallInt, 0, System.Data.ParameterDirection.Input, 0, 0, "SPDDD_NUMORD", System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Theriaque.My.Settings.ConnectionString
        End Sub

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Private Sub InitCommandCollection()
            Me._commandCollection = New System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT SPDDD_SP_CODE_FK_PK, SPDDD_ATCDDD_CATC_CODE_FK_PK, SPDDD_ATCDDD_CDF_VO_COD" & _
                "E_FK_PK, SPDDD_ATCDDD_DOSAGE_PK, SPDDD_ATCDDD_CDF_UD_CODE_FK_PK, SPDDD_NUMORD FR" & _
                "OM theriaque.SPDDD_DOSE_USUELLE_JOUR"
            Me._commandCollection(0).CommandType = System.Data.CommandType.Text
            Me._commandCollection(1) = New System.Data.SqlClient.SqlCommand
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT SPDDD_SP_CODE_FK_PK, SPDDD_ATCDDD_CATC_CODE_FK_PK, SPDDD_ATCDDD_CDF_VO_COD" & _
                "E_FK_PK, SPDDD_ATCDDD_DOSAGE_PK, SPDDD_ATCDDD_CDF_UD_CODE_FK_PK, SPDDD_NUMORD FR" & _
                "OM theriaque.SPDDD_DOSE_USUELLE_JOUR" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "WHERE SPDDD_SP_CODE_FK_PK = @SPDDD_SP_CODE" & _
                "_FK_PK"
            Me._commandCollection(1).CommandType = System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New System.Data.SqlClient.SqlParameter("@SPDDD_SP_CODE_FK_PK", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, 0, 0, "SPDDD_SP_CODE_FK_PK", System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
        End Sub

        <System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, True)> _
        Public Overridable Overloads Function Fill(ByVal dataTable As dsTheriaque_GrosseRequete.SPDDD_DOSE_USUELLE_JOURDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.[Select], True)> _
        Public Overridable Overloads Function GetData() As dsTheriaque_GrosseRequete.SPDDD_DOSE_USUELLE_JOURDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsTheriaque_GrosseRequete.SPDDD_DOSE_USUELLE_JOURDataTable = New dsTheriaque_GrosseRequete.SPDDD_DOSE_USUELLE_JOURDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function

        <System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, False)> _
        Public Overridable Overloads Function FillByCode(ByVal dataTable As dsTheriaque_GrosseRequete.SPDDD_DOSE_USUELLE_JOURDataTable, ByVal SPDDD_SP_CODE_FK_PK As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(SPDDD_SP_CODE_FK_PK, Integer)
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.[Select], False)> _
        Public Overridable Overloads Function GetDataByCode(ByVal SPDDD_SP_CODE_FK_PK As Integer) As dsTheriaque_GrosseRequete.SPDDD_DOSE_USUELLE_JOURDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(SPDDD_SP_CODE_FK_PK, Integer)
            Dim dataTable As dsTheriaque_GrosseRequete.SPDDD_DOSE_USUELLE_JOURDataTable = New dsTheriaque_GrosseRequete.SPDDD_DOSE_USUELLE_JOURDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function

        <System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataTable As dsTheriaque_GrosseRequete.SPDDD_DOSE_USUELLE_JOURDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function

        <System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataSet As dsTheriaque_GrosseRequete) As Integer
            Return Me.Adapter.Update(dataSet, "SPDDD_DOSE_USUELLE_JOUR")
        End Function

        <System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataRow As System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New System.Data.DataRow() {dataRow})
        End Function

        <System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataRows() As System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function

        <System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, True)> _
        Public Overridable Overloads Function Delete(ByVal Original_SPDDD_SP_CODE_FK_PK As Integer, ByVal Original_SPDDD_ATCDDD_CATC_CODE_FK_PK As String, ByVal Original_SPDDD_ATCDDD_CDF_VO_CODE_FK_PK As String, ByVal Original_SPDDD_ATCDDD_DOSAGE_PK As Decimal, ByVal Original_SPDDD_ATCDDD_CDF_UD_CODE_FK_PK As String, ByVal Original_SPDDD_NUMORD As System.Nullable(Of Short)) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_SPDDD_SP_CODE_FK_PK, Integer)
            If (Original_SPDDD_ATCDDD_CATC_CODE_FK_PK Is Nothing) Then
                Throw New System.ArgumentNullException("Original_SPDDD_ATCDDD_CATC_CODE_FK_PK")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_SPDDD_ATCDDD_CATC_CODE_FK_PK, String)
            End If
            If (Original_SPDDD_ATCDDD_CDF_VO_CODE_FK_PK Is Nothing) Then
                Throw New System.ArgumentNullException("Original_SPDDD_ATCDDD_CDF_VO_CODE_FK_PK")
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_SPDDD_ATCDDD_CDF_VO_CODE_FK_PK, String)
            End If
            Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_SPDDD_ATCDDD_DOSAGE_PK, Decimal)
            If (Original_SPDDD_ATCDDD_CDF_UD_CODE_FK_PK Is Nothing) Then
                Throw New System.ArgumentNullException("Original_SPDDD_ATCDDD_CDF_UD_CODE_FK_PK")
            Else
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_SPDDD_ATCDDD_CDF_UD_CODE_FK_PK, String)
            End If
            If (Original_SPDDD_NUMORD.HasValue = True) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_SPDDD_NUMORD.Value, Short)
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = System.DBNull.Value
            End If
            Dim previousConnectionState As System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And System.Data.ConnectionState.Open) _
                        <> System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open()
            End If
            Try
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close()
                End If
            End Try
        End Function

        <System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, True)> _
        Public Overridable Overloads Function Insert(ByVal SPDDD_SP_CODE_FK_PK As Integer, ByVal SPDDD_ATCDDD_CATC_CODE_FK_PK As String, ByVal SPDDD_ATCDDD_CDF_VO_CODE_FK_PK As String, ByVal SPDDD_ATCDDD_DOSAGE_PK As Decimal, ByVal SPDDD_ATCDDD_CDF_UD_CODE_FK_PK As String, ByVal SPDDD_NUMORD As System.Nullable(Of Short)) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(SPDDD_SP_CODE_FK_PK, Integer)
            If (SPDDD_ATCDDD_CATC_CODE_FK_PK Is Nothing) Then
                Throw New System.ArgumentNullException("SPDDD_ATCDDD_CATC_CODE_FK_PK")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(SPDDD_ATCDDD_CATC_CODE_FK_PK, String)
            End If
            If (SPDDD_ATCDDD_CDF_VO_CODE_FK_PK Is Nothing) Then
                Throw New System.ArgumentNullException("SPDDD_ATCDDD_CDF_VO_CODE_FK_PK")
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(SPDDD_ATCDDD_CDF_VO_CODE_FK_PK, String)
            End If
            Me.Adapter.InsertCommand.Parameters(3).Value = CType(SPDDD_ATCDDD_DOSAGE_PK, Decimal)
            If (SPDDD_ATCDDD_CDF_UD_CODE_FK_PK Is Nothing) Then
                Throw New System.ArgumentNullException("SPDDD_ATCDDD_CDF_UD_CODE_FK_PK")
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(SPDDD_ATCDDD_CDF_UD_CODE_FK_PK, String)
            End If
            If (SPDDD_NUMORD.HasValue = True) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(SPDDD_NUMORD.Value, Short)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = System.DBNull.Value
            End If
            Dim previousConnectionState As System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And System.Data.ConnectionState.Open) _
                        <> System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open()
            End If
            Try
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close()
                End If
            End Try
        End Function

        <System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, True)> _
        Public Overridable Overloads Function Update(ByVal SPDDD_SP_CODE_FK_PK As Integer, ByVal SPDDD_ATCDDD_CATC_CODE_FK_PK As String, ByVal SPDDD_ATCDDD_CDF_VO_CODE_FK_PK As String, ByVal SPDDD_ATCDDD_DOSAGE_PK As Decimal, ByVal SPDDD_ATCDDD_CDF_UD_CODE_FK_PK As String, ByVal SPDDD_NUMORD As System.Nullable(Of Short), ByVal Original_SPDDD_SP_CODE_FK_PK As Integer, ByVal Original_SPDDD_ATCDDD_CATC_CODE_FK_PK As String, ByVal Original_SPDDD_ATCDDD_CDF_VO_CODE_FK_PK As String, ByVal Original_SPDDD_ATCDDD_DOSAGE_PK As Decimal, ByVal Original_SPDDD_ATCDDD_CDF_UD_CODE_FK_PK As String, ByVal Original_SPDDD_NUMORD As System.Nullable(Of Short)) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(SPDDD_SP_CODE_FK_PK, Integer)
            If (SPDDD_ATCDDD_CATC_CODE_FK_PK Is Nothing) Then
                Throw New System.ArgumentNullException("SPDDD_ATCDDD_CATC_CODE_FK_PK")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(SPDDD_ATCDDD_CATC_CODE_FK_PK, String)
            End If
            If (SPDDD_ATCDDD_CDF_VO_CODE_FK_PK Is Nothing) Then
                Throw New System.ArgumentNullException("SPDDD_ATCDDD_CDF_VO_CODE_FK_PK")
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(SPDDD_ATCDDD_CDF_VO_CODE_FK_PK, String)
            End If
            Me.Adapter.UpdateCommand.Parameters(3).Value = CType(SPDDD_ATCDDD_DOSAGE_PK, Decimal)
            If (SPDDD_ATCDDD_CDF_UD_CODE_FK_PK Is Nothing) Then
                Throw New System.ArgumentNullException("SPDDD_ATCDDD_CDF_UD_CODE_FK_PK")
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(SPDDD_ATCDDD_CDF_UD_CODE_FK_PK, String)
            End If
            If (SPDDD_NUMORD.HasValue = True) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(SPDDD_NUMORD.Value, Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Original_SPDDD_SP_CODE_FK_PK, Integer)
            If (Original_SPDDD_ATCDDD_CATC_CODE_FK_PK Is Nothing) Then
                Throw New System.ArgumentNullException("Original_SPDDD_ATCDDD_CATC_CODE_FK_PK")
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Original_SPDDD_ATCDDD_CATC_CODE_FK_PK, String)
            End If
            If (Original_SPDDD_ATCDDD_CDF_VO_CODE_FK_PK Is Nothing) Then
                Throw New System.ArgumentNullException("Original_SPDDD_ATCDDD_CDF_VO_CODE_FK_PK")
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Original_SPDDD_ATCDDD_CDF_VO_CODE_FK_PK, String)
            End If
            Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Original_SPDDD_ATCDDD_DOSAGE_PK, Decimal)
            If (Original_SPDDD_ATCDDD_CDF_UD_CODE_FK_PK Is Nothing) Then
                Throw New System.ArgumentNullException("Original_SPDDD_ATCDDD_CDF_UD_CODE_FK_PK")
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(Original_SPDDD_ATCDDD_CDF_UD_CODE_FK_PK, String)
            End If
            If (Original_SPDDD_NUMORD.HasValue = True) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(Original_SPDDD_NUMORD.Value, Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(12).Value = System.DBNull.Value
            End If
            Dim previousConnectionState As System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And System.Data.ConnectionState.Open) _
                        <> System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open()
            End If
            Try
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close()
                End If
            End Try
        End Function
    End Class

    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"), _
     System.ComponentModel.DesignerCategoryAttribute("code"), _
     System.ComponentModel.ToolboxItem(True), _
     System.ComponentModel.DataObjectAttribute(True), _
     System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" & _
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), _
     System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
    Partial Public Class PRETSS_PRESENTATION_TAUXTableAdapter
        Inherits System.ComponentModel.Component

        Private WithEvents _adapter As System.Data.SqlClient.SqlDataAdapter

        Private _connection As System.Data.SqlClient.SqlConnection

        Private _commandCollection() As System.Data.SqlClient.SqlCommand

        Private _clearBeforeFill As Boolean

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Sub New()
            MyBase.New()
            Me.ClearBeforeFill = True
        End Sub

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Private ReadOnly Property Adapter() As System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter()
                End If
                Return Me._adapter
            End Get
        End Property

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Friend Property Connection() As System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection()
                End If
                Return Me._connection
            End Get
            Set(ByVal value As System.Data.SqlClient.SqlConnection)
                Me._connection = Value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = Value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = Value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = Value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i), System.Data.SqlClient.SqlCommand).Connection = Value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Protected ReadOnly Property CommandCollection() As System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection()
                End If
                Return Me._commandCollection
            End Get
        End Property

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set(ByVal value As Boolean)
                Me._clearBeforeFill = Value
            End Set
        End Property

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Private Sub InitAdapter()
            Me._adapter = New System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As System.Data.Common.DataTableMapping = New System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "PRETSS_PRESENTATION_TAUX"
            tableMapping.ColumnMappings.Add("PRETSS_PRE_CODE_FK_PK", "PRETSS_PRE_CODE_FK_PK")
            tableMapping.ColumnMappings.Add("PRETSS_CDF_TSS_CODE_FK_PK", "PRETSS_CDF_TSS_CODE_FK_PK")
            tableMapping.ColumnMappings.Add("PRETSS_NUMSEQ", "PRETSS_NUMSEQ")
            tableMapping.ColumnMappings.Add("PRETSS_DATE_APPLI_PK", "PRETSS_DATE_APPLI_PK")
            tableMapping.ColumnMappings.Add("PRETSS_DATE_APPLIQUEE", "PRETSS_DATE_APPLIQUEE")
            tableMapping.ColumnMappings.Add("PRETSS_TEXTE", "PRETSS_TEXTE")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New System.Data.SqlClient.SqlCommand
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [theriaque].[PRETSS_PRESENTATION_TAUX] WHERE (([PRETSS_PRE_CODE_FK_PK" & _
                "] = @Original_PRETSS_PRE_CODE_FK_PK) AND ([PRETSS_CDF_TSS_CODE_FK_PK] = @Origina" & _
                "l_PRETSS_CDF_TSS_CODE_FK_PK) AND ([PRETSS_NUMSEQ] = @Original_PRETSS_NUMSEQ) AND" & _
                " ((@IsNull_PRETSS_DATE_APPLI_PK = 1 AND [PRETSS_DATE_APPLI_PK] IS NULL) OR ([PRE" & _
                "TSS_DATE_APPLI_PK] = @Original_PRETSS_DATE_APPLI_PK)) AND ((@IsNull_PRETSS_DATE_" & _
                "APPLIQUEE = 1 AND [PRETSS_DATE_APPLIQUEE] IS NULL) OR ([PRETSS_DATE_APPLIQUEE] =" & _
                " @Original_PRETSS_DATE_APPLIQUEE)) AND ((@IsNull_PRETSS_TEXTE = 1 AND [PRETSS_TE" & _
                "XTE] IS NULL) OR ([PRETSS_TEXTE] = @Original_PRETSS_TEXTE)))"
            Me._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_PRETSS_PRE_CODE_FK_PK", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PRETSS_PRE_CODE_FK_PK", System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_PRETSS_CDF_TSS_CODE_FK_PK", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PRETSS_CDF_TSS_CODE_FK_PK", System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_PRETSS_NUMSEQ", System.Data.SqlDbType.SmallInt, 0, System.Data.ParameterDirection.Input, 0, 0, "PRETSS_NUMSEQ", System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IsNull_PRETSS_DATE_APPLI_PK", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PRETSS_DATE_APPLI_PK", System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_PRETSS_DATE_APPLI_PK", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "PRETSS_DATE_APPLI_PK", System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IsNull_PRETSS_DATE_APPLIQUEE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PRETSS_DATE_APPLIQUEE", System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_PRETSS_DATE_APPLIQUEE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "PRETSS_DATE_APPLIQUEE", System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IsNull_PRETSS_TEXTE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PRETSS_TEXTE", System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_PRETSS_TEXTE", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PRETSS_TEXTE", System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New System.Data.SqlClient.SqlCommand
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [theriaque].[PRETSS_PRESENTATION_TAUX] ([PRETSS_PRE_CODE_FK_PK], [PRE" & _
                "TSS_CDF_TSS_CODE_FK_PK], [PRETSS_NUMSEQ], [PRETSS_DATE_APPLI_PK], [PRETSS_DATE_A" & _
                "PPLIQUEE], [PRETSS_TEXTE]) VALUES (@PRETSS_PRE_CODE_FK_PK, @PRETSS_CDF_TSS_CODE_" & _
                "FK_PK, @PRETSS_NUMSEQ, @PRETSS_DATE_APPLI_PK, @PRETSS_DATE_APPLIQUEE, @PRETSS_TE" & _
                "XTE);" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "SELECT PRETSS_PRE_CODE_FK_PK, PRETSS_CDF_TSS_CODE_FK_PK, PRETSS_NUMSEQ, P" & _
                "RETSS_DATE_APPLI_PK, PRETSS_DATE_APPLIQUEE, PRETSS_TEXTE FROM theriaque.PRETSS_P" & _
                "RESENTATION_TAUX WHERE (PRETSS_CDF_TSS_CODE_FK_PK = @PRETSS_CDF_TSS_CODE_FK_PK) " & _
                "AND (PRETSS_NUMSEQ = @PRETSS_NUMSEQ) AND (PRETSS_PRE_CODE_FK_PK = @PRETSS_PRE_CO" & _
                "DE_FK_PK)"
            Me._adapter.InsertCommand.CommandType = System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PRETSS_PRE_CODE_FK_PK", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PRETSS_PRE_CODE_FK_PK", System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PRETSS_CDF_TSS_CODE_FK_PK", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PRETSS_CDF_TSS_CODE_FK_PK", System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PRETSS_NUMSEQ", System.Data.SqlDbType.SmallInt, 0, System.Data.ParameterDirection.Input, 0, 0, "PRETSS_NUMSEQ", System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PRETSS_DATE_APPLI_PK", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "PRETSS_DATE_APPLI_PK", System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PRETSS_DATE_APPLIQUEE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "PRETSS_DATE_APPLIQUEE", System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PRETSS_TEXTE", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PRETSS_TEXTE", System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New System.Data.SqlClient.SqlCommand
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [theriaque].[PRETSS_PRESENTATION_TAUX] SET [PRETSS_PRE_CODE_FK_PK] = @PRET" & _
                "SS_PRE_CODE_FK_PK, [PRETSS_CDF_TSS_CODE_FK_PK] = @PRETSS_CDF_TSS_CODE_FK_PK, [PR" & _
                "ETSS_NUMSEQ] = @PRETSS_NUMSEQ, [PRETSS_DATE_APPLI_PK] = @PRETSS_DATE_APPLI_PK, [" & _
                "PRETSS_DATE_APPLIQUEE] = @PRETSS_DATE_APPLIQUEE, [PRETSS_TEXTE] = @PRETSS_TEXTE " & _
                "WHERE (([PRETSS_PRE_CODE_FK_PK] = @Original_PRETSS_PRE_CODE_FK_PK) AND ([PRETSS_" & _
                "CDF_TSS_CODE_FK_PK] = @Original_PRETSS_CDF_TSS_CODE_FK_PK) AND ([PRETSS_NUMSEQ] " & _
                "= @Original_PRETSS_NUMSEQ) AND ((@IsNull_PRETSS_DATE_APPLI_PK = 1 AND [PRETSS_DA" & _
                "TE_APPLI_PK] IS NULL) OR ([PRETSS_DATE_APPLI_PK] = @Original_PRETSS_DATE_APPLI_P" & _
                "K)) AND ((@IsNull_PRETSS_DATE_APPLIQUEE = 1 AND [PRETSS_DATE_APPLIQUEE] IS NULL)" & _
                " OR ([PRETSS_DATE_APPLIQUEE] = @Original_PRETSS_DATE_APPLIQUEE)) AND ((@IsNull_P" & _
                "RETSS_TEXTE = 1 AND [PRETSS_TEXTE] IS NULL) OR ([PRETSS_TEXTE] = @Original_PRETS" & _
                "S_TEXTE)));" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "SELECT PRETSS_PRE_CODE_FK_PK, PRETSS_CDF_TSS_CODE_FK_PK, PRETSS_NUM" & _
                "SEQ, PRETSS_DATE_APPLI_PK, PRETSS_DATE_APPLIQUEE, PRETSS_TEXTE FROM theriaque.PR" & _
                "ETSS_PRESENTATION_TAUX WHERE (PRETSS_CDF_TSS_CODE_FK_PK = @PRETSS_CDF_TSS_CODE_F" & _
                "K_PK) AND (PRETSS_NUMSEQ = @PRETSS_NUMSEQ) AND (PRETSS_PRE_CODE_FK_PK = @PRETSS_" & _
                "PRE_CODE_FK_PK)"
            Me._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PRETSS_PRE_CODE_FK_PK", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PRETSS_PRE_CODE_FK_PK", System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PRETSS_CDF_TSS_CODE_FK_PK", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PRETSS_CDF_TSS_CODE_FK_PK", System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PRETSS_NUMSEQ", System.Data.SqlDbType.SmallInt, 0, System.Data.ParameterDirection.Input, 0, 0, "PRETSS_NUMSEQ", System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PRETSS_DATE_APPLI_PK", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "PRETSS_DATE_APPLI_PK", System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PRETSS_DATE_APPLIQUEE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "PRETSS_DATE_APPLIQUEE", System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PRETSS_TEXTE", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PRETSS_TEXTE", System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_PRETSS_PRE_CODE_FK_PK", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PRETSS_PRE_CODE_FK_PK", System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_PRETSS_CDF_TSS_CODE_FK_PK", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PRETSS_CDF_TSS_CODE_FK_PK", System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_PRETSS_NUMSEQ", System.Data.SqlDbType.SmallInt, 0, System.Data.ParameterDirection.Input, 0, 0, "PRETSS_NUMSEQ", System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IsNull_PRETSS_DATE_APPLI_PK", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PRETSS_DATE_APPLI_PK", System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_PRETSS_DATE_APPLI_PK", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "PRETSS_DATE_APPLI_PK", System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IsNull_PRETSS_DATE_APPLIQUEE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PRETSS_DATE_APPLIQUEE", System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_PRETSS_DATE_APPLIQUEE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "PRETSS_DATE_APPLIQUEE", System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IsNull_PRETSS_TEXTE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PRETSS_TEXTE", System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Original_PRETSS_TEXTE", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PRETSS_TEXTE", System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
        End Sub

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Private Sub InitConnection()
            Me._connection = New System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Theriaque.My.Settings.ConnectionString
        End Sub

        <System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Private Sub InitCommandCollection()
            Me._commandCollection = New System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT PRETSS_PRE_CODE_FK_PK, PRETSS_CDF_TSS_CODE_FK_PK, PRETSS_NUMSEQ, PRETSS_DA" & _
                "TE_APPLI_PK, PRETSS_DATE_APPLIQUEE, PRETSS_TEXTE FROM theriaque.PRETSS_PRESENTAT" & _
                "ION_TAUX"
            Me._commandCollection(0).CommandType = System.Data.CommandType.Text
            Me._commandCollection(1) = New System.Data.SqlClient.SqlCommand
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT PRETSS_PRE_CODE_FK_PK, PRETSS_CDF_TSS_CODE_FK_PK, PRETSS_NUMSEQ, PRETSS_DA" & _
                "TE_APPLI_PK, PRETSS_DATE_APPLIQUEE, PRETSS_TEXTE FROM theriaque.PRETSS_PRESENTAT" & _
                "ION_TAUX" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "WHERE PRETSS_PRE_CODE_FK_PK = @PRETSS_PRE_CODE_FK_PK"
            Me._commandCollection(1).CommandType = System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New System.Data.SqlClient.SqlParameter("@PRETSS_PRE_CODE_FK_PK", System.Data.SqlDbType.VarChar, 10, System.Data.ParameterDirection.Input, 0, 0, "PRETSS_PRE_CODE_FK_PK", System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
        End Sub

        <System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, True)> _
        Public Overridable Overloads Function Fill(ByVal dataTable As dsTheriaque_GrosseRequete.PRETSS_PRESENTATION_TAUXDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.[Select], True)> _
        Public Overridable Overloads Function GetData() As dsTheriaque_GrosseRequete.PRETSS_PRESENTATION_TAUXDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsTheriaque_GrosseRequete.PRETSS_PRESENTATION_TAUXDataTable = New dsTheriaque_GrosseRequete.PRETSS_PRESENTATION_TAUXDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function

        <System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, False)> _
        Public Overridable Overloads Function FillByCode(ByVal dataTable As dsTheriaque_GrosseRequete.PRETSS_PRESENTATION_TAUXDataTable, ByVal PRETSS_PRE_CODE_FK_PK As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (PRETSS_PRE_CODE_FK_PK Is Nothing) Then
                Throw New System.ArgumentNullException("PRETSS_PRE_CODE_FK_PK")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(PRETSS_PRE_CODE_FK_PK, String)
            End If
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.[Select], False)> _
        Public Overridable Overloads Function GetDataByCode(ByVal PRETSS_PRE_CODE_FK_PK As String) As dsTheriaque_GrosseRequete.PRETSS_PRESENTATION_TAUXDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (PRETSS_PRE_CODE_FK_PK Is Nothing) Then
                Throw New System.ArgumentNullException("PRETSS_PRE_CODE_FK_PK")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(PRETSS_PRE_CODE_FK_PK, String)
            End If
            Dim dataTable As dsTheriaque_GrosseRequete.PRETSS_PRESENTATION_TAUXDataTable = New dsTheriaque_GrosseRequete.PRETSS_PRESENTATION_TAUXDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function

        <System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataTable As dsTheriaque_GrosseRequete.PRETSS_PRESENTATION_TAUXDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function

        <System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataSet As dsTheriaque_GrosseRequete) As Integer
            Return Me.Adapter.Update(dataSet, "PRETSS_PRESENTATION_TAUX")
        End Function

        <System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataRow As System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New System.Data.DataRow() {dataRow})
        End Function

        <System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataRows() As System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function

        <System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, True)> _
        Public Overridable Overloads Function Delete(ByVal Original_PRETSS_PRE_CODE_FK_PK As String, ByVal Original_PRETSS_CDF_TSS_CODE_FK_PK As String, ByVal Original_PRETSS_NUMSEQ As Short, ByVal Original_PRETSS_DATE_APPLI_PK As System.Nullable(Of Date), ByVal Original_PRETSS_DATE_APPLIQUEE As System.Nullable(Of Date), ByVal Original_PRETSS_TEXTE As String) As Integer
            If (Original_PRETSS_PRE_CODE_FK_PK Is Nothing) Then
                Throw New System.ArgumentNullException("Original_PRETSS_PRE_CODE_FK_PK")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_PRETSS_PRE_CODE_FK_PK, String)
            End If
            If (Original_PRETSS_CDF_TSS_CODE_FK_PK Is Nothing) Then
                Throw New System.ArgumentNullException("Original_PRETSS_CDF_TSS_CODE_FK_PK")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_PRETSS_CDF_TSS_CODE_FK_PK, String)
            End If
            Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_PRETSS_NUMSEQ, Short)
            If (Original_PRETSS_DATE_APPLI_PK.HasValue = True) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_PRETSS_DATE_APPLI_PK.Value, Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = System.DBNull.Value
            End If
            If (Original_PRETSS_DATE_APPLIQUEE.HasValue = True) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_PRETSS_DATE_APPLIQUEE.Value, Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = System.DBNull.Value
            End If
            If (Original_PRETSS_TEXTE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_PRETSS_TEXTE, String)
            End If
            Dim previousConnectionState As System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And System.Data.ConnectionState.Open) _
                        <> System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open()
            End If
            Try
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close()
                End If
            End Try
        End Function

        <System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, True)> _
        Public Overridable Overloads Function Insert(ByVal PRETSS_PRE_CODE_FK_PK As String, ByVal PRETSS_CDF_TSS_CODE_FK_PK As String, ByVal PRETSS_NUMSEQ As Short, ByVal PRETSS_DATE_APPLI_PK As System.Nullable(Of Date), ByVal PRETSS_DATE_APPLIQUEE As System.Nullable(Of Date), ByVal PRETSS_TEXTE As String) As Integer
            If (PRETSS_PRE_CODE_FK_PK Is Nothing) Then
                Throw New System.ArgumentNullException("PRETSS_PRE_CODE_FK_PK")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(PRETSS_PRE_CODE_FK_PK, String)
            End If
            If (PRETSS_CDF_TSS_CODE_FK_PK Is Nothing) Then
                Throw New System.ArgumentNullException("PRETSS_CDF_TSS_CODE_FK_PK")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(PRETSS_CDF_TSS_CODE_FK_PK, String)
            End If
            Me.Adapter.InsertCommand.Parameters(2).Value = CType(PRETSS_NUMSEQ, Short)
            If (PRETSS_DATE_APPLI_PK.HasValue = True) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(PRETSS_DATE_APPLI_PK.Value, Date)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = System.DBNull.Value
            End If
            If (PRETSS_DATE_APPLIQUEE.HasValue = True) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(PRETSS_DATE_APPLIQUEE.Value, Date)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = System.DBNull.Value
            End If
            If (PRETSS_TEXTE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(PRETSS_TEXTE, String)
            End If
            Dim previousConnectionState As System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And System.Data.ConnectionState.Open) _
                        <> System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open()
            End If
            Try
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close()
                End If
            End Try
        End Function

        <System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, True)> _
        Public Overridable Overloads Function Update(ByVal PRETSS_PRE_CODE_FK_PK As String, ByVal PRETSS_CDF_TSS_CODE_FK_PK As String, ByVal PRETSS_NUMSEQ As Short, ByVal PRETSS_DATE_APPLI_PK As System.Nullable(Of Date), ByVal PRETSS_DATE_APPLIQUEE As System.Nullable(Of Date), ByVal PRETSS_TEXTE As String, ByVal Original_PRETSS_PRE_CODE_FK_PK As String, ByVal Original_PRETSS_CDF_TSS_CODE_FK_PK As String, ByVal Original_PRETSS_NUMSEQ As Short, ByVal Original_PRETSS_DATE_APPLI_PK As System.Nullable(Of Date), ByVal Original_PRETSS_DATE_APPLIQUEE As System.Nullable(Of Date), ByVal Original_PRETSS_TEXTE As String) As Integer
            If (PRETSS_PRE_CODE_FK_PK Is Nothing) Then
                Throw New System.ArgumentNullException("PRETSS_PRE_CODE_FK_PK")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(PRETSS_PRE_CODE_FK_PK, String)
            End If
            If (PRETSS_CDF_TSS_CODE_FK_PK Is Nothing) Then
                Throw New System.ArgumentNullException("PRETSS_CDF_TSS_CODE_FK_PK")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(PRETSS_CDF_TSS_CODE_FK_PK, String)
            End If
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(PRETSS_NUMSEQ, Short)
            If (PRETSS_DATE_APPLI_PK.HasValue = True) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(PRETSS_DATE_APPLI_PK.Value, Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = System.DBNull.Value
            End If
            If (PRETSS_DATE_APPLIQUEE.HasValue = True) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(PRETSS_DATE_APPLIQUEE.Value, Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = System.DBNull.Value
            End If
            If (PRETSS_TEXTE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(PRETSS_TEXTE, String)
            End If
            If (Original_PRETSS_PRE_CODE_FK_PK Is Nothing) Then
                Throw New System.ArgumentNullException("Original_PRETSS_PRE_CODE_FK_PK")
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Original_PRETSS_PRE_CODE_FK_PK, String)
            End If
            If (Original_PRETSS_CDF_TSS_CODE_FK_PK Is Nothing) Then
                Throw New System.ArgumentNullException("Original_PRETSS_CDF_TSS_CODE_FK_PK")
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Original_PRETSS_CDF_TSS_CODE_FK_PK, String)
            End If
            Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Original_PRETSS_NUMSEQ, Short)
            If (Original_PRETSS_DATE_APPLI_PK.HasValue = True) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(Original_PRETSS_DATE_APPLI_PK.Value, Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(10).Value = System.DBNull.Value
            End If
            If (Original_PRETSS_DATE_APPLIQUEE.HasValue = True) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(Original_PRETSS_DATE_APPLIQUEE.Value, Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(12).Value = System.DBNull.Value
            End If
            If (Original_PRETSS_TEXTE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(14).Value = System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(Original_PRETSS_TEXTE, String)
            End If
            Dim previousConnectionState As System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And System.Data.ConnectionState.Open) _
                        <> System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open()
            End If
            Try
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close()
                End If
            End Try
        End Function
    End Class
End Namespace
