'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("dsTheriaque_CriteresChoix"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class dsTheriaque_CriteresChoix
    Inherits Global.System.Data.DataSet
    
    Private tableATR_AVISCOMMISSIONTRANSPARENCE As ATR_AVISCOMMISSIONTRANSPARENCEDataTable
    
    Private tableATRASMR_AVISCOMTRANS_ASMR As ATRASMR_AVISCOMTRANS_ASMRDataTable
    
    Private tableATRSMR_AVISCOMTRANS_SMR As ATRSMR_AVISCOMTRANS_SMRDataTable
    
    Private tableATRSAC_AVISCOMTRANS_SUBACTIVE As ATRSAC_AVISCOMTRANS_SUBACTIVEDataTable
    
    Private tableATRPR_AVISCOMTRANS_PRODUIT As ATRPR_AVISCOMTRANS_PRODUITDataTable
    
    Private tableSPATR_SPEC_AVISTRANSPARENCE As SPATR_SPEC_AVISTRANSPARENCEDataTable
    
    Private tableCH_CHOIX As CH_CHOIXDataTable
    
    Private tableCHTIT_CH_TITRE2 As CHTIT_CH_TITRE2DataTable
    
    Private tableFTR_FICHETRANSPARENCE As FTR_FICHETRANSPARENCEDataTable
    
    Private tableFTH_FICHEINFOTHERAPEUTIQUE As FTH_FICHEINFOTHERAPEUTIQUEDataTable
    
    Private tableRMO As RMODataTable
    
    Private tableCLRMO_CLASSE_RMO As CLRMO_CLASSE_RMODataTable
    
    Private tableSPSMR_SERVICE_MEDICAL_RENDU As SPSMR_SERVICE_MEDICAL_RENDUDataTable
    
    Private tableSPFTH_SPEC_INFOTHERAPEUTIQUE As SPFTH_SPEC_INFOTHERAPEUTIQUEDataTable
    
    Private tableSPCH_SPECIALITE_CHOIX As SPCH_SPECIALITE_CHOIXDataTable
    
    Private tableCHSAC_CHOIX_SUBACTIVE As CHSAC_CHOIX_SUBACTIVEDataTable
    
    Private tableCHCPH_CHOIX_CLASSEPHARMTHER As CHCPH_CHOIX_CLASSEPHARMTHERDataTable
    
    Private tableCHCCH_CHOIX_CLASSECHIMIQUE As CHCCH_CHOIX_CLASSECHIMIQUEDataTable
    
    Private tableCHSAU_CHOIX_SUBAUXILIAIRE As CHSAU_CHOIX_SUBAUXILIAIREDataTable
    
    Private tableCHPR_CHOIX_PRODUIT As CHPR_CHOIX_PRODUITDataTable
    
    Private tableCHCATC_CHOIX_CLASSEATC As CHCATC_CHOIX_CLASSEATCDataTable
    
    Private tableFTHCPH_FIT_CLASSEPHARMTHER As FTHCPH_FIT_CLASSEPHARMTHERDataTable
    
    Private tableFTHCCH_FIT_CLASSECHIMIQUE As FTHCCH_FIT_CLASSECHIMIQUEDataTable
    
    Private tableFTHSAC_FIT_SUBACTIVE As FTHSAC_FIT_SUBACTIVEDataTable
    
    Private tableFTHSAU_FIT_SUBAUXILIAIRE As FTHSAU_FIT_SUBAUXILIAIREDataTable
    
    Private tableFTHPR_FIT_PRODUIT As FTHPR_FIT_PRODUITDataTable
    
    Private tableFTHCATC_FIT_CLASSEATC As FTHCATC_FIT_CLASSEATCDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("ATR_AVISCOMMISSIONTRANSPARENCE")) Is Nothing) Then
                MyBase.Tables.Add(New ATR_AVISCOMMISSIONTRANSPARENCEDataTable(ds.Tables("ATR_AVISCOMMISSIONTRANSPARENCE")))
            End If
            If (Not (ds.Tables("ATRASMR_AVISCOMTRANS_ASMR")) Is Nothing) Then
                MyBase.Tables.Add(New ATRASMR_AVISCOMTRANS_ASMRDataTable(ds.Tables("ATRASMR_AVISCOMTRANS_ASMR")))
            End If
            If (Not (ds.Tables("ATRSMR_AVISCOMTRANS_SMR")) Is Nothing) Then
                MyBase.Tables.Add(New ATRSMR_AVISCOMTRANS_SMRDataTable(ds.Tables("ATRSMR_AVISCOMTRANS_SMR")))
            End If
            If (Not (ds.Tables("ATRSAC_AVISCOMTRANS_SUBACTIVE")) Is Nothing) Then
                MyBase.Tables.Add(New ATRSAC_AVISCOMTRANS_SUBACTIVEDataTable(ds.Tables("ATRSAC_AVISCOMTRANS_SUBACTIVE")))
            End If
            If (Not (ds.Tables("ATRPR_AVISCOMTRANS_PRODUIT")) Is Nothing) Then
                MyBase.Tables.Add(New ATRPR_AVISCOMTRANS_PRODUITDataTable(ds.Tables("ATRPR_AVISCOMTRANS_PRODUIT")))
            End If
            If (Not (ds.Tables("SPATR_SPEC_AVISTRANSPARENCE")) Is Nothing) Then
                MyBase.Tables.Add(New SPATR_SPEC_AVISTRANSPARENCEDataTable(ds.Tables("SPATR_SPEC_AVISTRANSPARENCE")))
            End If
            If (Not (ds.Tables("CH_CHOIX")) Is Nothing) Then
                MyBase.Tables.Add(New CH_CHOIXDataTable(ds.Tables("CH_CHOIX")))
            End If
            If (Not (ds.Tables("CHTIT_CH_TITRE2")) Is Nothing) Then
                MyBase.Tables.Add(New CHTIT_CH_TITRE2DataTable(ds.Tables("CHTIT_CH_TITRE2")))
            End If
            If (Not (ds.Tables("FTR_FICHETRANSPARENCE")) Is Nothing) Then
                MyBase.Tables.Add(New FTR_FICHETRANSPARENCEDataTable(ds.Tables("FTR_FICHETRANSPARENCE")))
            End If
            If (Not (ds.Tables("FTH_FICHEINFOTHERAPEUTIQUE")) Is Nothing) Then
                MyBase.Tables.Add(New FTH_FICHEINFOTHERAPEUTIQUEDataTable(ds.Tables("FTH_FICHEINFOTHERAPEUTIQUE")))
            End If
            If (Not (ds.Tables("RMO")) Is Nothing) Then
                MyBase.Tables.Add(New RMODataTable(ds.Tables("RMO")))
            End If
            If (Not (ds.Tables("CLRMO_CLASSE_RMO")) Is Nothing) Then
                MyBase.Tables.Add(New CLRMO_CLASSE_RMODataTable(ds.Tables("CLRMO_CLASSE_RMO")))
            End If
            If (Not (ds.Tables("SPSMR_SERVICE_MEDICAL_RENDU")) Is Nothing) Then
                MyBase.Tables.Add(New SPSMR_SERVICE_MEDICAL_RENDUDataTable(ds.Tables("SPSMR_SERVICE_MEDICAL_RENDU")))
            End If
            If (Not (ds.Tables("SPFTH_SPEC_INFOTHERAPEUTIQUE")) Is Nothing) Then
                MyBase.Tables.Add(New SPFTH_SPEC_INFOTHERAPEUTIQUEDataTable(ds.Tables("SPFTH_SPEC_INFOTHERAPEUTIQUE")))
            End If
            If (Not (ds.Tables("SPCH_SPECIALITE_CHOIX")) Is Nothing) Then
                MyBase.Tables.Add(New SPCH_SPECIALITE_CHOIXDataTable(ds.Tables("SPCH_SPECIALITE_CHOIX")))
            End If
            If (Not (ds.Tables("CHSAC_CHOIX_SUBACTIVE")) Is Nothing) Then
                MyBase.Tables.Add(New CHSAC_CHOIX_SUBACTIVEDataTable(ds.Tables("CHSAC_CHOIX_SUBACTIVE")))
            End If
            If (Not (ds.Tables("CHCPH_CHOIX_CLASSEPHARMTHER")) Is Nothing) Then
                MyBase.Tables.Add(New CHCPH_CHOIX_CLASSEPHARMTHERDataTable(ds.Tables("CHCPH_CHOIX_CLASSEPHARMTHER")))
            End If
            If (Not (ds.Tables("CHCCH_CHOIX_CLASSECHIMIQUE")) Is Nothing) Then
                MyBase.Tables.Add(New CHCCH_CHOIX_CLASSECHIMIQUEDataTable(ds.Tables("CHCCH_CHOIX_CLASSECHIMIQUE")))
            End If
            If (Not (ds.Tables("CHSAU_CHOIX_SUBAUXILIAIRE")) Is Nothing) Then
                MyBase.Tables.Add(New CHSAU_CHOIX_SUBAUXILIAIREDataTable(ds.Tables("CHSAU_CHOIX_SUBAUXILIAIRE")))
            End If
            If (Not (ds.Tables("CHPR_CHOIX_PRODUIT")) Is Nothing) Then
                MyBase.Tables.Add(New CHPR_CHOIX_PRODUITDataTable(ds.Tables("CHPR_CHOIX_PRODUIT")))
            End If
            If (Not (ds.Tables("CHCATC_CHOIX_CLASSEATC")) Is Nothing) Then
                MyBase.Tables.Add(New CHCATC_CHOIX_CLASSEATCDataTable(ds.Tables("CHCATC_CHOIX_CLASSEATC")))
            End If
            If (Not (ds.Tables("FTHCPH_FIT_CLASSEPHARMTHER")) Is Nothing) Then
                MyBase.Tables.Add(New FTHCPH_FIT_CLASSEPHARMTHERDataTable(ds.Tables("FTHCPH_FIT_CLASSEPHARMTHER")))
            End If
            If (Not (ds.Tables("FTHCCH_FIT_CLASSECHIMIQUE")) Is Nothing) Then
                MyBase.Tables.Add(New FTHCCH_FIT_CLASSECHIMIQUEDataTable(ds.Tables("FTHCCH_FIT_CLASSECHIMIQUE")))
            End If
            If (Not (ds.Tables("FTHSAC_FIT_SUBACTIVE")) Is Nothing) Then
                MyBase.Tables.Add(New FTHSAC_FIT_SUBACTIVEDataTable(ds.Tables("FTHSAC_FIT_SUBACTIVE")))
            End If
            If (Not (ds.Tables("FTHSAU_FIT_SUBAUXILIAIRE")) Is Nothing) Then
                MyBase.Tables.Add(New FTHSAU_FIT_SUBAUXILIAIREDataTable(ds.Tables("FTHSAU_FIT_SUBAUXILIAIRE")))
            End If
            If (Not (ds.Tables("FTHPR_FIT_PRODUIT")) Is Nothing) Then
                MyBase.Tables.Add(New FTHPR_FIT_PRODUITDataTable(ds.Tables("FTHPR_FIT_PRODUIT")))
            End If
            If (Not (ds.Tables("FTHCATC_FIT_CLASSEATC")) Is Nothing) Then
                MyBase.Tables.Add(New FTHCATC_FIT_CLASSEATCDataTable(ds.Tables("FTHCATC_FIT_CLASSEATC")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property ATR_AVISCOMMISSIONTRANSPARENCE() As ATR_AVISCOMMISSIONTRANSPARENCEDataTable
        Get
            Return Me.tableATR_AVISCOMMISSIONTRANSPARENCE
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property ATRASMR_AVISCOMTRANS_ASMR() As ATRASMR_AVISCOMTRANS_ASMRDataTable
        Get
            Return Me.tableATRASMR_AVISCOMTRANS_ASMR
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property ATRSMR_AVISCOMTRANS_SMR() As ATRSMR_AVISCOMTRANS_SMRDataTable
        Get
            Return Me.tableATRSMR_AVISCOMTRANS_SMR
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property ATRSAC_AVISCOMTRANS_SUBACTIVE() As ATRSAC_AVISCOMTRANS_SUBACTIVEDataTable
        Get
            Return Me.tableATRSAC_AVISCOMTRANS_SUBACTIVE
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property ATRPR_AVISCOMTRANS_PRODUIT() As ATRPR_AVISCOMTRANS_PRODUITDataTable
        Get
            Return Me.tableATRPR_AVISCOMTRANS_PRODUIT
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property SPATR_SPEC_AVISTRANSPARENCE() As SPATR_SPEC_AVISTRANSPARENCEDataTable
        Get
            Return Me.tableSPATR_SPEC_AVISTRANSPARENCE
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property CH_CHOIX() As CH_CHOIXDataTable
        Get
            Return Me.tableCH_CHOIX
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property CHTIT_CH_TITRE2() As CHTIT_CH_TITRE2DataTable
        Get
            Return Me.tableCHTIT_CH_TITRE2
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property FTR_FICHETRANSPARENCE() As FTR_FICHETRANSPARENCEDataTable
        Get
            Return Me.tableFTR_FICHETRANSPARENCE
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property FTH_FICHEINFOTHERAPEUTIQUE() As FTH_FICHEINFOTHERAPEUTIQUEDataTable
        Get
            Return Me.tableFTH_FICHEINFOTHERAPEUTIQUE
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property RMO() As RMODataTable
        Get
            Return Me.tableRMO
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property CLRMO_CLASSE_RMO() As CLRMO_CLASSE_RMODataTable
        Get
            Return Me.tableCLRMO_CLASSE_RMO
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property SPSMR_SERVICE_MEDICAL_RENDU() As SPSMR_SERVICE_MEDICAL_RENDUDataTable
        Get
            Return Me.tableSPSMR_SERVICE_MEDICAL_RENDU
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property SPFTH_SPEC_INFOTHERAPEUTIQUE() As SPFTH_SPEC_INFOTHERAPEUTIQUEDataTable
        Get
            Return Me.tableSPFTH_SPEC_INFOTHERAPEUTIQUE
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property SPCH_SPECIALITE_CHOIX() As SPCH_SPECIALITE_CHOIXDataTable
        Get
            Return Me.tableSPCH_SPECIALITE_CHOIX
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property CHSAC_CHOIX_SUBACTIVE() As CHSAC_CHOIX_SUBACTIVEDataTable
        Get
            Return Me.tableCHSAC_CHOIX_SUBACTIVE
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property CHCPH_CHOIX_CLASSEPHARMTHER() As CHCPH_CHOIX_CLASSEPHARMTHERDataTable
        Get
            Return Me.tableCHCPH_CHOIX_CLASSEPHARMTHER
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property CHCCH_CHOIX_CLASSECHIMIQUE() As CHCCH_CHOIX_CLASSECHIMIQUEDataTable
        Get
            Return Me.tableCHCCH_CHOIX_CLASSECHIMIQUE
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property CHSAU_CHOIX_SUBAUXILIAIRE() As CHSAU_CHOIX_SUBAUXILIAIREDataTable
        Get
            Return Me.tableCHSAU_CHOIX_SUBAUXILIAIRE
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property CHPR_CHOIX_PRODUIT() As CHPR_CHOIX_PRODUITDataTable
        Get
            Return Me.tableCHPR_CHOIX_PRODUIT
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property CHCATC_CHOIX_CLASSEATC() As CHCATC_CHOIX_CLASSEATCDataTable
        Get
            Return Me.tableCHCATC_CHOIX_CLASSEATC
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property FTHCPH_FIT_CLASSEPHARMTHER() As FTHCPH_FIT_CLASSEPHARMTHERDataTable
        Get
            Return Me.tableFTHCPH_FIT_CLASSEPHARMTHER
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property FTHCCH_FIT_CLASSECHIMIQUE() As FTHCCH_FIT_CLASSECHIMIQUEDataTable
        Get
            Return Me.tableFTHCCH_FIT_CLASSECHIMIQUE
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property FTHSAC_FIT_SUBACTIVE() As FTHSAC_FIT_SUBACTIVEDataTable
        Get
            Return Me.tableFTHSAC_FIT_SUBACTIVE
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property FTHSAU_FIT_SUBAUXILIAIRE() As FTHSAU_FIT_SUBAUXILIAIREDataTable
        Get
            Return Me.tableFTHSAU_FIT_SUBAUXILIAIRE
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property FTHPR_FIT_PRODUIT() As FTHPR_FIT_PRODUITDataTable
        Get
            Return Me.tableFTHPR_FIT_PRODUIT
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property FTHCATC_FIT_CLASSEATC() As FTHCATC_FIT_CLASSEATCDataTable
        Get
            Return Me.tableFTHCATC_FIT_CLASSEATC
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As dsTheriaque_CriteresChoix = CType(MyBase.Clone,dsTheriaque_CriteresChoix)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("ATR_AVISCOMMISSIONTRANSPARENCE")) Is Nothing) Then
                MyBase.Tables.Add(New ATR_AVISCOMMISSIONTRANSPARENCEDataTable(ds.Tables("ATR_AVISCOMMISSIONTRANSPARENCE")))
            End If
            If (Not (ds.Tables("ATRASMR_AVISCOMTRANS_ASMR")) Is Nothing) Then
                MyBase.Tables.Add(New ATRASMR_AVISCOMTRANS_ASMRDataTable(ds.Tables("ATRASMR_AVISCOMTRANS_ASMR")))
            End If
            If (Not (ds.Tables("ATRSMR_AVISCOMTRANS_SMR")) Is Nothing) Then
                MyBase.Tables.Add(New ATRSMR_AVISCOMTRANS_SMRDataTable(ds.Tables("ATRSMR_AVISCOMTRANS_SMR")))
            End If
            If (Not (ds.Tables("ATRSAC_AVISCOMTRANS_SUBACTIVE")) Is Nothing) Then
                MyBase.Tables.Add(New ATRSAC_AVISCOMTRANS_SUBACTIVEDataTable(ds.Tables("ATRSAC_AVISCOMTRANS_SUBACTIVE")))
            End If
            If (Not (ds.Tables("ATRPR_AVISCOMTRANS_PRODUIT")) Is Nothing) Then
                MyBase.Tables.Add(New ATRPR_AVISCOMTRANS_PRODUITDataTable(ds.Tables("ATRPR_AVISCOMTRANS_PRODUIT")))
            End If
            If (Not (ds.Tables("SPATR_SPEC_AVISTRANSPARENCE")) Is Nothing) Then
                MyBase.Tables.Add(New SPATR_SPEC_AVISTRANSPARENCEDataTable(ds.Tables("SPATR_SPEC_AVISTRANSPARENCE")))
            End If
            If (Not (ds.Tables("CH_CHOIX")) Is Nothing) Then
                MyBase.Tables.Add(New CH_CHOIXDataTable(ds.Tables("CH_CHOIX")))
            End If
            If (Not (ds.Tables("CHTIT_CH_TITRE2")) Is Nothing) Then
                MyBase.Tables.Add(New CHTIT_CH_TITRE2DataTable(ds.Tables("CHTIT_CH_TITRE2")))
            End If
            If (Not (ds.Tables("FTR_FICHETRANSPARENCE")) Is Nothing) Then
                MyBase.Tables.Add(New FTR_FICHETRANSPARENCEDataTable(ds.Tables("FTR_FICHETRANSPARENCE")))
            End If
            If (Not (ds.Tables("FTH_FICHEINFOTHERAPEUTIQUE")) Is Nothing) Then
                MyBase.Tables.Add(New FTH_FICHEINFOTHERAPEUTIQUEDataTable(ds.Tables("FTH_FICHEINFOTHERAPEUTIQUE")))
            End If
            If (Not (ds.Tables("RMO")) Is Nothing) Then
                MyBase.Tables.Add(New RMODataTable(ds.Tables("RMO")))
            End If
            If (Not (ds.Tables("CLRMO_CLASSE_RMO")) Is Nothing) Then
                MyBase.Tables.Add(New CLRMO_CLASSE_RMODataTable(ds.Tables("CLRMO_CLASSE_RMO")))
            End If
            If (Not (ds.Tables("SPSMR_SERVICE_MEDICAL_RENDU")) Is Nothing) Then
                MyBase.Tables.Add(New SPSMR_SERVICE_MEDICAL_RENDUDataTable(ds.Tables("SPSMR_SERVICE_MEDICAL_RENDU")))
            End If
            If (Not (ds.Tables("SPFTH_SPEC_INFOTHERAPEUTIQUE")) Is Nothing) Then
                MyBase.Tables.Add(New SPFTH_SPEC_INFOTHERAPEUTIQUEDataTable(ds.Tables("SPFTH_SPEC_INFOTHERAPEUTIQUE")))
            End If
            If (Not (ds.Tables("SPCH_SPECIALITE_CHOIX")) Is Nothing) Then
                MyBase.Tables.Add(New SPCH_SPECIALITE_CHOIXDataTable(ds.Tables("SPCH_SPECIALITE_CHOIX")))
            End If
            If (Not (ds.Tables("CHSAC_CHOIX_SUBACTIVE")) Is Nothing) Then
                MyBase.Tables.Add(New CHSAC_CHOIX_SUBACTIVEDataTable(ds.Tables("CHSAC_CHOIX_SUBACTIVE")))
            End If
            If (Not (ds.Tables("CHCPH_CHOIX_CLASSEPHARMTHER")) Is Nothing) Then
                MyBase.Tables.Add(New CHCPH_CHOIX_CLASSEPHARMTHERDataTable(ds.Tables("CHCPH_CHOIX_CLASSEPHARMTHER")))
            End If
            If (Not (ds.Tables("CHCCH_CHOIX_CLASSECHIMIQUE")) Is Nothing) Then
                MyBase.Tables.Add(New CHCCH_CHOIX_CLASSECHIMIQUEDataTable(ds.Tables("CHCCH_CHOIX_CLASSECHIMIQUE")))
            End If
            If (Not (ds.Tables("CHSAU_CHOIX_SUBAUXILIAIRE")) Is Nothing) Then
                MyBase.Tables.Add(New CHSAU_CHOIX_SUBAUXILIAIREDataTable(ds.Tables("CHSAU_CHOIX_SUBAUXILIAIRE")))
            End If
            If (Not (ds.Tables("CHPR_CHOIX_PRODUIT")) Is Nothing) Then
                MyBase.Tables.Add(New CHPR_CHOIX_PRODUITDataTable(ds.Tables("CHPR_CHOIX_PRODUIT")))
            End If
            If (Not (ds.Tables("CHCATC_CHOIX_CLASSEATC")) Is Nothing) Then
                MyBase.Tables.Add(New CHCATC_CHOIX_CLASSEATCDataTable(ds.Tables("CHCATC_CHOIX_CLASSEATC")))
            End If
            If (Not (ds.Tables("FTHCPH_FIT_CLASSEPHARMTHER")) Is Nothing) Then
                MyBase.Tables.Add(New FTHCPH_FIT_CLASSEPHARMTHERDataTable(ds.Tables("FTHCPH_FIT_CLASSEPHARMTHER")))
            End If
            If (Not (ds.Tables("FTHCCH_FIT_CLASSECHIMIQUE")) Is Nothing) Then
                MyBase.Tables.Add(New FTHCCH_FIT_CLASSECHIMIQUEDataTable(ds.Tables("FTHCCH_FIT_CLASSECHIMIQUE")))
            End If
            If (Not (ds.Tables("FTHSAC_FIT_SUBACTIVE")) Is Nothing) Then
                MyBase.Tables.Add(New FTHSAC_FIT_SUBACTIVEDataTable(ds.Tables("FTHSAC_FIT_SUBACTIVE")))
            End If
            If (Not (ds.Tables("FTHSAU_FIT_SUBAUXILIAIRE")) Is Nothing) Then
                MyBase.Tables.Add(New FTHSAU_FIT_SUBAUXILIAIREDataTable(ds.Tables("FTHSAU_FIT_SUBAUXILIAIRE")))
            End If
            If (Not (ds.Tables("FTHPR_FIT_PRODUIT")) Is Nothing) Then
                MyBase.Tables.Add(New FTHPR_FIT_PRODUITDataTable(ds.Tables("FTHPR_FIT_PRODUIT")))
            End If
            If (Not (ds.Tables("FTHCATC_FIT_CLASSEATC")) Is Nothing) Then
                MyBase.Tables.Add(New FTHCATC_FIT_CLASSEATCDataTable(ds.Tables("FTHCATC_FIT_CLASSEATC")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableATR_AVISCOMMISSIONTRANSPARENCE = CType(MyBase.Tables("ATR_AVISCOMMISSIONTRANSPARENCE"),ATR_AVISCOMMISSIONTRANSPARENCEDataTable)
        If (initTable = true) Then
            If (Not (Me.tableATR_AVISCOMMISSIONTRANSPARENCE) Is Nothing) Then
                Me.tableATR_AVISCOMMISSIONTRANSPARENCE.InitVars
            End If
        End If
        Me.tableATRASMR_AVISCOMTRANS_ASMR = CType(MyBase.Tables("ATRASMR_AVISCOMTRANS_ASMR"),ATRASMR_AVISCOMTRANS_ASMRDataTable)
        If (initTable = true) Then
            If (Not (Me.tableATRASMR_AVISCOMTRANS_ASMR) Is Nothing) Then
                Me.tableATRASMR_AVISCOMTRANS_ASMR.InitVars
            End If
        End If
        Me.tableATRSMR_AVISCOMTRANS_SMR = CType(MyBase.Tables("ATRSMR_AVISCOMTRANS_SMR"),ATRSMR_AVISCOMTRANS_SMRDataTable)
        If (initTable = true) Then
            If (Not (Me.tableATRSMR_AVISCOMTRANS_SMR) Is Nothing) Then
                Me.tableATRSMR_AVISCOMTRANS_SMR.InitVars
            End If
        End If
        Me.tableATRSAC_AVISCOMTRANS_SUBACTIVE = CType(MyBase.Tables("ATRSAC_AVISCOMTRANS_SUBACTIVE"),ATRSAC_AVISCOMTRANS_SUBACTIVEDataTable)
        If (initTable = true) Then
            If (Not (Me.tableATRSAC_AVISCOMTRANS_SUBACTIVE) Is Nothing) Then
                Me.tableATRSAC_AVISCOMTRANS_SUBACTIVE.InitVars
            End If
        End If
        Me.tableATRPR_AVISCOMTRANS_PRODUIT = CType(MyBase.Tables("ATRPR_AVISCOMTRANS_PRODUIT"),ATRPR_AVISCOMTRANS_PRODUITDataTable)
        If (initTable = true) Then
            If (Not (Me.tableATRPR_AVISCOMTRANS_PRODUIT) Is Nothing) Then
                Me.tableATRPR_AVISCOMTRANS_PRODUIT.InitVars
            End If
        End If
        Me.tableSPATR_SPEC_AVISTRANSPARENCE = CType(MyBase.Tables("SPATR_SPEC_AVISTRANSPARENCE"),SPATR_SPEC_AVISTRANSPARENCEDataTable)
        If (initTable = true) Then
            If (Not (Me.tableSPATR_SPEC_AVISTRANSPARENCE) Is Nothing) Then
                Me.tableSPATR_SPEC_AVISTRANSPARENCE.InitVars
            End If
        End If
        Me.tableCH_CHOIX = CType(MyBase.Tables("CH_CHOIX"),CH_CHOIXDataTable)
        If (initTable = true) Then
            If (Not (Me.tableCH_CHOIX) Is Nothing) Then
                Me.tableCH_CHOIX.InitVars
            End If
        End If
        Me.tableCHTIT_CH_TITRE2 = CType(MyBase.Tables("CHTIT_CH_TITRE2"),CHTIT_CH_TITRE2DataTable)
        If (initTable = true) Then
            If (Not (Me.tableCHTIT_CH_TITRE2) Is Nothing) Then
                Me.tableCHTIT_CH_TITRE2.InitVars
            End If
        End If
        Me.tableFTR_FICHETRANSPARENCE = CType(MyBase.Tables("FTR_FICHETRANSPARENCE"),FTR_FICHETRANSPARENCEDataTable)
        If (initTable = true) Then
            If (Not (Me.tableFTR_FICHETRANSPARENCE) Is Nothing) Then
                Me.tableFTR_FICHETRANSPARENCE.InitVars
            End If
        End If
        Me.tableFTH_FICHEINFOTHERAPEUTIQUE = CType(MyBase.Tables("FTH_FICHEINFOTHERAPEUTIQUE"),FTH_FICHEINFOTHERAPEUTIQUEDataTable)
        If (initTable = true) Then
            If (Not (Me.tableFTH_FICHEINFOTHERAPEUTIQUE) Is Nothing) Then
                Me.tableFTH_FICHEINFOTHERAPEUTIQUE.InitVars
            End If
        End If
        Me.tableRMO = CType(MyBase.Tables("RMO"),RMODataTable)
        If (initTable = true) Then
            If (Not (Me.tableRMO) Is Nothing) Then
                Me.tableRMO.InitVars
            End If
        End If
        Me.tableCLRMO_CLASSE_RMO = CType(MyBase.Tables("CLRMO_CLASSE_RMO"),CLRMO_CLASSE_RMODataTable)
        If (initTable = true) Then
            If (Not (Me.tableCLRMO_CLASSE_RMO) Is Nothing) Then
                Me.tableCLRMO_CLASSE_RMO.InitVars
            End If
        End If
        Me.tableSPSMR_SERVICE_MEDICAL_RENDU = CType(MyBase.Tables("SPSMR_SERVICE_MEDICAL_RENDU"),SPSMR_SERVICE_MEDICAL_RENDUDataTable)
        If (initTable = true) Then
            If (Not (Me.tableSPSMR_SERVICE_MEDICAL_RENDU) Is Nothing) Then
                Me.tableSPSMR_SERVICE_MEDICAL_RENDU.InitVars
            End If
        End If
        Me.tableSPFTH_SPEC_INFOTHERAPEUTIQUE = CType(MyBase.Tables("SPFTH_SPEC_INFOTHERAPEUTIQUE"),SPFTH_SPEC_INFOTHERAPEUTIQUEDataTable)
        If (initTable = true) Then
            If (Not (Me.tableSPFTH_SPEC_INFOTHERAPEUTIQUE) Is Nothing) Then
                Me.tableSPFTH_SPEC_INFOTHERAPEUTIQUE.InitVars
            End If
        End If
        Me.tableSPCH_SPECIALITE_CHOIX = CType(MyBase.Tables("SPCH_SPECIALITE_CHOIX"),SPCH_SPECIALITE_CHOIXDataTable)
        If (initTable = true) Then
            If (Not (Me.tableSPCH_SPECIALITE_CHOIX) Is Nothing) Then
                Me.tableSPCH_SPECIALITE_CHOIX.InitVars
            End If
        End If
        Me.tableCHSAC_CHOIX_SUBACTIVE = CType(MyBase.Tables("CHSAC_CHOIX_SUBACTIVE"),CHSAC_CHOIX_SUBACTIVEDataTable)
        If (initTable = true) Then
            If (Not (Me.tableCHSAC_CHOIX_SUBACTIVE) Is Nothing) Then
                Me.tableCHSAC_CHOIX_SUBACTIVE.InitVars
            End If
        End If
        Me.tableCHCPH_CHOIX_CLASSEPHARMTHER = CType(MyBase.Tables("CHCPH_CHOIX_CLASSEPHARMTHER"),CHCPH_CHOIX_CLASSEPHARMTHERDataTable)
        If (initTable = true) Then
            If (Not (Me.tableCHCPH_CHOIX_CLASSEPHARMTHER) Is Nothing) Then
                Me.tableCHCPH_CHOIX_CLASSEPHARMTHER.InitVars
            End If
        End If
        Me.tableCHCCH_CHOIX_CLASSECHIMIQUE = CType(MyBase.Tables("CHCCH_CHOIX_CLASSECHIMIQUE"),CHCCH_CHOIX_CLASSECHIMIQUEDataTable)
        If (initTable = true) Then
            If (Not (Me.tableCHCCH_CHOIX_CLASSECHIMIQUE) Is Nothing) Then
                Me.tableCHCCH_CHOIX_CLASSECHIMIQUE.InitVars
            End If
        End If
        Me.tableCHSAU_CHOIX_SUBAUXILIAIRE = CType(MyBase.Tables("CHSAU_CHOIX_SUBAUXILIAIRE"),CHSAU_CHOIX_SUBAUXILIAIREDataTable)
        If (initTable = true) Then
            If (Not (Me.tableCHSAU_CHOIX_SUBAUXILIAIRE) Is Nothing) Then
                Me.tableCHSAU_CHOIX_SUBAUXILIAIRE.InitVars
            End If
        End If
        Me.tableCHPR_CHOIX_PRODUIT = CType(MyBase.Tables("CHPR_CHOIX_PRODUIT"),CHPR_CHOIX_PRODUITDataTable)
        If (initTable = true) Then
            If (Not (Me.tableCHPR_CHOIX_PRODUIT) Is Nothing) Then
                Me.tableCHPR_CHOIX_PRODUIT.InitVars
            End If
        End If
        Me.tableCHCATC_CHOIX_CLASSEATC = CType(MyBase.Tables("CHCATC_CHOIX_CLASSEATC"),CHCATC_CHOIX_CLASSEATCDataTable)
        If (initTable = true) Then
            If (Not (Me.tableCHCATC_CHOIX_CLASSEATC) Is Nothing) Then
                Me.tableCHCATC_CHOIX_CLASSEATC.InitVars
            End If
        End If
        Me.tableFTHCPH_FIT_CLASSEPHARMTHER = CType(MyBase.Tables("FTHCPH_FIT_CLASSEPHARMTHER"),FTHCPH_FIT_CLASSEPHARMTHERDataTable)
        If (initTable = true) Then
            If (Not (Me.tableFTHCPH_FIT_CLASSEPHARMTHER) Is Nothing) Then
                Me.tableFTHCPH_FIT_CLASSEPHARMTHER.InitVars
            End If
        End If
        Me.tableFTHCCH_FIT_CLASSECHIMIQUE = CType(MyBase.Tables("FTHCCH_FIT_CLASSECHIMIQUE"),FTHCCH_FIT_CLASSECHIMIQUEDataTable)
        If (initTable = true) Then
            If (Not (Me.tableFTHCCH_FIT_CLASSECHIMIQUE) Is Nothing) Then
                Me.tableFTHCCH_FIT_CLASSECHIMIQUE.InitVars
            End If
        End If
        Me.tableFTHSAC_FIT_SUBACTIVE = CType(MyBase.Tables("FTHSAC_FIT_SUBACTIVE"),FTHSAC_FIT_SUBACTIVEDataTable)
        If (initTable = true) Then
            If (Not (Me.tableFTHSAC_FIT_SUBACTIVE) Is Nothing) Then
                Me.tableFTHSAC_FIT_SUBACTIVE.InitVars
            End If
        End If
        Me.tableFTHSAU_FIT_SUBAUXILIAIRE = CType(MyBase.Tables("FTHSAU_FIT_SUBAUXILIAIRE"),FTHSAU_FIT_SUBAUXILIAIREDataTable)
        If (initTable = true) Then
            If (Not (Me.tableFTHSAU_FIT_SUBAUXILIAIRE) Is Nothing) Then
                Me.tableFTHSAU_FIT_SUBAUXILIAIRE.InitVars
            End If
        End If
        Me.tableFTHPR_FIT_PRODUIT = CType(MyBase.Tables("FTHPR_FIT_PRODUIT"),FTHPR_FIT_PRODUITDataTable)
        If (initTable = true) Then
            If (Not (Me.tableFTHPR_FIT_PRODUIT) Is Nothing) Then
                Me.tableFTHPR_FIT_PRODUIT.InitVars
            End If
        End If
        Me.tableFTHCATC_FIT_CLASSEATC = CType(MyBase.Tables("FTHCATC_FIT_CLASSEATC"),FTHCATC_FIT_CLASSEATCDataTable)
        If (initTable = true) Then
            If (Not (Me.tableFTHCATC_FIT_CLASSEATC) Is Nothing) Then
                Me.tableFTHCATC_FIT_CLASSEATC.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "dsTheriaque_CriteresChoix"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/dsTheriaque_CriteresChoix.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableATR_AVISCOMMISSIONTRANSPARENCE = New ATR_AVISCOMMISSIONTRANSPARENCEDataTable()
        MyBase.Tables.Add(Me.tableATR_AVISCOMMISSIONTRANSPARENCE)
        Me.tableATRASMR_AVISCOMTRANS_ASMR = New ATRASMR_AVISCOMTRANS_ASMRDataTable()
        MyBase.Tables.Add(Me.tableATRASMR_AVISCOMTRANS_ASMR)
        Me.tableATRSMR_AVISCOMTRANS_SMR = New ATRSMR_AVISCOMTRANS_SMRDataTable()
        MyBase.Tables.Add(Me.tableATRSMR_AVISCOMTRANS_SMR)
        Me.tableATRSAC_AVISCOMTRANS_SUBACTIVE = New ATRSAC_AVISCOMTRANS_SUBACTIVEDataTable()
        MyBase.Tables.Add(Me.tableATRSAC_AVISCOMTRANS_SUBACTIVE)
        Me.tableATRPR_AVISCOMTRANS_PRODUIT = New ATRPR_AVISCOMTRANS_PRODUITDataTable()
        MyBase.Tables.Add(Me.tableATRPR_AVISCOMTRANS_PRODUIT)
        Me.tableSPATR_SPEC_AVISTRANSPARENCE = New SPATR_SPEC_AVISTRANSPARENCEDataTable()
        MyBase.Tables.Add(Me.tableSPATR_SPEC_AVISTRANSPARENCE)
        Me.tableCH_CHOIX = New CH_CHOIXDataTable()
        MyBase.Tables.Add(Me.tableCH_CHOIX)
        Me.tableCHTIT_CH_TITRE2 = New CHTIT_CH_TITRE2DataTable()
        MyBase.Tables.Add(Me.tableCHTIT_CH_TITRE2)
        Me.tableFTR_FICHETRANSPARENCE = New FTR_FICHETRANSPARENCEDataTable()
        MyBase.Tables.Add(Me.tableFTR_FICHETRANSPARENCE)
        Me.tableFTH_FICHEINFOTHERAPEUTIQUE = New FTH_FICHEINFOTHERAPEUTIQUEDataTable()
        MyBase.Tables.Add(Me.tableFTH_FICHEINFOTHERAPEUTIQUE)
        Me.tableRMO = New RMODataTable()
        MyBase.Tables.Add(Me.tableRMO)
        Me.tableCLRMO_CLASSE_RMO = New CLRMO_CLASSE_RMODataTable()
        MyBase.Tables.Add(Me.tableCLRMO_CLASSE_RMO)
        Me.tableSPSMR_SERVICE_MEDICAL_RENDU = New SPSMR_SERVICE_MEDICAL_RENDUDataTable()
        MyBase.Tables.Add(Me.tableSPSMR_SERVICE_MEDICAL_RENDU)
        Me.tableSPFTH_SPEC_INFOTHERAPEUTIQUE = New SPFTH_SPEC_INFOTHERAPEUTIQUEDataTable()
        MyBase.Tables.Add(Me.tableSPFTH_SPEC_INFOTHERAPEUTIQUE)
        Me.tableSPCH_SPECIALITE_CHOIX = New SPCH_SPECIALITE_CHOIXDataTable()
        MyBase.Tables.Add(Me.tableSPCH_SPECIALITE_CHOIX)
        Me.tableCHSAC_CHOIX_SUBACTIVE = New CHSAC_CHOIX_SUBACTIVEDataTable()
        MyBase.Tables.Add(Me.tableCHSAC_CHOIX_SUBACTIVE)
        Me.tableCHCPH_CHOIX_CLASSEPHARMTHER = New CHCPH_CHOIX_CLASSEPHARMTHERDataTable()
        MyBase.Tables.Add(Me.tableCHCPH_CHOIX_CLASSEPHARMTHER)
        Me.tableCHCCH_CHOIX_CLASSECHIMIQUE = New CHCCH_CHOIX_CLASSECHIMIQUEDataTable()
        MyBase.Tables.Add(Me.tableCHCCH_CHOIX_CLASSECHIMIQUE)
        Me.tableCHSAU_CHOIX_SUBAUXILIAIRE = New CHSAU_CHOIX_SUBAUXILIAIREDataTable()
        MyBase.Tables.Add(Me.tableCHSAU_CHOIX_SUBAUXILIAIRE)
        Me.tableCHPR_CHOIX_PRODUIT = New CHPR_CHOIX_PRODUITDataTable()
        MyBase.Tables.Add(Me.tableCHPR_CHOIX_PRODUIT)
        Me.tableCHCATC_CHOIX_CLASSEATC = New CHCATC_CHOIX_CLASSEATCDataTable()
        MyBase.Tables.Add(Me.tableCHCATC_CHOIX_CLASSEATC)
        Me.tableFTHCPH_FIT_CLASSEPHARMTHER = New FTHCPH_FIT_CLASSEPHARMTHERDataTable()
        MyBase.Tables.Add(Me.tableFTHCPH_FIT_CLASSEPHARMTHER)
        Me.tableFTHCCH_FIT_CLASSECHIMIQUE = New FTHCCH_FIT_CLASSECHIMIQUEDataTable()
        MyBase.Tables.Add(Me.tableFTHCCH_FIT_CLASSECHIMIQUE)
        Me.tableFTHSAC_FIT_SUBACTIVE = New FTHSAC_FIT_SUBACTIVEDataTable()
        MyBase.Tables.Add(Me.tableFTHSAC_FIT_SUBACTIVE)
        Me.tableFTHSAU_FIT_SUBAUXILIAIRE = New FTHSAU_FIT_SUBAUXILIAIREDataTable()
        MyBase.Tables.Add(Me.tableFTHSAU_FIT_SUBAUXILIAIRE)
        Me.tableFTHPR_FIT_PRODUIT = New FTHPR_FIT_PRODUITDataTable()
        MyBase.Tables.Add(Me.tableFTHPR_FIT_PRODUIT)
        Me.tableFTHCATC_FIT_CLASSEATC = New FTHCATC_FIT_CLASSEATCDataTable()
        MyBase.Tables.Add(Me.tableFTHCATC_FIT_CLASSEATC)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeATR_AVISCOMMISSIONTRANSPARENCE() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeATRASMR_AVISCOMTRANS_ASMR() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeATRSMR_AVISCOMTRANS_SMR() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeATRSAC_AVISCOMTRANS_SUBACTIVE() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeATRPR_AVISCOMTRANS_PRODUIT() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeSPATR_SPEC_AVISTRANSPARENCE() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeCH_CHOIX() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeCHTIT_CH_TITRE2() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeFTR_FICHETRANSPARENCE() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeFTH_FICHEINFOTHERAPEUTIQUE() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeRMO() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeCLRMO_CLASSE_RMO() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeSPSMR_SERVICE_MEDICAL_RENDU() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeSPFTH_SPEC_INFOTHERAPEUTIQUE() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeSPCH_SPECIALITE_CHOIX() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeCHSAC_CHOIX_SUBACTIVE() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeCHCPH_CHOIX_CLASSEPHARMTHER() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeCHCCH_CHOIX_CLASSECHIMIQUE() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeCHSAU_CHOIX_SUBAUXILIAIRE() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeCHPR_CHOIX_PRODUIT() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeCHCATC_CHOIX_CLASSEATC() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeFTHCPH_FIT_CLASSEPHARMTHER() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeFTHCCH_FIT_CLASSECHIMIQUE() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeFTHSAC_FIT_SUBACTIVE() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeFTHSAU_FIT_SUBAUXILIAIRE() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeFTHPR_FIT_PRODUIT() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeFTHCATC_FIT_CLASSEATC() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As dsTheriaque_CriteresChoix = New dsTheriaque_CriteresChoix()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub ATR_AVISCOMMISSIONTRANSPARENCERowChangeEventHandler(ByVal sender As Object, ByVal e As ATR_AVISCOMMISSIONTRANSPARENCERowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub ATRASMR_AVISCOMTRANS_ASMRRowChangeEventHandler(ByVal sender As Object, ByVal e As ATRASMR_AVISCOMTRANS_ASMRRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub ATRSMR_AVISCOMTRANS_SMRRowChangeEventHandler(ByVal sender As Object, ByVal e As ATRSMR_AVISCOMTRANS_SMRRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub ATRSAC_AVISCOMTRANS_SUBACTIVERowChangeEventHandler(ByVal sender As Object, ByVal e As ATRSAC_AVISCOMTRANS_SUBACTIVERowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub ATRPR_AVISCOMTRANS_PRODUITRowChangeEventHandler(ByVal sender As Object, ByVal e As ATRPR_AVISCOMTRANS_PRODUITRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub SPATR_SPEC_AVISTRANSPARENCERowChangeEventHandler(ByVal sender As Object, ByVal e As SPATR_SPEC_AVISTRANSPARENCERowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub CH_CHOIXRowChangeEventHandler(ByVal sender As Object, ByVal e As CH_CHOIXRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub CHTIT_CH_TITRE2RowChangeEventHandler(ByVal sender As Object, ByVal e As CHTIT_CH_TITRE2RowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub FTR_FICHETRANSPARENCERowChangeEventHandler(ByVal sender As Object, ByVal e As FTR_FICHETRANSPARENCERowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub FTH_FICHEINFOTHERAPEUTIQUERowChangeEventHandler(ByVal sender As Object, ByVal e As FTH_FICHEINFOTHERAPEUTIQUERowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub RMORowChangeEventHandler(ByVal sender As Object, ByVal e As RMORowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub CLRMO_CLASSE_RMORowChangeEventHandler(ByVal sender As Object, ByVal e As CLRMO_CLASSE_RMORowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub SPSMR_SERVICE_MEDICAL_RENDURowChangeEventHandler(ByVal sender As Object, ByVal e As SPSMR_SERVICE_MEDICAL_RENDURowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub SPFTH_SPEC_INFOTHERAPEUTIQUERowChangeEventHandler(ByVal sender As Object, ByVal e As SPFTH_SPEC_INFOTHERAPEUTIQUERowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub SPCH_SPECIALITE_CHOIXRowChangeEventHandler(ByVal sender As Object, ByVal e As SPCH_SPECIALITE_CHOIXRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub CHSAC_CHOIX_SUBACTIVERowChangeEventHandler(ByVal sender As Object, ByVal e As CHSAC_CHOIX_SUBACTIVERowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub CHCPH_CHOIX_CLASSEPHARMTHERRowChangeEventHandler(ByVal sender As Object, ByVal e As CHCPH_CHOIX_CLASSEPHARMTHERRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub CHCCH_CHOIX_CLASSECHIMIQUERowChangeEventHandler(ByVal sender As Object, ByVal e As CHCCH_CHOIX_CLASSECHIMIQUERowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub CHSAU_CHOIX_SUBAUXILIAIRERowChangeEventHandler(ByVal sender As Object, ByVal e As CHSAU_CHOIX_SUBAUXILIAIRERowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub CHPR_CHOIX_PRODUITRowChangeEventHandler(ByVal sender As Object, ByVal e As CHPR_CHOIX_PRODUITRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub CHCATC_CHOIX_CLASSEATCRowChangeEventHandler(ByVal sender As Object, ByVal e As CHCATC_CHOIX_CLASSEATCRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub FTHCPH_FIT_CLASSEPHARMTHERRowChangeEventHandler(ByVal sender As Object, ByVal e As FTHCPH_FIT_CLASSEPHARMTHERRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub FTHCCH_FIT_CLASSECHIMIQUERowChangeEventHandler(ByVal sender As Object, ByVal e As FTHCCH_FIT_CLASSECHIMIQUERowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub FTHSAC_FIT_SUBACTIVERowChangeEventHandler(ByVal sender As Object, ByVal e As FTHSAC_FIT_SUBACTIVERowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub FTHSAU_FIT_SUBAUXILIAIRERowChangeEventHandler(ByVal sender As Object, ByVal e As FTHSAU_FIT_SUBAUXILIAIRERowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub FTHPR_FIT_PRODUITRowChangeEventHandler(ByVal sender As Object, ByVal e As FTHPR_FIT_PRODUITRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub FTHCATC_FIT_CLASSEATCRowChangeEventHandler(ByVal sender As Object, ByVal e As FTHCATC_FIT_CLASSEATCRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ATR_AVISCOMMISSIONTRANSPARENCEDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnATR_CODE_SQ_PK As Global.System.Data.DataColumn
        
        Private columnATR_TITRE As Global.System.Data.DataColumn
        
        Private columnATR_DATE_REDACTION As Global.System.Data.DataColumn
        
        Private columnATR_TEXTE As Global.System.Data.DataColumn
        
        Private columnATR_DATECR As Global.System.Data.DataColumn
        
        Private columnATR_DATEMJ As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "ATR_AVISCOMMISSIONTRANSPARENCE"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ATR_CODE_SQ_PKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnATR_CODE_SQ_PK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ATR_TITREColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnATR_TITRE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ATR_DATE_REDACTIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnATR_DATE_REDACTION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ATR_TEXTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnATR_TEXTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ATR_DATECRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnATR_DATECR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ATR_DATEMJColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnATR_DATEMJ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As ATR_AVISCOMMISSIONTRANSPARENCERow
            Get
                Return CType(Me.Rows(index),ATR_AVISCOMMISSIONTRANSPARENCERow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ATR_AVISCOMMISSIONTRANSPARENCERowChanging As ATR_AVISCOMMISSIONTRANSPARENCERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ATR_AVISCOMMISSIONTRANSPARENCERowChanged As ATR_AVISCOMMISSIONTRANSPARENCERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ATR_AVISCOMMISSIONTRANSPARENCERowDeleting As ATR_AVISCOMMISSIONTRANSPARENCERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ATR_AVISCOMMISSIONTRANSPARENCERowDeleted As ATR_AVISCOMMISSIONTRANSPARENCERowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddATR_AVISCOMMISSIONTRANSPARENCERow(ByVal row As ATR_AVISCOMMISSIONTRANSPARENCERow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddATR_AVISCOMMISSIONTRANSPARENCERow(ByVal ATR_CODE_SQ_PK As Integer, ByVal ATR_TITRE As String, ByVal ATR_DATE_REDACTION As Date, ByVal ATR_TEXTE As String, ByVal ATR_DATECR As Date, ByVal ATR_DATEMJ As Date) As ATR_AVISCOMMISSIONTRANSPARENCERow
            Dim rowATR_AVISCOMMISSIONTRANSPARENCERow As ATR_AVISCOMMISSIONTRANSPARENCERow = CType(Me.NewRow,ATR_AVISCOMMISSIONTRANSPARENCERow)
            Dim columnValuesArray() As Object = New Object() {ATR_CODE_SQ_PK, ATR_TITRE, ATR_DATE_REDACTION, ATR_TEXTE, ATR_DATECR, ATR_DATEMJ}
            rowATR_AVISCOMMISSIONTRANSPARENCERow.ItemArray = columnValuesArray
            Me.Rows.Add(rowATR_AVISCOMMISSIONTRANSPARENCERow)
            Return rowATR_AVISCOMMISSIONTRANSPARENCERow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByATR_CODE_SQ_PK(ByVal ATR_CODE_SQ_PK As Integer) As ATR_AVISCOMMISSIONTRANSPARENCERow
            Return CType(Me.Rows.Find(New Object() {ATR_CODE_SQ_PK}),ATR_AVISCOMMISSIONTRANSPARENCERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ATR_AVISCOMMISSIONTRANSPARENCEDataTable = CType(MyBase.Clone,ATR_AVISCOMMISSIONTRANSPARENCEDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ATR_AVISCOMMISSIONTRANSPARENCEDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnATR_CODE_SQ_PK = MyBase.Columns("ATR_CODE_SQ_PK")
            Me.columnATR_TITRE = MyBase.Columns("ATR_TITRE")
            Me.columnATR_DATE_REDACTION = MyBase.Columns("ATR_DATE_REDACTION")
            Me.columnATR_TEXTE = MyBase.Columns("ATR_TEXTE")
            Me.columnATR_DATECR = MyBase.Columns("ATR_DATECR")
            Me.columnATR_DATEMJ = MyBase.Columns("ATR_DATEMJ")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnATR_CODE_SQ_PK = New Global.System.Data.DataColumn("ATR_CODE_SQ_PK", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnATR_CODE_SQ_PK)
            Me.columnATR_TITRE = New Global.System.Data.DataColumn("ATR_TITRE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnATR_TITRE)
            Me.columnATR_DATE_REDACTION = New Global.System.Data.DataColumn("ATR_DATE_REDACTION", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnATR_DATE_REDACTION)
            Me.columnATR_TEXTE = New Global.System.Data.DataColumn("ATR_TEXTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnATR_TEXTE)
            Me.columnATR_DATECR = New Global.System.Data.DataColumn("ATR_DATECR", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnATR_DATECR)
            Me.columnATR_DATEMJ = New Global.System.Data.DataColumn("ATR_DATEMJ", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnATR_DATEMJ)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnATR_CODE_SQ_PK}, true))
            Me.columnATR_CODE_SQ_PK.AllowDBNull = false
            Me.columnATR_CODE_SQ_PK.Unique = true
            Me.columnATR_TITRE.AllowDBNull = false
            Me.columnATR_TITRE.MaxLength = 40
            Me.columnATR_DATE_REDACTION.AllowDBNull = false
            Me.columnATR_TEXTE.AllowDBNull = false
            Me.columnATR_TEXTE.MaxLength = 2147483647
            Me.columnATR_DATECR.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewATR_AVISCOMMISSIONTRANSPARENCERow() As ATR_AVISCOMMISSIONTRANSPARENCERow
            Return CType(Me.NewRow,ATR_AVISCOMMISSIONTRANSPARENCERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ATR_AVISCOMMISSIONTRANSPARENCERow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ATR_AVISCOMMISSIONTRANSPARENCERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ATR_AVISCOMMISSIONTRANSPARENCERowChangedEvent) Is Nothing) Then
                RaiseEvent ATR_AVISCOMMISSIONTRANSPARENCERowChanged(Me, New ATR_AVISCOMMISSIONTRANSPARENCERowChangeEvent(CType(e.Row,ATR_AVISCOMMISSIONTRANSPARENCERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ATR_AVISCOMMISSIONTRANSPARENCERowChangingEvent) Is Nothing) Then
                RaiseEvent ATR_AVISCOMMISSIONTRANSPARENCERowChanging(Me, New ATR_AVISCOMMISSIONTRANSPARENCERowChangeEvent(CType(e.Row,ATR_AVISCOMMISSIONTRANSPARENCERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ATR_AVISCOMMISSIONTRANSPARENCERowDeletedEvent) Is Nothing) Then
                RaiseEvent ATR_AVISCOMMISSIONTRANSPARENCERowDeleted(Me, New ATR_AVISCOMMISSIONTRANSPARENCERowChangeEvent(CType(e.Row,ATR_AVISCOMMISSIONTRANSPARENCERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ATR_AVISCOMMISSIONTRANSPARENCERowDeletingEvent) Is Nothing) Then
                RaiseEvent ATR_AVISCOMMISSIONTRANSPARENCERowDeleting(Me, New ATR_AVISCOMMISSIONTRANSPARENCERowChangeEvent(CType(e.Row,ATR_AVISCOMMISSIONTRANSPARENCERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveATR_AVISCOMMISSIONTRANSPARENCERow(ByVal row As ATR_AVISCOMMISSIONTRANSPARENCERow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsTheriaque_CriteresChoix = New dsTheriaque_CriteresChoix()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ATR_AVISCOMMISSIONTRANSPARENCEDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ATRASMR_AVISCOMTRANS_ASMRDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnATRASMR_ATR_CODE_FK_PK As Global.System.Data.DataColumn
        
        Private columnATRASMR_CDF_ASMR_CODE_FK_PK As Global.System.Data.DataColumn
        
        Private columnATRASMR_NUMORD As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "ATRASMR_AVISCOMTRANS_ASMR"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ATRASMR_ATR_CODE_FK_PKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnATRASMR_ATR_CODE_FK_PK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ATRASMR_CDF_ASMR_CODE_FK_PKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnATRASMR_CDF_ASMR_CODE_FK_PK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ATRASMR_NUMORDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnATRASMR_NUMORD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As ATRASMR_AVISCOMTRANS_ASMRRow
            Get
                Return CType(Me.Rows(index),ATRASMR_AVISCOMTRANS_ASMRRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ATRASMR_AVISCOMTRANS_ASMRRowChanging As ATRASMR_AVISCOMTRANS_ASMRRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ATRASMR_AVISCOMTRANS_ASMRRowChanged As ATRASMR_AVISCOMTRANS_ASMRRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ATRASMR_AVISCOMTRANS_ASMRRowDeleting As ATRASMR_AVISCOMTRANS_ASMRRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ATRASMR_AVISCOMTRANS_ASMRRowDeleted As ATRASMR_AVISCOMTRANS_ASMRRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddATRASMR_AVISCOMTRANS_ASMRRow(ByVal row As ATRASMR_AVISCOMTRANS_ASMRRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddATRASMR_AVISCOMTRANS_ASMRRow(ByVal ATRASMR_ATR_CODE_FK_PK As Integer, ByVal ATRASMR_CDF_ASMR_CODE_FK_PK As String, ByVal ATRASMR_NUMORD As Short) As ATRASMR_AVISCOMTRANS_ASMRRow
            Dim rowATRASMR_AVISCOMTRANS_ASMRRow As ATRASMR_AVISCOMTRANS_ASMRRow = CType(Me.NewRow,ATRASMR_AVISCOMTRANS_ASMRRow)
            Dim columnValuesArray() As Object = New Object() {ATRASMR_ATR_CODE_FK_PK, ATRASMR_CDF_ASMR_CODE_FK_PK, ATRASMR_NUMORD}
            rowATRASMR_AVISCOMTRANS_ASMRRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowATRASMR_AVISCOMTRANS_ASMRRow)
            Return rowATRASMR_AVISCOMTRANS_ASMRRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByATRASMR_ATR_CODE_FK_PKATRASMR_CDF_ASMR_CODE_FK_PK(ByVal ATRASMR_ATR_CODE_FK_PK As Integer, ByVal ATRASMR_CDF_ASMR_CODE_FK_PK As String) As ATRASMR_AVISCOMTRANS_ASMRRow
            Return CType(Me.Rows.Find(New Object() {ATRASMR_ATR_CODE_FK_PK, ATRASMR_CDF_ASMR_CODE_FK_PK}),ATRASMR_AVISCOMTRANS_ASMRRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ATRASMR_AVISCOMTRANS_ASMRDataTable = CType(MyBase.Clone,ATRASMR_AVISCOMTRANS_ASMRDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ATRASMR_AVISCOMTRANS_ASMRDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnATRASMR_ATR_CODE_FK_PK = MyBase.Columns("ATRASMR_ATR_CODE_FK_PK")
            Me.columnATRASMR_CDF_ASMR_CODE_FK_PK = MyBase.Columns("ATRASMR_CDF_ASMR_CODE_FK_PK")
            Me.columnATRASMR_NUMORD = MyBase.Columns("ATRASMR_NUMORD")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnATRASMR_ATR_CODE_FK_PK = New Global.System.Data.DataColumn("ATRASMR_ATR_CODE_FK_PK", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnATRASMR_ATR_CODE_FK_PK)
            Me.columnATRASMR_CDF_ASMR_CODE_FK_PK = New Global.System.Data.DataColumn("ATRASMR_CDF_ASMR_CODE_FK_PK", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnATRASMR_CDF_ASMR_CODE_FK_PK)
            Me.columnATRASMR_NUMORD = New Global.System.Data.DataColumn("ATRASMR_NUMORD", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnATRASMR_NUMORD)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnATRASMR_ATR_CODE_FK_PK, Me.columnATRASMR_CDF_ASMR_CODE_FK_PK}, true))
            Me.columnATRASMR_ATR_CODE_FK_PK.AllowDBNull = false
            Me.columnATRASMR_CDF_ASMR_CODE_FK_PK.AllowDBNull = false
            Me.columnATRASMR_CDF_ASMR_CODE_FK_PK.MaxLength = 10
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewATRASMR_AVISCOMTRANS_ASMRRow() As ATRASMR_AVISCOMTRANS_ASMRRow
            Return CType(Me.NewRow,ATRASMR_AVISCOMTRANS_ASMRRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ATRASMR_AVISCOMTRANS_ASMRRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ATRASMR_AVISCOMTRANS_ASMRRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ATRASMR_AVISCOMTRANS_ASMRRowChangedEvent) Is Nothing) Then
                RaiseEvent ATRASMR_AVISCOMTRANS_ASMRRowChanged(Me, New ATRASMR_AVISCOMTRANS_ASMRRowChangeEvent(CType(e.Row,ATRASMR_AVISCOMTRANS_ASMRRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ATRASMR_AVISCOMTRANS_ASMRRowChangingEvent) Is Nothing) Then
                RaiseEvent ATRASMR_AVISCOMTRANS_ASMRRowChanging(Me, New ATRASMR_AVISCOMTRANS_ASMRRowChangeEvent(CType(e.Row,ATRASMR_AVISCOMTRANS_ASMRRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ATRASMR_AVISCOMTRANS_ASMRRowDeletedEvent) Is Nothing) Then
                RaiseEvent ATRASMR_AVISCOMTRANS_ASMRRowDeleted(Me, New ATRASMR_AVISCOMTRANS_ASMRRowChangeEvent(CType(e.Row,ATRASMR_AVISCOMTRANS_ASMRRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ATRASMR_AVISCOMTRANS_ASMRRowDeletingEvent) Is Nothing) Then
                RaiseEvent ATRASMR_AVISCOMTRANS_ASMRRowDeleting(Me, New ATRASMR_AVISCOMTRANS_ASMRRowChangeEvent(CType(e.Row,ATRASMR_AVISCOMTRANS_ASMRRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveATRASMR_AVISCOMTRANS_ASMRRow(ByVal row As ATRASMR_AVISCOMTRANS_ASMRRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsTheriaque_CriteresChoix = New dsTheriaque_CriteresChoix()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ATRASMR_AVISCOMTRANS_ASMRDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ATRSMR_AVISCOMTRANS_SMRDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnATRSMR_ATR_CODE_FK_PK As Global.System.Data.DataColumn
        
        Private columnATRSMR_CDF_SMR_CODE_FK_PK As Global.System.Data.DataColumn
        
        Private columnATRSMR_NUMORD As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "ATRSMR_AVISCOMTRANS_SMR"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ATRSMR_ATR_CODE_FK_PKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnATRSMR_ATR_CODE_FK_PK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ATRSMR_CDF_SMR_CODE_FK_PKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnATRSMR_CDF_SMR_CODE_FK_PK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ATRSMR_NUMORDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnATRSMR_NUMORD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As ATRSMR_AVISCOMTRANS_SMRRow
            Get
                Return CType(Me.Rows(index),ATRSMR_AVISCOMTRANS_SMRRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ATRSMR_AVISCOMTRANS_SMRRowChanging As ATRSMR_AVISCOMTRANS_SMRRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ATRSMR_AVISCOMTRANS_SMRRowChanged As ATRSMR_AVISCOMTRANS_SMRRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ATRSMR_AVISCOMTRANS_SMRRowDeleting As ATRSMR_AVISCOMTRANS_SMRRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ATRSMR_AVISCOMTRANS_SMRRowDeleted As ATRSMR_AVISCOMTRANS_SMRRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddATRSMR_AVISCOMTRANS_SMRRow(ByVal row As ATRSMR_AVISCOMTRANS_SMRRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddATRSMR_AVISCOMTRANS_SMRRow(ByVal ATRSMR_ATR_CODE_FK_PK As Integer, ByVal ATRSMR_CDF_SMR_CODE_FK_PK As String, ByVal ATRSMR_NUMORD As Short) As ATRSMR_AVISCOMTRANS_SMRRow
            Dim rowATRSMR_AVISCOMTRANS_SMRRow As ATRSMR_AVISCOMTRANS_SMRRow = CType(Me.NewRow,ATRSMR_AVISCOMTRANS_SMRRow)
            Dim columnValuesArray() As Object = New Object() {ATRSMR_ATR_CODE_FK_PK, ATRSMR_CDF_SMR_CODE_FK_PK, ATRSMR_NUMORD}
            rowATRSMR_AVISCOMTRANS_SMRRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowATRSMR_AVISCOMTRANS_SMRRow)
            Return rowATRSMR_AVISCOMTRANS_SMRRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByATRSMR_ATR_CODE_FK_PKATRSMR_CDF_SMR_CODE_FK_PK(ByVal ATRSMR_ATR_CODE_FK_PK As Integer, ByVal ATRSMR_CDF_SMR_CODE_FK_PK As String) As ATRSMR_AVISCOMTRANS_SMRRow
            Return CType(Me.Rows.Find(New Object() {ATRSMR_ATR_CODE_FK_PK, ATRSMR_CDF_SMR_CODE_FK_PK}),ATRSMR_AVISCOMTRANS_SMRRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ATRSMR_AVISCOMTRANS_SMRDataTable = CType(MyBase.Clone,ATRSMR_AVISCOMTRANS_SMRDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ATRSMR_AVISCOMTRANS_SMRDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnATRSMR_ATR_CODE_FK_PK = MyBase.Columns("ATRSMR_ATR_CODE_FK_PK")
            Me.columnATRSMR_CDF_SMR_CODE_FK_PK = MyBase.Columns("ATRSMR_CDF_SMR_CODE_FK_PK")
            Me.columnATRSMR_NUMORD = MyBase.Columns("ATRSMR_NUMORD")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnATRSMR_ATR_CODE_FK_PK = New Global.System.Data.DataColumn("ATRSMR_ATR_CODE_FK_PK", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnATRSMR_ATR_CODE_FK_PK)
            Me.columnATRSMR_CDF_SMR_CODE_FK_PK = New Global.System.Data.DataColumn("ATRSMR_CDF_SMR_CODE_FK_PK", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnATRSMR_CDF_SMR_CODE_FK_PK)
            Me.columnATRSMR_NUMORD = New Global.System.Data.DataColumn("ATRSMR_NUMORD", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnATRSMR_NUMORD)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnATRSMR_ATR_CODE_FK_PK, Me.columnATRSMR_CDF_SMR_CODE_FK_PK}, true))
            Me.columnATRSMR_ATR_CODE_FK_PK.AllowDBNull = false
            Me.columnATRSMR_CDF_SMR_CODE_FK_PK.AllowDBNull = false
            Me.columnATRSMR_CDF_SMR_CODE_FK_PK.MaxLength = 10
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewATRSMR_AVISCOMTRANS_SMRRow() As ATRSMR_AVISCOMTRANS_SMRRow
            Return CType(Me.NewRow,ATRSMR_AVISCOMTRANS_SMRRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ATRSMR_AVISCOMTRANS_SMRRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ATRSMR_AVISCOMTRANS_SMRRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ATRSMR_AVISCOMTRANS_SMRRowChangedEvent) Is Nothing) Then
                RaiseEvent ATRSMR_AVISCOMTRANS_SMRRowChanged(Me, New ATRSMR_AVISCOMTRANS_SMRRowChangeEvent(CType(e.Row,ATRSMR_AVISCOMTRANS_SMRRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ATRSMR_AVISCOMTRANS_SMRRowChangingEvent) Is Nothing) Then
                RaiseEvent ATRSMR_AVISCOMTRANS_SMRRowChanging(Me, New ATRSMR_AVISCOMTRANS_SMRRowChangeEvent(CType(e.Row,ATRSMR_AVISCOMTRANS_SMRRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ATRSMR_AVISCOMTRANS_SMRRowDeletedEvent) Is Nothing) Then
                RaiseEvent ATRSMR_AVISCOMTRANS_SMRRowDeleted(Me, New ATRSMR_AVISCOMTRANS_SMRRowChangeEvent(CType(e.Row,ATRSMR_AVISCOMTRANS_SMRRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ATRSMR_AVISCOMTRANS_SMRRowDeletingEvent) Is Nothing) Then
                RaiseEvent ATRSMR_AVISCOMTRANS_SMRRowDeleting(Me, New ATRSMR_AVISCOMTRANS_SMRRowChangeEvent(CType(e.Row,ATRSMR_AVISCOMTRANS_SMRRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveATRSMR_AVISCOMTRANS_SMRRow(ByVal row As ATRSMR_AVISCOMTRANS_SMRRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsTheriaque_CriteresChoix = New dsTheriaque_CriteresChoix()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ATRSMR_AVISCOMTRANS_SMRDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ATRSAC_AVISCOMTRANS_SUBACTIVEDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnATRSAC_ATR_CODE_FK_PK As Global.System.Data.DataColumn
        
        Private columnATRSAC_SAC_CODE_FK_PK As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "ATRSAC_AVISCOMTRANS_SUBACTIVE"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ATRSAC_ATR_CODE_FK_PKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnATRSAC_ATR_CODE_FK_PK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ATRSAC_SAC_CODE_FK_PKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnATRSAC_SAC_CODE_FK_PK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As ATRSAC_AVISCOMTRANS_SUBACTIVERow
            Get
                Return CType(Me.Rows(index),ATRSAC_AVISCOMTRANS_SUBACTIVERow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ATRSAC_AVISCOMTRANS_SUBACTIVERowChanging As ATRSAC_AVISCOMTRANS_SUBACTIVERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ATRSAC_AVISCOMTRANS_SUBACTIVERowChanged As ATRSAC_AVISCOMTRANS_SUBACTIVERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ATRSAC_AVISCOMTRANS_SUBACTIVERowDeleting As ATRSAC_AVISCOMTRANS_SUBACTIVERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ATRSAC_AVISCOMTRANS_SUBACTIVERowDeleted As ATRSAC_AVISCOMTRANS_SUBACTIVERowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddATRSAC_AVISCOMTRANS_SUBACTIVERow(ByVal row As ATRSAC_AVISCOMTRANS_SUBACTIVERow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddATRSAC_AVISCOMTRANS_SUBACTIVERow(ByVal ATRSAC_ATR_CODE_FK_PK As Integer, ByVal ATRSAC_SAC_CODE_FK_PK As Integer) As ATRSAC_AVISCOMTRANS_SUBACTIVERow
            Dim rowATRSAC_AVISCOMTRANS_SUBACTIVERow As ATRSAC_AVISCOMTRANS_SUBACTIVERow = CType(Me.NewRow,ATRSAC_AVISCOMTRANS_SUBACTIVERow)
            Dim columnValuesArray() As Object = New Object() {ATRSAC_ATR_CODE_FK_PK, ATRSAC_SAC_CODE_FK_PK}
            rowATRSAC_AVISCOMTRANS_SUBACTIVERow.ItemArray = columnValuesArray
            Me.Rows.Add(rowATRSAC_AVISCOMTRANS_SUBACTIVERow)
            Return rowATRSAC_AVISCOMTRANS_SUBACTIVERow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByATRSAC_ATR_CODE_FK_PKATRSAC_SAC_CODE_FK_PK(ByVal ATRSAC_ATR_CODE_FK_PK As Integer, ByVal ATRSAC_SAC_CODE_FK_PK As Integer) As ATRSAC_AVISCOMTRANS_SUBACTIVERow
            Return CType(Me.Rows.Find(New Object() {ATRSAC_ATR_CODE_FK_PK, ATRSAC_SAC_CODE_FK_PK}),ATRSAC_AVISCOMTRANS_SUBACTIVERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ATRSAC_AVISCOMTRANS_SUBACTIVEDataTable = CType(MyBase.Clone,ATRSAC_AVISCOMTRANS_SUBACTIVEDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ATRSAC_AVISCOMTRANS_SUBACTIVEDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnATRSAC_ATR_CODE_FK_PK = MyBase.Columns("ATRSAC_ATR_CODE_FK_PK")
            Me.columnATRSAC_SAC_CODE_FK_PK = MyBase.Columns("ATRSAC_SAC_CODE_FK_PK")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnATRSAC_ATR_CODE_FK_PK = New Global.System.Data.DataColumn("ATRSAC_ATR_CODE_FK_PK", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnATRSAC_ATR_CODE_FK_PK)
            Me.columnATRSAC_SAC_CODE_FK_PK = New Global.System.Data.DataColumn("ATRSAC_SAC_CODE_FK_PK", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnATRSAC_SAC_CODE_FK_PK)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnATRSAC_ATR_CODE_FK_PK, Me.columnATRSAC_SAC_CODE_FK_PK}, true))
            Me.columnATRSAC_ATR_CODE_FK_PK.AllowDBNull = false
            Me.columnATRSAC_SAC_CODE_FK_PK.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewATRSAC_AVISCOMTRANS_SUBACTIVERow() As ATRSAC_AVISCOMTRANS_SUBACTIVERow
            Return CType(Me.NewRow,ATRSAC_AVISCOMTRANS_SUBACTIVERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ATRSAC_AVISCOMTRANS_SUBACTIVERow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ATRSAC_AVISCOMTRANS_SUBACTIVERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ATRSAC_AVISCOMTRANS_SUBACTIVERowChangedEvent) Is Nothing) Then
                RaiseEvent ATRSAC_AVISCOMTRANS_SUBACTIVERowChanged(Me, New ATRSAC_AVISCOMTRANS_SUBACTIVERowChangeEvent(CType(e.Row,ATRSAC_AVISCOMTRANS_SUBACTIVERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ATRSAC_AVISCOMTRANS_SUBACTIVERowChangingEvent) Is Nothing) Then
                RaiseEvent ATRSAC_AVISCOMTRANS_SUBACTIVERowChanging(Me, New ATRSAC_AVISCOMTRANS_SUBACTIVERowChangeEvent(CType(e.Row,ATRSAC_AVISCOMTRANS_SUBACTIVERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ATRSAC_AVISCOMTRANS_SUBACTIVERowDeletedEvent) Is Nothing) Then
                RaiseEvent ATRSAC_AVISCOMTRANS_SUBACTIVERowDeleted(Me, New ATRSAC_AVISCOMTRANS_SUBACTIVERowChangeEvent(CType(e.Row,ATRSAC_AVISCOMTRANS_SUBACTIVERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ATRSAC_AVISCOMTRANS_SUBACTIVERowDeletingEvent) Is Nothing) Then
                RaiseEvent ATRSAC_AVISCOMTRANS_SUBACTIVERowDeleting(Me, New ATRSAC_AVISCOMTRANS_SUBACTIVERowChangeEvent(CType(e.Row,ATRSAC_AVISCOMTRANS_SUBACTIVERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveATRSAC_AVISCOMTRANS_SUBACTIVERow(ByVal row As ATRSAC_AVISCOMTRANS_SUBACTIVERow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsTheriaque_CriteresChoix = New dsTheriaque_CriteresChoix()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ATRSAC_AVISCOMTRANS_SUBACTIVEDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ATRPR_AVISCOMTRANS_PRODUITDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnATRPR_ATR_CODE_FK_PK As Global.System.Data.DataColumn
        
        Private columnATRPR_PR_CODE_FK_PK As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "ATRPR_AVISCOMTRANS_PRODUIT"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ATRPR_ATR_CODE_FK_PKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnATRPR_ATR_CODE_FK_PK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ATRPR_PR_CODE_FK_PKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnATRPR_PR_CODE_FK_PK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As ATRPR_AVISCOMTRANS_PRODUITRow
            Get
                Return CType(Me.Rows(index),ATRPR_AVISCOMTRANS_PRODUITRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ATRPR_AVISCOMTRANS_PRODUITRowChanging As ATRPR_AVISCOMTRANS_PRODUITRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ATRPR_AVISCOMTRANS_PRODUITRowChanged As ATRPR_AVISCOMTRANS_PRODUITRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ATRPR_AVISCOMTRANS_PRODUITRowDeleting As ATRPR_AVISCOMTRANS_PRODUITRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ATRPR_AVISCOMTRANS_PRODUITRowDeleted As ATRPR_AVISCOMTRANS_PRODUITRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddATRPR_AVISCOMTRANS_PRODUITRow(ByVal row As ATRPR_AVISCOMTRANS_PRODUITRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddATRPR_AVISCOMTRANS_PRODUITRow(ByVal ATRPR_ATR_CODE_FK_PK As Integer, ByVal ATRPR_PR_CODE_FK_PK As Integer) As ATRPR_AVISCOMTRANS_PRODUITRow
            Dim rowATRPR_AVISCOMTRANS_PRODUITRow As ATRPR_AVISCOMTRANS_PRODUITRow = CType(Me.NewRow,ATRPR_AVISCOMTRANS_PRODUITRow)
            Dim columnValuesArray() As Object = New Object() {ATRPR_ATR_CODE_FK_PK, ATRPR_PR_CODE_FK_PK}
            rowATRPR_AVISCOMTRANS_PRODUITRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowATRPR_AVISCOMTRANS_PRODUITRow)
            Return rowATRPR_AVISCOMTRANS_PRODUITRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByATRPR_ATR_CODE_FK_PKATRPR_PR_CODE_FK_PK(ByVal ATRPR_ATR_CODE_FK_PK As Integer, ByVal ATRPR_PR_CODE_FK_PK As Integer) As ATRPR_AVISCOMTRANS_PRODUITRow
            Return CType(Me.Rows.Find(New Object() {ATRPR_ATR_CODE_FK_PK, ATRPR_PR_CODE_FK_PK}),ATRPR_AVISCOMTRANS_PRODUITRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ATRPR_AVISCOMTRANS_PRODUITDataTable = CType(MyBase.Clone,ATRPR_AVISCOMTRANS_PRODUITDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ATRPR_AVISCOMTRANS_PRODUITDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnATRPR_ATR_CODE_FK_PK = MyBase.Columns("ATRPR_ATR_CODE_FK_PK")
            Me.columnATRPR_PR_CODE_FK_PK = MyBase.Columns("ATRPR_PR_CODE_FK_PK")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnATRPR_ATR_CODE_FK_PK = New Global.System.Data.DataColumn("ATRPR_ATR_CODE_FK_PK", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnATRPR_ATR_CODE_FK_PK)
            Me.columnATRPR_PR_CODE_FK_PK = New Global.System.Data.DataColumn("ATRPR_PR_CODE_FK_PK", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnATRPR_PR_CODE_FK_PK)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnATRPR_ATR_CODE_FK_PK, Me.columnATRPR_PR_CODE_FK_PK}, true))
            Me.columnATRPR_ATR_CODE_FK_PK.AllowDBNull = false
            Me.columnATRPR_PR_CODE_FK_PK.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewATRPR_AVISCOMTRANS_PRODUITRow() As ATRPR_AVISCOMTRANS_PRODUITRow
            Return CType(Me.NewRow,ATRPR_AVISCOMTRANS_PRODUITRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ATRPR_AVISCOMTRANS_PRODUITRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ATRPR_AVISCOMTRANS_PRODUITRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ATRPR_AVISCOMTRANS_PRODUITRowChangedEvent) Is Nothing) Then
                RaiseEvent ATRPR_AVISCOMTRANS_PRODUITRowChanged(Me, New ATRPR_AVISCOMTRANS_PRODUITRowChangeEvent(CType(e.Row,ATRPR_AVISCOMTRANS_PRODUITRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ATRPR_AVISCOMTRANS_PRODUITRowChangingEvent) Is Nothing) Then
                RaiseEvent ATRPR_AVISCOMTRANS_PRODUITRowChanging(Me, New ATRPR_AVISCOMTRANS_PRODUITRowChangeEvent(CType(e.Row,ATRPR_AVISCOMTRANS_PRODUITRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ATRPR_AVISCOMTRANS_PRODUITRowDeletedEvent) Is Nothing) Then
                RaiseEvent ATRPR_AVISCOMTRANS_PRODUITRowDeleted(Me, New ATRPR_AVISCOMTRANS_PRODUITRowChangeEvent(CType(e.Row,ATRPR_AVISCOMTRANS_PRODUITRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ATRPR_AVISCOMTRANS_PRODUITRowDeletingEvent) Is Nothing) Then
                RaiseEvent ATRPR_AVISCOMTRANS_PRODUITRowDeleting(Me, New ATRPR_AVISCOMTRANS_PRODUITRowChangeEvent(CType(e.Row,ATRPR_AVISCOMTRANS_PRODUITRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveATRPR_AVISCOMTRANS_PRODUITRow(ByVal row As ATRPR_AVISCOMTRANS_PRODUITRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsTheriaque_CriteresChoix = New dsTheriaque_CriteresChoix()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ATRPR_AVISCOMTRANS_PRODUITDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class SPATR_SPEC_AVISTRANSPARENCEDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnSPATR_SP_CODE_FK_PK As Global.System.Data.DataColumn
        
        Private columnSPATR_ATR_CODE_FK_PK As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "SPATR_SPEC_AVISTRANSPARENCE"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SPATR_SP_CODE_FK_PKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSPATR_SP_CODE_FK_PK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SPATR_ATR_CODE_FK_PKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSPATR_ATR_CODE_FK_PK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As SPATR_SPEC_AVISTRANSPARENCERow
            Get
                Return CType(Me.Rows(index),SPATR_SPEC_AVISTRANSPARENCERow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SPATR_SPEC_AVISTRANSPARENCERowChanging As SPATR_SPEC_AVISTRANSPARENCERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SPATR_SPEC_AVISTRANSPARENCERowChanged As SPATR_SPEC_AVISTRANSPARENCERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SPATR_SPEC_AVISTRANSPARENCERowDeleting As SPATR_SPEC_AVISTRANSPARENCERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SPATR_SPEC_AVISTRANSPARENCERowDeleted As SPATR_SPEC_AVISTRANSPARENCERowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddSPATR_SPEC_AVISTRANSPARENCERow(ByVal row As SPATR_SPEC_AVISTRANSPARENCERow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddSPATR_SPEC_AVISTRANSPARENCERow(ByVal SPATR_SP_CODE_FK_PK As Integer, ByVal SPATR_ATR_CODE_FK_PK As Integer) As SPATR_SPEC_AVISTRANSPARENCERow
            Dim rowSPATR_SPEC_AVISTRANSPARENCERow As SPATR_SPEC_AVISTRANSPARENCERow = CType(Me.NewRow,SPATR_SPEC_AVISTRANSPARENCERow)
            Dim columnValuesArray() As Object = New Object() {SPATR_SP_CODE_FK_PK, SPATR_ATR_CODE_FK_PK}
            rowSPATR_SPEC_AVISTRANSPARENCERow.ItemArray = columnValuesArray
            Me.Rows.Add(rowSPATR_SPEC_AVISTRANSPARENCERow)
            Return rowSPATR_SPEC_AVISTRANSPARENCERow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindBySPATR_SP_CODE_FK_PKSPATR_ATR_CODE_FK_PK(ByVal SPATR_SP_CODE_FK_PK As Integer, ByVal SPATR_ATR_CODE_FK_PK As Integer) As SPATR_SPEC_AVISTRANSPARENCERow
            Return CType(Me.Rows.Find(New Object() {SPATR_SP_CODE_FK_PK, SPATR_ATR_CODE_FK_PK}),SPATR_SPEC_AVISTRANSPARENCERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As SPATR_SPEC_AVISTRANSPARENCEDataTable = CType(MyBase.Clone,SPATR_SPEC_AVISTRANSPARENCEDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New SPATR_SPEC_AVISTRANSPARENCEDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnSPATR_SP_CODE_FK_PK = MyBase.Columns("SPATR_SP_CODE_FK_PK")
            Me.columnSPATR_ATR_CODE_FK_PK = MyBase.Columns("SPATR_ATR_CODE_FK_PK")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnSPATR_SP_CODE_FK_PK = New Global.System.Data.DataColumn("SPATR_SP_CODE_FK_PK", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSPATR_SP_CODE_FK_PK)
            Me.columnSPATR_ATR_CODE_FK_PK = New Global.System.Data.DataColumn("SPATR_ATR_CODE_FK_PK", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSPATR_ATR_CODE_FK_PK)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnSPATR_SP_CODE_FK_PK, Me.columnSPATR_ATR_CODE_FK_PK}, true))
            Me.columnSPATR_SP_CODE_FK_PK.AllowDBNull = false
            Me.columnSPATR_ATR_CODE_FK_PK.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewSPATR_SPEC_AVISTRANSPARENCERow() As SPATR_SPEC_AVISTRANSPARENCERow
            Return CType(Me.NewRow,SPATR_SPEC_AVISTRANSPARENCERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New SPATR_SPEC_AVISTRANSPARENCERow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(SPATR_SPEC_AVISTRANSPARENCERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.SPATR_SPEC_AVISTRANSPARENCERowChangedEvent) Is Nothing) Then
                RaiseEvent SPATR_SPEC_AVISTRANSPARENCERowChanged(Me, New SPATR_SPEC_AVISTRANSPARENCERowChangeEvent(CType(e.Row,SPATR_SPEC_AVISTRANSPARENCERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.SPATR_SPEC_AVISTRANSPARENCERowChangingEvent) Is Nothing) Then
                RaiseEvent SPATR_SPEC_AVISTRANSPARENCERowChanging(Me, New SPATR_SPEC_AVISTRANSPARENCERowChangeEvent(CType(e.Row,SPATR_SPEC_AVISTRANSPARENCERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.SPATR_SPEC_AVISTRANSPARENCERowDeletedEvent) Is Nothing) Then
                RaiseEvent SPATR_SPEC_AVISTRANSPARENCERowDeleted(Me, New SPATR_SPEC_AVISTRANSPARENCERowChangeEvent(CType(e.Row,SPATR_SPEC_AVISTRANSPARENCERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.SPATR_SPEC_AVISTRANSPARENCERowDeletingEvent) Is Nothing) Then
                RaiseEvent SPATR_SPEC_AVISTRANSPARENCERowDeleting(Me, New SPATR_SPEC_AVISTRANSPARENCERowChangeEvent(CType(e.Row,SPATR_SPEC_AVISTRANSPARENCERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveSPATR_SPEC_AVISTRANSPARENCERow(ByVal row As SPATR_SPEC_AVISTRANSPARENCERow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsTheriaque_CriteresChoix = New dsTheriaque_CriteresChoix()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "SPATR_SPEC_AVISTRANSPARENCEDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class CH_CHOIXDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnCH_CODE_SQ_PK As Global.System.Data.DataColumn
        
        Private columnCH_TITRE1 As Global.System.Data.DataColumn
        
        Private columnCH_DATE As Global.System.Data.DataColumn
        
        Private columnCH_TEXTE As Global.System.Data.DataColumn
        
        Private columnCH_DATECR As Global.System.Data.DataColumn
        
        Private columnCH_DATEMJ As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "CH_CHOIX"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CH_CODE_SQ_PKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCH_CODE_SQ_PK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CH_TITRE1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCH_TITRE1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CH_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCH_DATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CH_TEXTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCH_TEXTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CH_DATECRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCH_DATECR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CH_DATEMJColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCH_DATEMJ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As CH_CHOIXRow
            Get
                Return CType(Me.Rows(index),CH_CHOIXRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CH_CHOIXRowChanging As CH_CHOIXRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CH_CHOIXRowChanged As CH_CHOIXRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CH_CHOIXRowDeleting As CH_CHOIXRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CH_CHOIXRowDeleted As CH_CHOIXRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddCH_CHOIXRow(ByVal row As CH_CHOIXRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddCH_CHOIXRow(ByVal CH_CODE_SQ_PK As Integer, ByVal CH_TITRE1 As String, ByVal CH_DATE As Date, ByVal CH_TEXTE As String, ByVal CH_DATECR As Date, ByVal CH_DATEMJ As Date) As CH_CHOIXRow
            Dim rowCH_CHOIXRow As CH_CHOIXRow = CType(Me.NewRow,CH_CHOIXRow)
            Dim columnValuesArray() As Object = New Object() {CH_CODE_SQ_PK, CH_TITRE1, CH_DATE, CH_TEXTE, CH_DATECR, CH_DATEMJ}
            rowCH_CHOIXRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowCH_CHOIXRow)
            Return rowCH_CHOIXRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByCH_CODE_SQ_PK(ByVal CH_CODE_SQ_PK As Integer) As CH_CHOIXRow
            Return CType(Me.Rows.Find(New Object() {CH_CODE_SQ_PK}),CH_CHOIXRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As CH_CHOIXDataTable = CType(MyBase.Clone,CH_CHOIXDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New CH_CHOIXDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCH_CODE_SQ_PK = MyBase.Columns("CH_CODE_SQ_PK")
            Me.columnCH_TITRE1 = MyBase.Columns("CH_TITRE1")
            Me.columnCH_DATE = MyBase.Columns("CH_DATE")
            Me.columnCH_TEXTE = MyBase.Columns("CH_TEXTE")
            Me.columnCH_DATECR = MyBase.Columns("CH_DATECR")
            Me.columnCH_DATEMJ = MyBase.Columns("CH_DATEMJ")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCH_CODE_SQ_PK = New Global.System.Data.DataColumn("CH_CODE_SQ_PK", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCH_CODE_SQ_PK)
            Me.columnCH_TITRE1 = New Global.System.Data.DataColumn("CH_TITRE1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCH_TITRE1)
            Me.columnCH_DATE = New Global.System.Data.DataColumn("CH_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCH_DATE)
            Me.columnCH_TEXTE = New Global.System.Data.DataColumn("CH_TEXTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCH_TEXTE)
            Me.columnCH_DATECR = New Global.System.Data.DataColumn("CH_DATECR", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCH_DATECR)
            Me.columnCH_DATEMJ = New Global.System.Data.DataColumn("CH_DATEMJ", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCH_DATEMJ)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnCH_CODE_SQ_PK}, true))
            Me.columnCH_CODE_SQ_PK.AllowDBNull = false
            Me.columnCH_CODE_SQ_PK.Unique = true
            Me.columnCH_TITRE1.AllowDBNull = false
            Me.columnCH_TITRE1.MaxLength = 40
            Me.columnCH_TEXTE.AllowDBNull = false
            Me.columnCH_TEXTE.MaxLength = 2147483647
            Me.columnCH_DATECR.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewCH_CHOIXRow() As CH_CHOIXRow
            Return CType(Me.NewRow,CH_CHOIXRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New CH_CHOIXRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(CH_CHOIXRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.CH_CHOIXRowChangedEvent) Is Nothing) Then
                RaiseEvent CH_CHOIXRowChanged(Me, New CH_CHOIXRowChangeEvent(CType(e.Row,CH_CHOIXRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.CH_CHOIXRowChangingEvent) Is Nothing) Then
                RaiseEvent CH_CHOIXRowChanging(Me, New CH_CHOIXRowChangeEvent(CType(e.Row,CH_CHOIXRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.CH_CHOIXRowDeletedEvent) Is Nothing) Then
                RaiseEvent CH_CHOIXRowDeleted(Me, New CH_CHOIXRowChangeEvent(CType(e.Row,CH_CHOIXRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.CH_CHOIXRowDeletingEvent) Is Nothing) Then
                RaiseEvent CH_CHOIXRowDeleting(Me, New CH_CHOIXRowChangeEvent(CType(e.Row,CH_CHOIXRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveCH_CHOIXRow(ByVal row As CH_CHOIXRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsTheriaque_CriteresChoix = New dsTheriaque_CriteresChoix()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "CH_CHOIXDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class CHTIT_CH_TITRE2DataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnCHTIT_CH_CODE_FK_PK As Global.System.Data.DataColumn
        
        Private columnCHTIT_CDF_TIT_CODE_FK_PK As Global.System.Data.DataColumn
        
        Private columnCHTIT_NUMORD As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "CHTIT_CH_TITRE2"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CHTIT_CH_CODE_FK_PKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCHTIT_CH_CODE_FK_PK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CHTIT_CDF_TIT_CODE_FK_PKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCHTIT_CDF_TIT_CODE_FK_PK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CHTIT_NUMORDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCHTIT_NUMORD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As CHTIT_CH_TITRE2Row
            Get
                Return CType(Me.Rows(index),CHTIT_CH_TITRE2Row)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CHTIT_CH_TITRE2RowChanging As CHTIT_CH_TITRE2RowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CHTIT_CH_TITRE2RowChanged As CHTIT_CH_TITRE2RowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CHTIT_CH_TITRE2RowDeleting As CHTIT_CH_TITRE2RowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CHTIT_CH_TITRE2RowDeleted As CHTIT_CH_TITRE2RowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddCHTIT_CH_TITRE2Row(ByVal row As CHTIT_CH_TITRE2Row)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddCHTIT_CH_TITRE2Row(ByVal CHTIT_CH_CODE_FK_PK As Integer, ByVal CHTIT_CDF_TIT_CODE_FK_PK As String, ByVal CHTIT_NUMORD As Short) As CHTIT_CH_TITRE2Row
            Dim rowCHTIT_CH_TITRE2Row As CHTIT_CH_TITRE2Row = CType(Me.NewRow,CHTIT_CH_TITRE2Row)
            Dim columnValuesArray() As Object = New Object() {CHTIT_CH_CODE_FK_PK, CHTIT_CDF_TIT_CODE_FK_PK, CHTIT_NUMORD}
            rowCHTIT_CH_TITRE2Row.ItemArray = columnValuesArray
            Me.Rows.Add(rowCHTIT_CH_TITRE2Row)
            Return rowCHTIT_CH_TITRE2Row
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByCHTIT_CH_CODE_FK_PKCHTIT_CDF_TIT_CODE_FK_PK(ByVal CHTIT_CH_CODE_FK_PK As Integer, ByVal CHTIT_CDF_TIT_CODE_FK_PK As String) As CHTIT_CH_TITRE2Row
            Return CType(Me.Rows.Find(New Object() {CHTIT_CH_CODE_FK_PK, CHTIT_CDF_TIT_CODE_FK_PK}),CHTIT_CH_TITRE2Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As CHTIT_CH_TITRE2DataTable = CType(MyBase.Clone,CHTIT_CH_TITRE2DataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New CHTIT_CH_TITRE2DataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCHTIT_CH_CODE_FK_PK = MyBase.Columns("CHTIT_CH_CODE_FK_PK")
            Me.columnCHTIT_CDF_TIT_CODE_FK_PK = MyBase.Columns("CHTIT_CDF_TIT_CODE_FK_PK")
            Me.columnCHTIT_NUMORD = MyBase.Columns("CHTIT_NUMORD")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCHTIT_CH_CODE_FK_PK = New Global.System.Data.DataColumn("CHTIT_CH_CODE_FK_PK", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCHTIT_CH_CODE_FK_PK)
            Me.columnCHTIT_CDF_TIT_CODE_FK_PK = New Global.System.Data.DataColumn("CHTIT_CDF_TIT_CODE_FK_PK", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCHTIT_CDF_TIT_CODE_FK_PK)
            Me.columnCHTIT_NUMORD = New Global.System.Data.DataColumn("CHTIT_NUMORD", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCHTIT_NUMORD)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnCHTIT_CH_CODE_FK_PK, Me.columnCHTIT_CDF_TIT_CODE_FK_PK}, true))
            Me.columnCHTIT_CH_CODE_FK_PK.AllowDBNull = false
            Me.columnCHTIT_CDF_TIT_CODE_FK_PK.AllowDBNull = false
            Me.columnCHTIT_CDF_TIT_CODE_FK_PK.MaxLength = 10
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewCHTIT_CH_TITRE2Row() As CHTIT_CH_TITRE2Row
            Return CType(Me.NewRow,CHTIT_CH_TITRE2Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New CHTIT_CH_TITRE2Row(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(CHTIT_CH_TITRE2Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.CHTIT_CH_TITRE2RowChangedEvent) Is Nothing) Then
                RaiseEvent CHTIT_CH_TITRE2RowChanged(Me, New CHTIT_CH_TITRE2RowChangeEvent(CType(e.Row,CHTIT_CH_TITRE2Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.CHTIT_CH_TITRE2RowChangingEvent) Is Nothing) Then
                RaiseEvent CHTIT_CH_TITRE2RowChanging(Me, New CHTIT_CH_TITRE2RowChangeEvent(CType(e.Row,CHTIT_CH_TITRE2Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.CHTIT_CH_TITRE2RowDeletedEvent) Is Nothing) Then
                RaiseEvent CHTIT_CH_TITRE2RowDeleted(Me, New CHTIT_CH_TITRE2RowChangeEvent(CType(e.Row,CHTIT_CH_TITRE2Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.CHTIT_CH_TITRE2RowDeletingEvent) Is Nothing) Then
                RaiseEvent CHTIT_CH_TITRE2RowDeleting(Me, New CHTIT_CH_TITRE2RowChangeEvent(CType(e.Row,CHTIT_CH_TITRE2Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveCHTIT_CH_TITRE2Row(ByVal row As CHTIT_CH_TITRE2Row)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsTheriaque_CriteresChoix = New dsTheriaque_CriteresChoix()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "CHTIT_CH_TITRE2DataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class FTR_FICHETRANSPARENCEDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnFTR_CODE_SQ_PK As Global.System.Data.DataColumn
        
        Private columnFTR_TITRE As Global.System.Data.DataColumn
        
        Private columnFTR_DATE_REDACTION As Global.System.Data.DataColumn
        
        Private columnFTR_TEXTE As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "FTR_FICHETRANSPARENCE"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FTR_CODE_SQ_PKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFTR_CODE_SQ_PK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FTR_TITREColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFTR_TITRE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FTR_DATE_REDACTIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFTR_DATE_REDACTION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FTR_TEXTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFTR_TEXTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As FTR_FICHETRANSPARENCERow
            Get
                Return CType(Me.Rows(index),FTR_FICHETRANSPARENCERow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FTR_FICHETRANSPARENCERowChanging As FTR_FICHETRANSPARENCERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FTR_FICHETRANSPARENCERowChanged As FTR_FICHETRANSPARENCERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FTR_FICHETRANSPARENCERowDeleting As FTR_FICHETRANSPARENCERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FTR_FICHETRANSPARENCERowDeleted As FTR_FICHETRANSPARENCERowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddFTR_FICHETRANSPARENCERow(ByVal row As FTR_FICHETRANSPARENCERow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddFTR_FICHETRANSPARENCERow(ByVal FTR_CODE_SQ_PK As Integer, ByVal FTR_TITRE As String, ByVal FTR_DATE_REDACTION As Date, ByVal FTR_TEXTE As String) As FTR_FICHETRANSPARENCERow
            Dim rowFTR_FICHETRANSPARENCERow As FTR_FICHETRANSPARENCERow = CType(Me.NewRow,FTR_FICHETRANSPARENCERow)
            Dim columnValuesArray() As Object = New Object() {FTR_CODE_SQ_PK, FTR_TITRE, FTR_DATE_REDACTION, FTR_TEXTE}
            rowFTR_FICHETRANSPARENCERow.ItemArray = columnValuesArray
            Me.Rows.Add(rowFTR_FICHETRANSPARENCERow)
            Return rowFTR_FICHETRANSPARENCERow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByFTR_CODE_SQ_PK(ByVal FTR_CODE_SQ_PK As Integer) As FTR_FICHETRANSPARENCERow
            Return CType(Me.Rows.Find(New Object() {FTR_CODE_SQ_PK}),FTR_FICHETRANSPARENCERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As FTR_FICHETRANSPARENCEDataTable = CType(MyBase.Clone,FTR_FICHETRANSPARENCEDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New FTR_FICHETRANSPARENCEDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnFTR_CODE_SQ_PK = MyBase.Columns("FTR_CODE_SQ_PK")
            Me.columnFTR_TITRE = MyBase.Columns("FTR_TITRE")
            Me.columnFTR_DATE_REDACTION = MyBase.Columns("FTR_DATE_REDACTION")
            Me.columnFTR_TEXTE = MyBase.Columns("FTR_TEXTE")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnFTR_CODE_SQ_PK = New Global.System.Data.DataColumn("FTR_CODE_SQ_PK", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFTR_CODE_SQ_PK)
            Me.columnFTR_TITRE = New Global.System.Data.DataColumn("FTR_TITRE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFTR_TITRE)
            Me.columnFTR_DATE_REDACTION = New Global.System.Data.DataColumn("FTR_DATE_REDACTION", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFTR_DATE_REDACTION)
            Me.columnFTR_TEXTE = New Global.System.Data.DataColumn("FTR_TEXTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFTR_TEXTE)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnFTR_CODE_SQ_PK}, true))
            Me.columnFTR_CODE_SQ_PK.AllowDBNull = false
            Me.columnFTR_CODE_SQ_PK.Unique = true
            Me.columnFTR_TITRE.AllowDBNull = false
            Me.columnFTR_TITRE.MaxLength = 40
            Me.columnFTR_DATE_REDACTION.AllowDBNull = false
            Me.columnFTR_TEXTE.AllowDBNull = false
            Me.columnFTR_TEXTE.MaxLength = 2147483647
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewFTR_FICHETRANSPARENCERow() As FTR_FICHETRANSPARENCERow
            Return CType(Me.NewRow,FTR_FICHETRANSPARENCERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New FTR_FICHETRANSPARENCERow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(FTR_FICHETRANSPARENCERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.FTR_FICHETRANSPARENCERowChangedEvent) Is Nothing) Then
                RaiseEvent FTR_FICHETRANSPARENCERowChanged(Me, New FTR_FICHETRANSPARENCERowChangeEvent(CType(e.Row,FTR_FICHETRANSPARENCERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.FTR_FICHETRANSPARENCERowChangingEvent) Is Nothing) Then
                RaiseEvent FTR_FICHETRANSPARENCERowChanging(Me, New FTR_FICHETRANSPARENCERowChangeEvent(CType(e.Row,FTR_FICHETRANSPARENCERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.FTR_FICHETRANSPARENCERowDeletedEvent) Is Nothing) Then
                RaiseEvent FTR_FICHETRANSPARENCERowDeleted(Me, New FTR_FICHETRANSPARENCERowChangeEvent(CType(e.Row,FTR_FICHETRANSPARENCERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.FTR_FICHETRANSPARENCERowDeletingEvent) Is Nothing) Then
                RaiseEvent FTR_FICHETRANSPARENCERowDeleting(Me, New FTR_FICHETRANSPARENCERowChangeEvent(CType(e.Row,FTR_FICHETRANSPARENCERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveFTR_FICHETRANSPARENCERow(ByVal row As FTR_FICHETRANSPARENCERow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsTheriaque_CriteresChoix = New dsTheriaque_CriteresChoix()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "FTR_FICHETRANSPARENCEDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class FTH_FICHEINFOTHERAPEUTIQUEDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnFTH_CODE_SQ_PK As Global.System.Data.DataColumn
        
        Private columnFTH_TITRE As Global.System.Data.DataColumn
        
        Private columnFTH_DATE_JO As Global.System.Data.DataColumn
        
        Private columnFTH_TEXTE As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "FTH_FICHEINFOTHERAPEUTIQUE"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FTH_CODE_SQ_PKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFTH_CODE_SQ_PK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FTH_TITREColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFTH_TITRE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FTH_DATE_JOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFTH_DATE_JO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FTH_TEXTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFTH_TEXTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As FTH_FICHEINFOTHERAPEUTIQUERow
            Get
                Return CType(Me.Rows(index),FTH_FICHEINFOTHERAPEUTIQUERow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FTH_FICHEINFOTHERAPEUTIQUERowChanging As FTH_FICHEINFOTHERAPEUTIQUERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FTH_FICHEINFOTHERAPEUTIQUERowChanged As FTH_FICHEINFOTHERAPEUTIQUERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FTH_FICHEINFOTHERAPEUTIQUERowDeleting As FTH_FICHEINFOTHERAPEUTIQUERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FTH_FICHEINFOTHERAPEUTIQUERowDeleted As FTH_FICHEINFOTHERAPEUTIQUERowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddFTH_FICHEINFOTHERAPEUTIQUERow(ByVal row As FTH_FICHEINFOTHERAPEUTIQUERow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddFTH_FICHEINFOTHERAPEUTIQUERow(ByVal FTH_CODE_SQ_PK As Integer, ByVal FTH_TITRE As String, ByVal FTH_DATE_JO As Date, ByVal FTH_TEXTE As String) As FTH_FICHEINFOTHERAPEUTIQUERow
            Dim rowFTH_FICHEINFOTHERAPEUTIQUERow As FTH_FICHEINFOTHERAPEUTIQUERow = CType(Me.NewRow,FTH_FICHEINFOTHERAPEUTIQUERow)
            Dim columnValuesArray() As Object = New Object() {FTH_CODE_SQ_PK, FTH_TITRE, FTH_DATE_JO, FTH_TEXTE}
            rowFTH_FICHEINFOTHERAPEUTIQUERow.ItemArray = columnValuesArray
            Me.Rows.Add(rowFTH_FICHEINFOTHERAPEUTIQUERow)
            Return rowFTH_FICHEINFOTHERAPEUTIQUERow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByFTH_CODE_SQ_PK(ByVal FTH_CODE_SQ_PK As Integer) As FTH_FICHEINFOTHERAPEUTIQUERow
            Return CType(Me.Rows.Find(New Object() {FTH_CODE_SQ_PK}),FTH_FICHEINFOTHERAPEUTIQUERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As FTH_FICHEINFOTHERAPEUTIQUEDataTable = CType(MyBase.Clone,FTH_FICHEINFOTHERAPEUTIQUEDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New FTH_FICHEINFOTHERAPEUTIQUEDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnFTH_CODE_SQ_PK = MyBase.Columns("FTH_CODE_SQ_PK")
            Me.columnFTH_TITRE = MyBase.Columns("FTH_TITRE")
            Me.columnFTH_DATE_JO = MyBase.Columns("FTH_DATE_JO")
            Me.columnFTH_TEXTE = MyBase.Columns("FTH_TEXTE")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnFTH_CODE_SQ_PK = New Global.System.Data.DataColumn("FTH_CODE_SQ_PK", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFTH_CODE_SQ_PK)
            Me.columnFTH_TITRE = New Global.System.Data.DataColumn("FTH_TITRE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFTH_TITRE)
            Me.columnFTH_DATE_JO = New Global.System.Data.DataColumn("FTH_DATE_JO", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFTH_DATE_JO)
            Me.columnFTH_TEXTE = New Global.System.Data.DataColumn("FTH_TEXTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFTH_TEXTE)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnFTH_CODE_SQ_PK}, true))
            Me.columnFTH_CODE_SQ_PK.AllowDBNull = false
            Me.columnFTH_CODE_SQ_PK.Unique = true
            Me.columnFTH_TITRE.AllowDBNull = false
            Me.columnFTH_TITRE.MaxLength = 40
            Me.columnFTH_DATE_JO.AllowDBNull = false
            Me.columnFTH_TEXTE.AllowDBNull = false
            Me.columnFTH_TEXTE.MaxLength = 2147483647
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewFTH_FICHEINFOTHERAPEUTIQUERow() As FTH_FICHEINFOTHERAPEUTIQUERow
            Return CType(Me.NewRow,FTH_FICHEINFOTHERAPEUTIQUERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New FTH_FICHEINFOTHERAPEUTIQUERow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(FTH_FICHEINFOTHERAPEUTIQUERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.FTH_FICHEINFOTHERAPEUTIQUERowChangedEvent) Is Nothing) Then
                RaiseEvent FTH_FICHEINFOTHERAPEUTIQUERowChanged(Me, New FTH_FICHEINFOTHERAPEUTIQUERowChangeEvent(CType(e.Row,FTH_FICHEINFOTHERAPEUTIQUERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.FTH_FICHEINFOTHERAPEUTIQUERowChangingEvent) Is Nothing) Then
                RaiseEvent FTH_FICHEINFOTHERAPEUTIQUERowChanging(Me, New FTH_FICHEINFOTHERAPEUTIQUERowChangeEvent(CType(e.Row,FTH_FICHEINFOTHERAPEUTIQUERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.FTH_FICHEINFOTHERAPEUTIQUERowDeletedEvent) Is Nothing) Then
                RaiseEvent FTH_FICHEINFOTHERAPEUTIQUERowDeleted(Me, New FTH_FICHEINFOTHERAPEUTIQUERowChangeEvent(CType(e.Row,FTH_FICHEINFOTHERAPEUTIQUERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.FTH_FICHEINFOTHERAPEUTIQUERowDeletingEvent) Is Nothing) Then
                RaiseEvent FTH_FICHEINFOTHERAPEUTIQUERowDeleting(Me, New FTH_FICHEINFOTHERAPEUTIQUERowChangeEvent(CType(e.Row,FTH_FICHEINFOTHERAPEUTIQUERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveFTH_FICHEINFOTHERAPEUTIQUERow(ByVal row As FTH_FICHEINFOTHERAPEUTIQUERow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsTheriaque_CriteresChoix = New dsTheriaque_CriteresChoix()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "FTH_FICHEINFOTHERAPEUTIQUEDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class RMODataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnRMO_CODE_PK As Global.System.Data.DataColumn
        
        Private columnRMO_TITRE1 As Global.System.Data.DataColumn
        
        Private columnRMO_TITRE2 As Global.System.Data.DataColumn
        
        Private columnRMO_TEXTE As Global.System.Data.DataColumn
        
        Private columnRMO_DATECR As Global.System.Data.DataColumn
        
        Private columnRMO_DATEJO As Global.System.Data.DataColumn
        
        Private columnRMO_DATEMJ As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "RMO"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RMO_CODE_PKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRMO_CODE_PK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RMO_TITRE1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRMO_TITRE1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RMO_TITRE2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRMO_TITRE2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RMO_TEXTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRMO_TEXTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RMO_DATECRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRMO_DATECR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RMO_DATEJOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRMO_DATEJO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RMO_DATEMJColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRMO_DATEMJ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As RMORow
            Get
                Return CType(Me.Rows(index),RMORow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event RMORowChanging As RMORowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event RMORowChanged As RMORowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event RMORowDeleting As RMORowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event RMORowDeleted As RMORowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddRMORow(ByVal row As RMORow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddRMORow(ByVal RMO_CODE_PK As Byte, ByVal RMO_TITRE1 As String, ByVal RMO_TITRE2 As String, ByVal RMO_TEXTE As String, ByVal RMO_DATECR As Date, ByVal RMO_DATEJO As Date, ByVal RMO_DATEMJ As Date) As RMORow
            Dim rowRMORow As RMORow = CType(Me.NewRow,RMORow)
            Dim columnValuesArray() As Object = New Object() {RMO_CODE_PK, RMO_TITRE1, RMO_TITRE2, RMO_TEXTE, RMO_DATECR, RMO_DATEJO, RMO_DATEMJ}
            rowRMORow.ItemArray = columnValuesArray
            Me.Rows.Add(rowRMORow)
            Return rowRMORow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByRMO_CODE_PK(ByVal RMO_CODE_PK As Byte) As RMORow
            Return CType(Me.Rows.Find(New Object() {RMO_CODE_PK}),RMORow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As RMODataTable = CType(MyBase.Clone,RMODataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New RMODataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnRMO_CODE_PK = MyBase.Columns("RMO_CODE_PK")
            Me.columnRMO_TITRE1 = MyBase.Columns("RMO_TITRE1")
            Me.columnRMO_TITRE2 = MyBase.Columns("RMO_TITRE2")
            Me.columnRMO_TEXTE = MyBase.Columns("RMO_TEXTE")
            Me.columnRMO_DATECR = MyBase.Columns("RMO_DATECR")
            Me.columnRMO_DATEJO = MyBase.Columns("RMO_DATEJO")
            Me.columnRMO_DATEMJ = MyBase.Columns("RMO_DATEMJ")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnRMO_CODE_PK = New Global.System.Data.DataColumn("RMO_CODE_PK", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRMO_CODE_PK)
            Me.columnRMO_TITRE1 = New Global.System.Data.DataColumn("RMO_TITRE1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRMO_TITRE1)
            Me.columnRMO_TITRE2 = New Global.System.Data.DataColumn("RMO_TITRE2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRMO_TITRE2)
            Me.columnRMO_TEXTE = New Global.System.Data.DataColumn("RMO_TEXTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRMO_TEXTE)
            Me.columnRMO_DATECR = New Global.System.Data.DataColumn("RMO_DATECR", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRMO_DATECR)
            Me.columnRMO_DATEJO = New Global.System.Data.DataColumn("RMO_DATEJO", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRMO_DATEJO)
            Me.columnRMO_DATEMJ = New Global.System.Data.DataColumn("RMO_DATEMJ", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRMO_DATEMJ)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnRMO_CODE_PK}, true))
            Me.columnRMO_CODE_PK.AllowDBNull = false
            Me.columnRMO_CODE_PK.Unique = true
            Me.columnRMO_TITRE1.AllowDBNull = false
            Me.columnRMO_TITRE1.MaxLength = 40
            Me.columnRMO_TITRE2.MaxLength = 40
            Me.columnRMO_TEXTE.AllowDBNull = false
            Me.columnRMO_TEXTE.MaxLength = 2147483647
            Me.columnRMO_DATECR.AllowDBNull = false
            Me.columnRMO_DATEJO.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewRMORow() As RMORow
            Return CType(Me.NewRow,RMORow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New RMORow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(RMORow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.RMORowChangedEvent) Is Nothing) Then
                RaiseEvent RMORowChanged(Me, New RMORowChangeEvent(CType(e.Row,RMORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.RMORowChangingEvent) Is Nothing) Then
                RaiseEvent RMORowChanging(Me, New RMORowChangeEvent(CType(e.Row,RMORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.RMORowDeletedEvent) Is Nothing) Then
                RaiseEvent RMORowDeleted(Me, New RMORowChangeEvent(CType(e.Row,RMORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.RMORowDeletingEvent) Is Nothing) Then
                RaiseEvent RMORowDeleting(Me, New RMORowChangeEvent(CType(e.Row,RMORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveRMORow(ByVal row As RMORow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsTheriaque_CriteresChoix = New dsTheriaque_CriteresChoix()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "RMODataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class CLRMO_CLASSE_RMODataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnCLRMO_RMO_CODE_FK_PK As Global.System.Data.DataColumn
        
        Private columnCLRMO_CL_CODE_PK As Global.System.Data.DataColumn
        
        Private columnCLRMO_NOM As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "CLRMO_CLASSE_RMO"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLRMO_RMO_CODE_FK_PKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLRMO_RMO_CODE_FK_PK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLRMO_CL_CODE_PKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLRMO_CL_CODE_PK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLRMO_NOMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLRMO_NOM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As CLRMO_CLASSE_RMORow
            Get
                Return CType(Me.Rows(index),CLRMO_CLASSE_RMORow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CLRMO_CLASSE_RMORowChanging As CLRMO_CLASSE_RMORowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CLRMO_CLASSE_RMORowChanged As CLRMO_CLASSE_RMORowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CLRMO_CLASSE_RMORowDeleting As CLRMO_CLASSE_RMORowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CLRMO_CLASSE_RMORowDeleted As CLRMO_CLASSE_RMORowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddCLRMO_CLASSE_RMORow(ByVal row As CLRMO_CLASSE_RMORow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddCLRMO_CLASSE_RMORow(ByVal CLRMO_RMO_CODE_FK_PK As Byte, ByVal CLRMO_CL_CODE_PK As Byte, ByVal CLRMO_NOM As String) As CLRMO_CLASSE_RMORow
            Dim rowCLRMO_CLASSE_RMORow As CLRMO_CLASSE_RMORow = CType(Me.NewRow,CLRMO_CLASSE_RMORow)
            Dim columnValuesArray() As Object = New Object() {CLRMO_RMO_CODE_FK_PK, CLRMO_CL_CODE_PK, CLRMO_NOM}
            rowCLRMO_CLASSE_RMORow.ItemArray = columnValuesArray
            Me.Rows.Add(rowCLRMO_CLASSE_RMORow)
            Return rowCLRMO_CLASSE_RMORow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByCLRMO_RMO_CODE_FK_PKCLRMO_CL_CODE_PK(ByVal CLRMO_RMO_CODE_FK_PK As Byte, ByVal CLRMO_CL_CODE_PK As Byte) As CLRMO_CLASSE_RMORow
            Return CType(Me.Rows.Find(New Object() {CLRMO_RMO_CODE_FK_PK, CLRMO_CL_CODE_PK}),CLRMO_CLASSE_RMORow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As CLRMO_CLASSE_RMODataTable = CType(MyBase.Clone,CLRMO_CLASSE_RMODataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New CLRMO_CLASSE_RMODataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCLRMO_RMO_CODE_FK_PK = MyBase.Columns("CLRMO_RMO_CODE_FK_PK")
            Me.columnCLRMO_CL_CODE_PK = MyBase.Columns("CLRMO_CL_CODE_PK")
            Me.columnCLRMO_NOM = MyBase.Columns("CLRMO_NOM")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCLRMO_RMO_CODE_FK_PK = New Global.System.Data.DataColumn("CLRMO_RMO_CODE_FK_PK", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLRMO_RMO_CODE_FK_PK)
            Me.columnCLRMO_CL_CODE_PK = New Global.System.Data.DataColumn("CLRMO_CL_CODE_PK", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLRMO_CL_CODE_PK)
            Me.columnCLRMO_NOM = New Global.System.Data.DataColumn("CLRMO_NOM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLRMO_NOM)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnCLRMO_RMO_CODE_FK_PK, Me.columnCLRMO_CL_CODE_PK}, true))
            Me.columnCLRMO_RMO_CODE_FK_PK.AllowDBNull = false
            Me.columnCLRMO_CL_CODE_PK.AllowDBNull = false
            Me.columnCLRMO_NOM.AllowDBNull = false
            Me.columnCLRMO_NOM.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewCLRMO_CLASSE_RMORow() As CLRMO_CLASSE_RMORow
            Return CType(Me.NewRow,CLRMO_CLASSE_RMORow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New CLRMO_CLASSE_RMORow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(CLRMO_CLASSE_RMORow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.CLRMO_CLASSE_RMORowChangedEvent) Is Nothing) Then
                RaiseEvent CLRMO_CLASSE_RMORowChanged(Me, New CLRMO_CLASSE_RMORowChangeEvent(CType(e.Row,CLRMO_CLASSE_RMORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.CLRMO_CLASSE_RMORowChangingEvent) Is Nothing) Then
                RaiseEvent CLRMO_CLASSE_RMORowChanging(Me, New CLRMO_CLASSE_RMORowChangeEvent(CType(e.Row,CLRMO_CLASSE_RMORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.CLRMO_CLASSE_RMORowDeletedEvent) Is Nothing) Then
                RaiseEvent CLRMO_CLASSE_RMORowDeleted(Me, New CLRMO_CLASSE_RMORowChangeEvent(CType(e.Row,CLRMO_CLASSE_RMORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.CLRMO_CLASSE_RMORowDeletingEvent) Is Nothing) Then
                RaiseEvent CLRMO_CLASSE_RMORowDeleting(Me, New CLRMO_CLASSE_RMORowChangeEvent(CType(e.Row,CLRMO_CLASSE_RMORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveCLRMO_CLASSE_RMORow(ByVal row As CLRMO_CLASSE_RMORow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsTheriaque_CriteresChoix = New dsTheriaque_CriteresChoix()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "CLRMO_CLASSE_RMODataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class SPSMR_SERVICE_MEDICAL_RENDUDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnSPSMR_SP_CODE_FK_PK As Global.System.Data.DataColumn
        
        Private columnSPSMR_CDF_SMR_CODE_FK_PK As Global.System.Data.DataColumn
        
        Private columnSPSMR_NUM_ORD_PK As Global.System.Data.DataColumn
        
        Private columnSPSMR_DATE As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "SPSMR_SERVICE_MEDICAL_RENDU"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SPSMR_SP_CODE_FK_PKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSPSMR_SP_CODE_FK_PK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SPSMR_CDF_SMR_CODE_FK_PKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSPSMR_CDF_SMR_CODE_FK_PK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SPSMR_NUM_ORD_PKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSPSMR_NUM_ORD_PK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SPSMR_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSPSMR_DATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As SPSMR_SERVICE_MEDICAL_RENDURow
            Get
                Return CType(Me.Rows(index),SPSMR_SERVICE_MEDICAL_RENDURow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SPSMR_SERVICE_MEDICAL_RENDURowChanging As SPSMR_SERVICE_MEDICAL_RENDURowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SPSMR_SERVICE_MEDICAL_RENDURowChanged As SPSMR_SERVICE_MEDICAL_RENDURowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SPSMR_SERVICE_MEDICAL_RENDURowDeleting As SPSMR_SERVICE_MEDICAL_RENDURowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SPSMR_SERVICE_MEDICAL_RENDURowDeleted As SPSMR_SERVICE_MEDICAL_RENDURowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddSPSMR_SERVICE_MEDICAL_RENDURow(ByVal row As SPSMR_SERVICE_MEDICAL_RENDURow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddSPSMR_SERVICE_MEDICAL_RENDURow(ByVal SPSMR_SP_CODE_FK_PK As Integer, ByVal SPSMR_CDF_SMR_CODE_FK_PK As String, ByVal SPSMR_NUM_ORD_PK As Short, ByVal SPSMR_DATE As Date) As SPSMR_SERVICE_MEDICAL_RENDURow
            Dim rowSPSMR_SERVICE_MEDICAL_RENDURow As SPSMR_SERVICE_MEDICAL_RENDURow = CType(Me.NewRow,SPSMR_SERVICE_MEDICAL_RENDURow)
            Dim columnValuesArray() As Object = New Object() {SPSMR_SP_CODE_FK_PK, SPSMR_CDF_SMR_CODE_FK_PK, SPSMR_NUM_ORD_PK, SPSMR_DATE}
            rowSPSMR_SERVICE_MEDICAL_RENDURow.ItemArray = columnValuesArray
            Me.Rows.Add(rowSPSMR_SERVICE_MEDICAL_RENDURow)
            Return rowSPSMR_SERVICE_MEDICAL_RENDURow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindBySPSMR_SP_CODE_FK_PKSPSMR_CDF_SMR_CODE_FK_PKSPSMR_NUM_ORD_PK(ByVal SPSMR_SP_CODE_FK_PK As Integer, ByVal SPSMR_CDF_SMR_CODE_FK_PK As String, ByVal SPSMR_NUM_ORD_PK As Short) As SPSMR_SERVICE_MEDICAL_RENDURow
            Return CType(Me.Rows.Find(New Object() {SPSMR_SP_CODE_FK_PK, SPSMR_CDF_SMR_CODE_FK_PK, SPSMR_NUM_ORD_PK}),SPSMR_SERVICE_MEDICAL_RENDURow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As SPSMR_SERVICE_MEDICAL_RENDUDataTable = CType(MyBase.Clone,SPSMR_SERVICE_MEDICAL_RENDUDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New SPSMR_SERVICE_MEDICAL_RENDUDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnSPSMR_SP_CODE_FK_PK = MyBase.Columns("SPSMR_SP_CODE_FK_PK")
            Me.columnSPSMR_CDF_SMR_CODE_FK_PK = MyBase.Columns("SPSMR_CDF_SMR_CODE_FK_PK")
            Me.columnSPSMR_NUM_ORD_PK = MyBase.Columns("SPSMR_NUM_ORD_PK")
            Me.columnSPSMR_DATE = MyBase.Columns("SPSMR_DATE")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnSPSMR_SP_CODE_FK_PK = New Global.System.Data.DataColumn("SPSMR_SP_CODE_FK_PK", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSPSMR_SP_CODE_FK_PK)
            Me.columnSPSMR_CDF_SMR_CODE_FK_PK = New Global.System.Data.DataColumn("SPSMR_CDF_SMR_CODE_FK_PK", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSPSMR_CDF_SMR_CODE_FK_PK)
            Me.columnSPSMR_NUM_ORD_PK = New Global.System.Data.DataColumn("SPSMR_NUM_ORD_PK", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSPSMR_NUM_ORD_PK)
            Me.columnSPSMR_DATE = New Global.System.Data.DataColumn("SPSMR_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSPSMR_DATE)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnSPSMR_SP_CODE_FK_PK, Me.columnSPSMR_CDF_SMR_CODE_FK_PK, Me.columnSPSMR_NUM_ORD_PK}, true))
            Me.columnSPSMR_SP_CODE_FK_PK.AllowDBNull = false
            Me.columnSPSMR_CDF_SMR_CODE_FK_PK.AllowDBNull = false
            Me.columnSPSMR_CDF_SMR_CODE_FK_PK.MaxLength = 10
            Me.columnSPSMR_NUM_ORD_PK.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewSPSMR_SERVICE_MEDICAL_RENDURow() As SPSMR_SERVICE_MEDICAL_RENDURow
            Return CType(Me.NewRow,SPSMR_SERVICE_MEDICAL_RENDURow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New SPSMR_SERVICE_MEDICAL_RENDURow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(SPSMR_SERVICE_MEDICAL_RENDURow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.SPSMR_SERVICE_MEDICAL_RENDURowChangedEvent) Is Nothing) Then
                RaiseEvent SPSMR_SERVICE_MEDICAL_RENDURowChanged(Me, New SPSMR_SERVICE_MEDICAL_RENDURowChangeEvent(CType(e.Row,SPSMR_SERVICE_MEDICAL_RENDURow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.SPSMR_SERVICE_MEDICAL_RENDURowChangingEvent) Is Nothing) Then
                RaiseEvent SPSMR_SERVICE_MEDICAL_RENDURowChanging(Me, New SPSMR_SERVICE_MEDICAL_RENDURowChangeEvent(CType(e.Row,SPSMR_SERVICE_MEDICAL_RENDURow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.SPSMR_SERVICE_MEDICAL_RENDURowDeletedEvent) Is Nothing) Then
                RaiseEvent SPSMR_SERVICE_MEDICAL_RENDURowDeleted(Me, New SPSMR_SERVICE_MEDICAL_RENDURowChangeEvent(CType(e.Row,SPSMR_SERVICE_MEDICAL_RENDURow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.SPSMR_SERVICE_MEDICAL_RENDURowDeletingEvent) Is Nothing) Then
                RaiseEvent SPSMR_SERVICE_MEDICAL_RENDURowDeleting(Me, New SPSMR_SERVICE_MEDICAL_RENDURowChangeEvent(CType(e.Row,SPSMR_SERVICE_MEDICAL_RENDURow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveSPSMR_SERVICE_MEDICAL_RENDURow(ByVal row As SPSMR_SERVICE_MEDICAL_RENDURow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsTheriaque_CriteresChoix = New dsTheriaque_CriteresChoix()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "SPSMR_SERVICE_MEDICAL_RENDUDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class SPFTH_SPEC_INFOTHERAPEUTIQUEDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnSPFTH_SP_CODE_FK_PK As Global.System.Data.DataColumn
        
        Private columnSPFTH_FTH_CODE_FK_PK As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "SPFTH_SPEC_INFOTHERAPEUTIQUE"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SPFTH_SP_CODE_FK_PKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSPFTH_SP_CODE_FK_PK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SPFTH_FTH_CODE_FK_PKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSPFTH_FTH_CODE_FK_PK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As SPFTH_SPEC_INFOTHERAPEUTIQUERow
            Get
                Return CType(Me.Rows(index),SPFTH_SPEC_INFOTHERAPEUTIQUERow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SPFTH_SPEC_INFOTHERAPEUTIQUERowChanging As SPFTH_SPEC_INFOTHERAPEUTIQUERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SPFTH_SPEC_INFOTHERAPEUTIQUERowChanged As SPFTH_SPEC_INFOTHERAPEUTIQUERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SPFTH_SPEC_INFOTHERAPEUTIQUERowDeleting As SPFTH_SPEC_INFOTHERAPEUTIQUERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SPFTH_SPEC_INFOTHERAPEUTIQUERowDeleted As SPFTH_SPEC_INFOTHERAPEUTIQUERowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddSPFTH_SPEC_INFOTHERAPEUTIQUERow(ByVal row As SPFTH_SPEC_INFOTHERAPEUTIQUERow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddSPFTH_SPEC_INFOTHERAPEUTIQUERow(ByVal SPFTH_SP_CODE_FK_PK As Integer, ByVal SPFTH_FTH_CODE_FK_PK As Integer) As SPFTH_SPEC_INFOTHERAPEUTIQUERow
            Dim rowSPFTH_SPEC_INFOTHERAPEUTIQUERow As SPFTH_SPEC_INFOTHERAPEUTIQUERow = CType(Me.NewRow,SPFTH_SPEC_INFOTHERAPEUTIQUERow)
            Dim columnValuesArray() As Object = New Object() {SPFTH_SP_CODE_FK_PK, SPFTH_FTH_CODE_FK_PK}
            rowSPFTH_SPEC_INFOTHERAPEUTIQUERow.ItemArray = columnValuesArray
            Me.Rows.Add(rowSPFTH_SPEC_INFOTHERAPEUTIQUERow)
            Return rowSPFTH_SPEC_INFOTHERAPEUTIQUERow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindBySPFTH_SP_CODE_FK_PKSPFTH_FTH_CODE_FK_PK(ByVal SPFTH_SP_CODE_FK_PK As Integer, ByVal SPFTH_FTH_CODE_FK_PK As Integer) As SPFTH_SPEC_INFOTHERAPEUTIQUERow
            Return CType(Me.Rows.Find(New Object() {SPFTH_SP_CODE_FK_PK, SPFTH_FTH_CODE_FK_PK}),SPFTH_SPEC_INFOTHERAPEUTIQUERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As SPFTH_SPEC_INFOTHERAPEUTIQUEDataTable = CType(MyBase.Clone,SPFTH_SPEC_INFOTHERAPEUTIQUEDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New SPFTH_SPEC_INFOTHERAPEUTIQUEDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnSPFTH_SP_CODE_FK_PK = MyBase.Columns("SPFTH_SP_CODE_FK_PK")
            Me.columnSPFTH_FTH_CODE_FK_PK = MyBase.Columns("SPFTH_FTH_CODE_FK_PK")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnSPFTH_SP_CODE_FK_PK = New Global.System.Data.DataColumn("SPFTH_SP_CODE_FK_PK", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSPFTH_SP_CODE_FK_PK)
            Me.columnSPFTH_FTH_CODE_FK_PK = New Global.System.Data.DataColumn("SPFTH_FTH_CODE_FK_PK", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSPFTH_FTH_CODE_FK_PK)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnSPFTH_SP_CODE_FK_PK, Me.columnSPFTH_FTH_CODE_FK_PK}, true))
            Me.columnSPFTH_SP_CODE_FK_PK.AllowDBNull = false
            Me.columnSPFTH_FTH_CODE_FK_PK.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewSPFTH_SPEC_INFOTHERAPEUTIQUERow() As SPFTH_SPEC_INFOTHERAPEUTIQUERow
            Return CType(Me.NewRow,SPFTH_SPEC_INFOTHERAPEUTIQUERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New SPFTH_SPEC_INFOTHERAPEUTIQUERow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(SPFTH_SPEC_INFOTHERAPEUTIQUERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.SPFTH_SPEC_INFOTHERAPEUTIQUERowChangedEvent) Is Nothing) Then
                RaiseEvent SPFTH_SPEC_INFOTHERAPEUTIQUERowChanged(Me, New SPFTH_SPEC_INFOTHERAPEUTIQUERowChangeEvent(CType(e.Row,SPFTH_SPEC_INFOTHERAPEUTIQUERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.SPFTH_SPEC_INFOTHERAPEUTIQUERowChangingEvent) Is Nothing) Then
                RaiseEvent SPFTH_SPEC_INFOTHERAPEUTIQUERowChanging(Me, New SPFTH_SPEC_INFOTHERAPEUTIQUERowChangeEvent(CType(e.Row,SPFTH_SPEC_INFOTHERAPEUTIQUERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.SPFTH_SPEC_INFOTHERAPEUTIQUERowDeletedEvent) Is Nothing) Then
                RaiseEvent SPFTH_SPEC_INFOTHERAPEUTIQUERowDeleted(Me, New SPFTH_SPEC_INFOTHERAPEUTIQUERowChangeEvent(CType(e.Row,SPFTH_SPEC_INFOTHERAPEUTIQUERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.SPFTH_SPEC_INFOTHERAPEUTIQUERowDeletingEvent) Is Nothing) Then
                RaiseEvent SPFTH_SPEC_INFOTHERAPEUTIQUERowDeleting(Me, New SPFTH_SPEC_INFOTHERAPEUTIQUERowChangeEvent(CType(e.Row,SPFTH_SPEC_INFOTHERAPEUTIQUERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveSPFTH_SPEC_INFOTHERAPEUTIQUERow(ByVal row As SPFTH_SPEC_INFOTHERAPEUTIQUERow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsTheriaque_CriteresChoix = New dsTheriaque_CriteresChoix()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "SPFTH_SPEC_INFOTHERAPEUTIQUEDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class SPCH_SPECIALITE_CHOIXDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnSPCH_SP_CODE_FK_PK As Global.System.Data.DataColumn
        
        Private columnSPCH_CH_CODE_FK_PK As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "SPCH_SPECIALITE_CHOIX"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SPCH_SP_CODE_FK_PKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSPCH_SP_CODE_FK_PK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SPCH_CH_CODE_FK_PKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSPCH_CH_CODE_FK_PK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As SPCH_SPECIALITE_CHOIXRow
            Get
                Return CType(Me.Rows(index),SPCH_SPECIALITE_CHOIXRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SPCH_SPECIALITE_CHOIXRowChanging As SPCH_SPECIALITE_CHOIXRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SPCH_SPECIALITE_CHOIXRowChanged As SPCH_SPECIALITE_CHOIXRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SPCH_SPECIALITE_CHOIXRowDeleting As SPCH_SPECIALITE_CHOIXRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SPCH_SPECIALITE_CHOIXRowDeleted As SPCH_SPECIALITE_CHOIXRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddSPCH_SPECIALITE_CHOIXRow(ByVal row As SPCH_SPECIALITE_CHOIXRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddSPCH_SPECIALITE_CHOIXRow(ByVal SPCH_SP_CODE_FK_PK As Integer, ByVal SPCH_CH_CODE_FK_PK As Integer) As SPCH_SPECIALITE_CHOIXRow
            Dim rowSPCH_SPECIALITE_CHOIXRow As SPCH_SPECIALITE_CHOIXRow = CType(Me.NewRow,SPCH_SPECIALITE_CHOIXRow)
            Dim columnValuesArray() As Object = New Object() {SPCH_SP_CODE_FK_PK, SPCH_CH_CODE_FK_PK}
            rowSPCH_SPECIALITE_CHOIXRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowSPCH_SPECIALITE_CHOIXRow)
            Return rowSPCH_SPECIALITE_CHOIXRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindBySPCH_SP_CODE_FK_PKSPCH_CH_CODE_FK_PK(ByVal SPCH_SP_CODE_FK_PK As Integer, ByVal SPCH_CH_CODE_FK_PK As Integer) As SPCH_SPECIALITE_CHOIXRow
            Return CType(Me.Rows.Find(New Object() {SPCH_SP_CODE_FK_PK, SPCH_CH_CODE_FK_PK}),SPCH_SPECIALITE_CHOIXRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As SPCH_SPECIALITE_CHOIXDataTable = CType(MyBase.Clone,SPCH_SPECIALITE_CHOIXDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New SPCH_SPECIALITE_CHOIXDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnSPCH_SP_CODE_FK_PK = MyBase.Columns("SPCH_SP_CODE_FK_PK")
            Me.columnSPCH_CH_CODE_FK_PK = MyBase.Columns("SPCH_CH_CODE_FK_PK")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnSPCH_SP_CODE_FK_PK = New Global.System.Data.DataColumn("SPCH_SP_CODE_FK_PK", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSPCH_SP_CODE_FK_PK)
            Me.columnSPCH_CH_CODE_FK_PK = New Global.System.Data.DataColumn("SPCH_CH_CODE_FK_PK", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSPCH_CH_CODE_FK_PK)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnSPCH_SP_CODE_FK_PK, Me.columnSPCH_CH_CODE_FK_PK}, true))
            Me.columnSPCH_SP_CODE_FK_PK.AllowDBNull = false
            Me.columnSPCH_CH_CODE_FK_PK.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewSPCH_SPECIALITE_CHOIXRow() As SPCH_SPECIALITE_CHOIXRow
            Return CType(Me.NewRow,SPCH_SPECIALITE_CHOIXRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New SPCH_SPECIALITE_CHOIXRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(SPCH_SPECIALITE_CHOIXRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.SPCH_SPECIALITE_CHOIXRowChangedEvent) Is Nothing) Then
                RaiseEvent SPCH_SPECIALITE_CHOIXRowChanged(Me, New SPCH_SPECIALITE_CHOIXRowChangeEvent(CType(e.Row,SPCH_SPECIALITE_CHOIXRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.SPCH_SPECIALITE_CHOIXRowChangingEvent) Is Nothing) Then
                RaiseEvent SPCH_SPECIALITE_CHOIXRowChanging(Me, New SPCH_SPECIALITE_CHOIXRowChangeEvent(CType(e.Row,SPCH_SPECIALITE_CHOIXRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.SPCH_SPECIALITE_CHOIXRowDeletedEvent) Is Nothing) Then
                RaiseEvent SPCH_SPECIALITE_CHOIXRowDeleted(Me, New SPCH_SPECIALITE_CHOIXRowChangeEvent(CType(e.Row,SPCH_SPECIALITE_CHOIXRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.SPCH_SPECIALITE_CHOIXRowDeletingEvent) Is Nothing) Then
                RaiseEvent SPCH_SPECIALITE_CHOIXRowDeleting(Me, New SPCH_SPECIALITE_CHOIXRowChangeEvent(CType(e.Row,SPCH_SPECIALITE_CHOIXRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveSPCH_SPECIALITE_CHOIXRow(ByVal row As SPCH_SPECIALITE_CHOIXRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsTheriaque_CriteresChoix = New dsTheriaque_CriteresChoix()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "SPCH_SPECIALITE_CHOIXDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class CHSAC_CHOIX_SUBACTIVEDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnCHSAC_CH_CODE_SQ_PK_FK As Global.System.Data.DataColumn
        
        Private columnCHSAC_SAC_CODE_SQ_PK_FK As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "CHSAC_CHOIX_SUBACTIVE"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CHSAC_CH_CODE_SQ_PK_FKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCHSAC_CH_CODE_SQ_PK_FK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CHSAC_SAC_CODE_SQ_PK_FKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCHSAC_SAC_CODE_SQ_PK_FK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As CHSAC_CHOIX_SUBACTIVERow
            Get
                Return CType(Me.Rows(index),CHSAC_CHOIX_SUBACTIVERow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CHSAC_CHOIX_SUBACTIVERowChanging As CHSAC_CHOIX_SUBACTIVERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CHSAC_CHOIX_SUBACTIVERowChanged As CHSAC_CHOIX_SUBACTIVERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CHSAC_CHOIX_SUBACTIVERowDeleting As CHSAC_CHOIX_SUBACTIVERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CHSAC_CHOIX_SUBACTIVERowDeleted As CHSAC_CHOIX_SUBACTIVERowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddCHSAC_CHOIX_SUBACTIVERow(ByVal row As CHSAC_CHOIX_SUBACTIVERow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddCHSAC_CHOIX_SUBACTIVERow(ByVal CHSAC_CH_CODE_SQ_PK_FK As Integer, ByVal CHSAC_SAC_CODE_SQ_PK_FK As Integer) As CHSAC_CHOIX_SUBACTIVERow
            Dim rowCHSAC_CHOIX_SUBACTIVERow As CHSAC_CHOIX_SUBACTIVERow = CType(Me.NewRow,CHSAC_CHOIX_SUBACTIVERow)
            Dim columnValuesArray() As Object = New Object() {CHSAC_CH_CODE_SQ_PK_FK, CHSAC_SAC_CODE_SQ_PK_FK}
            rowCHSAC_CHOIX_SUBACTIVERow.ItemArray = columnValuesArray
            Me.Rows.Add(rowCHSAC_CHOIX_SUBACTIVERow)
            Return rowCHSAC_CHOIX_SUBACTIVERow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByCHSAC_CH_CODE_SQ_PK_FKCHSAC_SAC_CODE_SQ_PK_FK(ByVal CHSAC_CH_CODE_SQ_PK_FK As Integer, ByVal CHSAC_SAC_CODE_SQ_PK_FK As Integer) As CHSAC_CHOIX_SUBACTIVERow
            Return CType(Me.Rows.Find(New Object() {CHSAC_CH_CODE_SQ_PK_FK, CHSAC_SAC_CODE_SQ_PK_FK}),CHSAC_CHOIX_SUBACTIVERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As CHSAC_CHOIX_SUBACTIVEDataTable = CType(MyBase.Clone,CHSAC_CHOIX_SUBACTIVEDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New CHSAC_CHOIX_SUBACTIVEDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCHSAC_CH_CODE_SQ_PK_FK = MyBase.Columns("CHSAC_CH_CODE_SQ_PK_FK")
            Me.columnCHSAC_SAC_CODE_SQ_PK_FK = MyBase.Columns("CHSAC_SAC_CODE_SQ_PK_FK")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCHSAC_CH_CODE_SQ_PK_FK = New Global.System.Data.DataColumn("CHSAC_CH_CODE_SQ_PK_FK", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCHSAC_CH_CODE_SQ_PK_FK)
            Me.columnCHSAC_SAC_CODE_SQ_PK_FK = New Global.System.Data.DataColumn("CHSAC_SAC_CODE_SQ_PK_FK", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCHSAC_SAC_CODE_SQ_PK_FK)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnCHSAC_CH_CODE_SQ_PK_FK, Me.columnCHSAC_SAC_CODE_SQ_PK_FK}, true))
            Me.columnCHSAC_CH_CODE_SQ_PK_FK.AllowDBNull = false
            Me.columnCHSAC_SAC_CODE_SQ_PK_FK.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewCHSAC_CHOIX_SUBACTIVERow() As CHSAC_CHOIX_SUBACTIVERow
            Return CType(Me.NewRow,CHSAC_CHOIX_SUBACTIVERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New CHSAC_CHOIX_SUBACTIVERow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(CHSAC_CHOIX_SUBACTIVERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.CHSAC_CHOIX_SUBACTIVERowChangedEvent) Is Nothing) Then
                RaiseEvent CHSAC_CHOIX_SUBACTIVERowChanged(Me, New CHSAC_CHOIX_SUBACTIVERowChangeEvent(CType(e.Row,CHSAC_CHOIX_SUBACTIVERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.CHSAC_CHOIX_SUBACTIVERowChangingEvent) Is Nothing) Then
                RaiseEvent CHSAC_CHOIX_SUBACTIVERowChanging(Me, New CHSAC_CHOIX_SUBACTIVERowChangeEvent(CType(e.Row,CHSAC_CHOIX_SUBACTIVERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.CHSAC_CHOIX_SUBACTIVERowDeletedEvent) Is Nothing) Then
                RaiseEvent CHSAC_CHOIX_SUBACTIVERowDeleted(Me, New CHSAC_CHOIX_SUBACTIVERowChangeEvent(CType(e.Row,CHSAC_CHOIX_SUBACTIVERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.CHSAC_CHOIX_SUBACTIVERowDeletingEvent) Is Nothing) Then
                RaiseEvent CHSAC_CHOIX_SUBACTIVERowDeleting(Me, New CHSAC_CHOIX_SUBACTIVERowChangeEvent(CType(e.Row,CHSAC_CHOIX_SUBACTIVERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveCHSAC_CHOIX_SUBACTIVERow(ByVal row As CHSAC_CHOIX_SUBACTIVERow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsTheriaque_CriteresChoix = New dsTheriaque_CriteresChoix()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "CHSAC_CHOIX_SUBACTIVEDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class CHCPH_CHOIX_CLASSEPHARMTHERDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnCHCPH_CH_CODE_SQ_PK_FK As Global.System.Data.DataColumn
        
        Private columnCHCPH_CPH_CODE_PK_FK As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "CHCPH_CHOIX_CLASSEPHARMTHER"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CHCPH_CH_CODE_SQ_PK_FKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCHCPH_CH_CODE_SQ_PK_FK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CHCPH_CPH_CODE_PK_FKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCHCPH_CPH_CODE_PK_FK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As CHCPH_CHOIX_CLASSEPHARMTHERRow
            Get
                Return CType(Me.Rows(index),CHCPH_CHOIX_CLASSEPHARMTHERRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CHCPH_CHOIX_CLASSEPHARMTHERRowChanging As CHCPH_CHOIX_CLASSEPHARMTHERRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CHCPH_CHOIX_CLASSEPHARMTHERRowChanged As CHCPH_CHOIX_CLASSEPHARMTHERRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CHCPH_CHOIX_CLASSEPHARMTHERRowDeleting As CHCPH_CHOIX_CLASSEPHARMTHERRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CHCPH_CHOIX_CLASSEPHARMTHERRowDeleted As CHCPH_CHOIX_CLASSEPHARMTHERRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddCHCPH_CHOIX_CLASSEPHARMTHERRow(ByVal row As CHCPH_CHOIX_CLASSEPHARMTHERRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddCHCPH_CHOIX_CLASSEPHARMTHERRow(ByVal CHCPH_CH_CODE_SQ_PK_FK As Integer, ByVal CHCPH_CPH_CODE_PK_FK As String) As CHCPH_CHOIX_CLASSEPHARMTHERRow
            Dim rowCHCPH_CHOIX_CLASSEPHARMTHERRow As CHCPH_CHOIX_CLASSEPHARMTHERRow = CType(Me.NewRow,CHCPH_CHOIX_CLASSEPHARMTHERRow)
            Dim columnValuesArray() As Object = New Object() {CHCPH_CH_CODE_SQ_PK_FK, CHCPH_CPH_CODE_PK_FK}
            rowCHCPH_CHOIX_CLASSEPHARMTHERRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowCHCPH_CHOIX_CLASSEPHARMTHERRow)
            Return rowCHCPH_CHOIX_CLASSEPHARMTHERRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByCHCPH_CH_CODE_SQ_PK_FKCHCPH_CPH_CODE_PK_FK(ByVal CHCPH_CH_CODE_SQ_PK_FK As Integer, ByVal CHCPH_CPH_CODE_PK_FK As String) As CHCPH_CHOIX_CLASSEPHARMTHERRow
            Return CType(Me.Rows.Find(New Object() {CHCPH_CH_CODE_SQ_PK_FK, CHCPH_CPH_CODE_PK_FK}),CHCPH_CHOIX_CLASSEPHARMTHERRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As CHCPH_CHOIX_CLASSEPHARMTHERDataTable = CType(MyBase.Clone,CHCPH_CHOIX_CLASSEPHARMTHERDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New CHCPH_CHOIX_CLASSEPHARMTHERDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCHCPH_CH_CODE_SQ_PK_FK = MyBase.Columns("CHCPH_CH_CODE_SQ_PK_FK")
            Me.columnCHCPH_CPH_CODE_PK_FK = MyBase.Columns("CHCPH_CPH_CODE_PK_FK")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCHCPH_CH_CODE_SQ_PK_FK = New Global.System.Data.DataColumn("CHCPH_CH_CODE_SQ_PK_FK", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCHCPH_CH_CODE_SQ_PK_FK)
            Me.columnCHCPH_CPH_CODE_PK_FK = New Global.System.Data.DataColumn("CHCPH_CPH_CODE_PK_FK", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCHCPH_CPH_CODE_PK_FK)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnCHCPH_CH_CODE_SQ_PK_FK, Me.columnCHCPH_CPH_CODE_PK_FK}, true))
            Me.columnCHCPH_CH_CODE_SQ_PK_FK.AllowDBNull = false
            Me.columnCHCPH_CPH_CODE_PK_FK.AllowDBNull = false
            Me.columnCHCPH_CPH_CODE_PK_FK.MaxLength = 10
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewCHCPH_CHOIX_CLASSEPHARMTHERRow() As CHCPH_CHOIX_CLASSEPHARMTHERRow
            Return CType(Me.NewRow,CHCPH_CHOIX_CLASSEPHARMTHERRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New CHCPH_CHOIX_CLASSEPHARMTHERRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(CHCPH_CHOIX_CLASSEPHARMTHERRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.CHCPH_CHOIX_CLASSEPHARMTHERRowChangedEvent) Is Nothing) Then
                RaiseEvent CHCPH_CHOIX_CLASSEPHARMTHERRowChanged(Me, New CHCPH_CHOIX_CLASSEPHARMTHERRowChangeEvent(CType(e.Row,CHCPH_CHOIX_CLASSEPHARMTHERRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.CHCPH_CHOIX_CLASSEPHARMTHERRowChangingEvent) Is Nothing) Then
                RaiseEvent CHCPH_CHOIX_CLASSEPHARMTHERRowChanging(Me, New CHCPH_CHOIX_CLASSEPHARMTHERRowChangeEvent(CType(e.Row,CHCPH_CHOIX_CLASSEPHARMTHERRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.CHCPH_CHOIX_CLASSEPHARMTHERRowDeletedEvent) Is Nothing) Then
                RaiseEvent CHCPH_CHOIX_CLASSEPHARMTHERRowDeleted(Me, New CHCPH_CHOIX_CLASSEPHARMTHERRowChangeEvent(CType(e.Row,CHCPH_CHOIX_CLASSEPHARMTHERRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.CHCPH_CHOIX_CLASSEPHARMTHERRowDeletingEvent) Is Nothing) Then
                RaiseEvent CHCPH_CHOIX_CLASSEPHARMTHERRowDeleting(Me, New CHCPH_CHOIX_CLASSEPHARMTHERRowChangeEvent(CType(e.Row,CHCPH_CHOIX_CLASSEPHARMTHERRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveCHCPH_CHOIX_CLASSEPHARMTHERRow(ByVal row As CHCPH_CHOIX_CLASSEPHARMTHERRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsTheriaque_CriteresChoix = New dsTheriaque_CriteresChoix()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "CHCPH_CHOIX_CLASSEPHARMTHERDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class CHCCH_CHOIX_CLASSECHIMIQUEDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnCHCCH_CCH_CODE_PK_FK As Global.System.Data.DataColumn
        
        Private columnCHCCH_CH_CODE_SQ_PK_FK As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "CHCCH_CHOIX_CLASSECHIMIQUE"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CHCCH_CCH_CODE_PK_FKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCHCCH_CCH_CODE_PK_FK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CHCCH_CH_CODE_SQ_PK_FKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCHCCH_CH_CODE_SQ_PK_FK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As CHCCH_CHOIX_CLASSECHIMIQUERow
            Get
                Return CType(Me.Rows(index),CHCCH_CHOIX_CLASSECHIMIQUERow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CHCCH_CHOIX_CLASSECHIMIQUERowChanging As CHCCH_CHOIX_CLASSECHIMIQUERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CHCCH_CHOIX_CLASSECHIMIQUERowChanged As CHCCH_CHOIX_CLASSECHIMIQUERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CHCCH_CHOIX_CLASSECHIMIQUERowDeleting As CHCCH_CHOIX_CLASSECHIMIQUERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CHCCH_CHOIX_CLASSECHIMIQUERowDeleted As CHCCH_CHOIX_CLASSECHIMIQUERowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddCHCCH_CHOIX_CLASSECHIMIQUERow(ByVal row As CHCCH_CHOIX_CLASSECHIMIQUERow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddCHCCH_CHOIX_CLASSECHIMIQUERow(ByVal CHCCH_CCH_CODE_PK_FK As String, ByVal CHCCH_CH_CODE_SQ_PK_FK As Integer) As CHCCH_CHOIX_CLASSECHIMIQUERow
            Dim rowCHCCH_CHOIX_CLASSECHIMIQUERow As CHCCH_CHOIX_CLASSECHIMIQUERow = CType(Me.NewRow,CHCCH_CHOIX_CLASSECHIMIQUERow)
            Dim columnValuesArray() As Object = New Object() {CHCCH_CCH_CODE_PK_FK, CHCCH_CH_CODE_SQ_PK_FK}
            rowCHCCH_CHOIX_CLASSECHIMIQUERow.ItemArray = columnValuesArray
            Me.Rows.Add(rowCHCCH_CHOIX_CLASSECHIMIQUERow)
            Return rowCHCCH_CHOIX_CLASSECHIMIQUERow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByCHCCH_CCH_CODE_PK_FKCHCCH_CH_CODE_SQ_PK_FK(ByVal CHCCH_CCH_CODE_PK_FK As String, ByVal CHCCH_CH_CODE_SQ_PK_FK As Integer) As CHCCH_CHOIX_CLASSECHIMIQUERow
            Return CType(Me.Rows.Find(New Object() {CHCCH_CCH_CODE_PK_FK, CHCCH_CH_CODE_SQ_PK_FK}),CHCCH_CHOIX_CLASSECHIMIQUERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As CHCCH_CHOIX_CLASSECHIMIQUEDataTable = CType(MyBase.Clone,CHCCH_CHOIX_CLASSECHIMIQUEDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New CHCCH_CHOIX_CLASSECHIMIQUEDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCHCCH_CCH_CODE_PK_FK = MyBase.Columns("CHCCH_CCH_CODE_PK_FK")
            Me.columnCHCCH_CH_CODE_SQ_PK_FK = MyBase.Columns("CHCCH_CH_CODE_SQ_PK_FK")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCHCCH_CCH_CODE_PK_FK = New Global.System.Data.DataColumn("CHCCH_CCH_CODE_PK_FK", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCHCCH_CCH_CODE_PK_FK)
            Me.columnCHCCH_CH_CODE_SQ_PK_FK = New Global.System.Data.DataColumn("CHCCH_CH_CODE_SQ_PK_FK", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCHCCH_CH_CODE_SQ_PK_FK)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnCHCCH_CCH_CODE_PK_FK, Me.columnCHCCH_CH_CODE_SQ_PK_FK}, true))
            Me.columnCHCCH_CCH_CODE_PK_FK.AllowDBNull = false
            Me.columnCHCCH_CCH_CODE_PK_FK.MaxLength = 10
            Me.columnCHCCH_CH_CODE_SQ_PK_FK.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewCHCCH_CHOIX_CLASSECHIMIQUERow() As CHCCH_CHOIX_CLASSECHIMIQUERow
            Return CType(Me.NewRow,CHCCH_CHOIX_CLASSECHIMIQUERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New CHCCH_CHOIX_CLASSECHIMIQUERow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(CHCCH_CHOIX_CLASSECHIMIQUERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.CHCCH_CHOIX_CLASSECHIMIQUERowChangedEvent) Is Nothing) Then
                RaiseEvent CHCCH_CHOIX_CLASSECHIMIQUERowChanged(Me, New CHCCH_CHOIX_CLASSECHIMIQUERowChangeEvent(CType(e.Row,CHCCH_CHOIX_CLASSECHIMIQUERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.CHCCH_CHOIX_CLASSECHIMIQUERowChangingEvent) Is Nothing) Then
                RaiseEvent CHCCH_CHOIX_CLASSECHIMIQUERowChanging(Me, New CHCCH_CHOIX_CLASSECHIMIQUERowChangeEvent(CType(e.Row,CHCCH_CHOIX_CLASSECHIMIQUERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.CHCCH_CHOIX_CLASSECHIMIQUERowDeletedEvent) Is Nothing) Then
                RaiseEvent CHCCH_CHOIX_CLASSECHIMIQUERowDeleted(Me, New CHCCH_CHOIX_CLASSECHIMIQUERowChangeEvent(CType(e.Row,CHCCH_CHOIX_CLASSECHIMIQUERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.CHCCH_CHOIX_CLASSECHIMIQUERowDeletingEvent) Is Nothing) Then
                RaiseEvent CHCCH_CHOIX_CLASSECHIMIQUERowDeleting(Me, New CHCCH_CHOIX_CLASSECHIMIQUERowChangeEvent(CType(e.Row,CHCCH_CHOIX_CLASSECHIMIQUERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveCHCCH_CHOIX_CLASSECHIMIQUERow(ByVal row As CHCCH_CHOIX_CLASSECHIMIQUERow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsTheriaque_CriteresChoix = New dsTheriaque_CriteresChoix()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "CHCCH_CHOIX_CLASSECHIMIQUEDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class CHSAU_CHOIX_SUBAUXILIAIREDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnCHSAU_CH_CODE_SQ_PK_FK As Global.System.Data.DataColumn
        
        Private columnCHSAU_SAU_CODE_SQ_PK_FK As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "CHSAU_CHOIX_SUBAUXILIAIRE"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CHSAU_CH_CODE_SQ_PK_FKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCHSAU_CH_CODE_SQ_PK_FK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CHSAU_SAU_CODE_SQ_PK_FKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCHSAU_SAU_CODE_SQ_PK_FK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As CHSAU_CHOIX_SUBAUXILIAIRERow
            Get
                Return CType(Me.Rows(index),CHSAU_CHOIX_SUBAUXILIAIRERow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CHSAU_CHOIX_SUBAUXILIAIRERowChanging As CHSAU_CHOIX_SUBAUXILIAIRERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CHSAU_CHOIX_SUBAUXILIAIRERowChanged As CHSAU_CHOIX_SUBAUXILIAIRERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CHSAU_CHOIX_SUBAUXILIAIRERowDeleting As CHSAU_CHOIX_SUBAUXILIAIRERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CHSAU_CHOIX_SUBAUXILIAIRERowDeleted As CHSAU_CHOIX_SUBAUXILIAIRERowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddCHSAU_CHOIX_SUBAUXILIAIRERow(ByVal row As CHSAU_CHOIX_SUBAUXILIAIRERow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddCHSAU_CHOIX_SUBAUXILIAIRERow(ByVal CHSAU_CH_CODE_SQ_PK_FK As Integer, ByVal CHSAU_SAU_CODE_SQ_PK_FK As Integer) As CHSAU_CHOIX_SUBAUXILIAIRERow
            Dim rowCHSAU_CHOIX_SUBAUXILIAIRERow As CHSAU_CHOIX_SUBAUXILIAIRERow = CType(Me.NewRow,CHSAU_CHOIX_SUBAUXILIAIRERow)
            Dim columnValuesArray() As Object = New Object() {CHSAU_CH_CODE_SQ_PK_FK, CHSAU_SAU_CODE_SQ_PK_FK}
            rowCHSAU_CHOIX_SUBAUXILIAIRERow.ItemArray = columnValuesArray
            Me.Rows.Add(rowCHSAU_CHOIX_SUBAUXILIAIRERow)
            Return rowCHSAU_CHOIX_SUBAUXILIAIRERow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As CHSAU_CHOIX_SUBAUXILIAIREDataTable = CType(MyBase.Clone,CHSAU_CHOIX_SUBAUXILIAIREDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New CHSAU_CHOIX_SUBAUXILIAIREDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCHSAU_CH_CODE_SQ_PK_FK = MyBase.Columns("CHSAU_CH_CODE_SQ_PK_FK")
            Me.columnCHSAU_SAU_CODE_SQ_PK_FK = MyBase.Columns("CHSAU_SAU_CODE_SQ_PK_FK")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCHSAU_CH_CODE_SQ_PK_FK = New Global.System.Data.DataColumn("CHSAU_CH_CODE_SQ_PK_FK", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCHSAU_CH_CODE_SQ_PK_FK)
            Me.columnCHSAU_SAU_CODE_SQ_PK_FK = New Global.System.Data.DataColumn("CHSAU_SAU_CODE_SQ_PK_FK", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCHSAU_SAU_CODE_SQ_PK_FK)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewCHSAU_CHOIX_SUBAUXILIAIRERow() As CHSAU_CHOIX_SUBAUXILIAIRERow
            Return CType(Me.NewRow,CHSAU_CHOIX_SUBAUXILIAIRERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New CHSAU_CHOIX_SUBAUXILIAIRERow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(CHSAU_CHOIX_SUBAUXILIAIRERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.CHSAU_CHOIX_SUBAUXILIAIRERowChangedEvent) Is Nothing) Then
                RaiseEvent CHSAU_CHOIX_SUBAUXILIAIRERowChanged(Me, New CHSAU_CHOIX_SUBAUXILIAIRERowChangeEvent(CType(e.Row,CHSAU_CHOIX_SUBAUXILIAIRERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.CHSAU_CHOIX_SUBAUXILIAIRERowChangingEvent) Is Nothing) Then
                RaiseEvent CHSAU_CHOIX_SUBAUXILIAIRERowChanging(Me, New CHSAU_CHOIX_SUBAUXILIAIRERowChangeEvent(CType(e.Row,CHSAU_CHOIX_SUBAUXILIAIRERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.CHSAU_CHOIX_SUBAUXILIAIRERowDeletedEvent) Is Nothing) Then
                RaiseEvent CHSAU_CHOIX_SUBAUXILIAIRERowDeleted(Me, New CHSAU_CHOIX_SUBAUXILIAIRERowChangeEvent(CType(e.Row,CHSAU_CHOIX_SUBAUXILIAIRERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.CHSAU_CHOIX_SUBAUXILIAIRERowDeletingEvent) Is Nothing) Then
                RaiseEvent CHSAU_CHOIX_SUBAUXILIAIRERowDeleting(Me, New CHSAU_CHOIX_SUBAUXILIAIRERowChangeEvent(CType(e.Row,CHSAU_CHOIX_SUBAUXILIAIRERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveCHSAU_CHOIX_SUBAUXILIAIRERow(ByVal row As CHSAU_CHOIX_SUBAUXILIAIRERow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsTheriaque_CriteresChoix = New dsTheriaque_CriteresChoix()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "CHSAU_CHOIX_SUBAUXILIAIREDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class CHPR_CHOIX_PRODUITDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnCHPR_CH_CODE_SQ_PK_FK As Global.System.Data.DataColumn
        
        Private columnCHPR_PR_CODE_SQ_PK_FK As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "CHPR_CHOIX_PRODUIT"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CHPR_CH_CODE_SQ_PK_FKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCHPR_CH_CODE_SQ_PK_FK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CHPR_PR_CODE_SQ_PK_FKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCHPR_PR_CODE_SQ_PK_FK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As CHPR_CHOIX_PRODUITRow
            Get
                Return CType(Me.Rows(index),CHPR_CHOIX_PRODUITRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CHPR_CHOIX_PRODUITRowChanging As CHPR_CHOIX_PRODUITRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CHPR_CHOIX_PRODUITRowChanged As CHPR_CHOIX_PRODUITRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CHPR_CHOIX_PRODUITRowDeleting As CHPR_CHOIX_PRODUITRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CHPR_CHOIX_PRODUITRowDeleted As CHPR_CHOIX_PRODUITRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddCHPR_CHOIX_PRODUITRow(ByVal row As CHPR_CHOIX_PRODUITRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddCHPR_CHOIX_PRODUITRow(ByVal CHPR_CH_CODE_SQ_PK_FK As Integer, ByVal CHPR_PR_CODE_SQ_PK_FK As Integer) As CHPR_CHOIX_PRODUITRow
            Dim rowCHPR_CHOIX_PRODUITRow As CHPR_CHOIX_PRODUITRow = CType(Me.NewRow,CHPR_CHOIX_PRODUITRow)
            Dim columnValuesArray() As Object = New Object() {CHPR_CH_CODE_SQ_PK_FK, CHPR_PR_CODE_SQ_PK_FK}
            rowCHPR_CHOIX_PRODUITRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowCHPR_CHOIX_PRODUITRow)
            Return rowCHPR_CHOIX_PRODUITRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByCHPR_CH_CODE_SQ_PK_FKCHPR_PR_CODE_SQ_PK_FK(ByVal CHPR_CH_CODE_SQ_PK_FK As Integer, ByVal CHPR_PR_CODE_SQ_PK_FK As Integer) As CHPR_CHOIX_PRODUITRow
            Return CType(Me.Rows.Find(New Object() {CHPR_CH_CODE_SQ_PK_FK, CHPR_PR_CODE_SQ_PK_FK}),CHPR_CHOIX_PRODUITRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As CHPR_CHOIX_PRODUITDataTable = CType(MyBase.Clone,CHPR_CHOIX_PRODUITDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New CHPR_CHOIX_PRODUITDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCHPR_CH_CODE_SQ_PK_FK = MyBase.Columns("CHPR_CH_CODE_SQ_PK_FK")
            Me.columnCHPR_PR_CODE_SQ_PK_FK = MyBase.Columns("CHPR_PR_CODE_SQ_PK_FK")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCHPR_CH_CODE_SQ_PK_FK = New Global.System.Data.DataColumn("CHPR_CH_CODE_SQ_PK_FK", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCHPR_CH_CODE_SQ_PK_FK)
            Me.columnCHPR_PR_CODE_SQ_PK_FK = New Global.System.Data.DataColumn("CHPR_PR_CODE_SQ_PK_FK", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCHPR_PR_CODE_SQ_PK_FK)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnCHPR_CH_CODE_SQ_PK_FK, Me.columnCHPR_PR_CODE_SQ_PK_FK}, true))
            Me.columnCHPR_CH_CODE_SQ_PK_FK.AllowDBNull = false
            Me.columnCHPR_PR_CODE_SQ_PK_FK.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewCHPR_CHOIX_PRODUITRow() As CHPR_CHOIX_PRODUITRow
            Return CType(Me.NewRow,CHPR_CHOIX_PRODUITRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New CHPR_CHOIX_PRODUITRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(CHPR_CHOIX_PRODUITRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.CHPR_CHOIX_PRODUITRowChangedEvent) Is Nothing) Then
                RaiseEvent CHPR_CHOIX_PRODUITRowChanged(Me, New CHPR_CHOIX_PRODUITRowChangeEvent(CType(e.Row,CHPR_CHOIX_PRODUITRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.CHPR_CHOIX_PRODUITRowChangingEvent) Is Nothing) Then
                RaiseEvent CHPR_CHOIX_PRODUITRowChanging(Me, New CHPR_CHOIX_PRODUITRowChangeEvent(CType(e.Row,CHPR_CHOIX_PRODUITRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.CHPR_CHOIX_PRODUITRowDeletedEvent) Is Nothing) Then
                RaiseEvent CHPR_CHOIX_PRODUITRowDeleted(Me, New CHPR_CHOIX_PRODUITRowChangeEvent(CType(e.Row,CHPR_CHOIX_PRODUITRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.CHPR_CHOIX_PRODUITRowDeletingEvent) Is Nothing) Then
                RaiseEvent CHPR_CHOIX_PRODUITRowDeleting(Me, New CHPR_CHOIX_PRODUITRowChangeEvent(CType(e.Row,CHPR_CHOIX_PRODUITRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveCHPR_CHOIX_PRODUITRow(ByVal row As CHPR_CHOIX_PRODUITRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsTheriaque_CriteresChoix = New dsTheriaque_CriteresChoix()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "CHPR_CHOIX_PRODUITDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class CHCATC_CHOIX_CLASSEATCDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnCHCATC_CH_CODE_SQ_PK_FK As Global.System.Data.DataColumn
        
        Private columnCHCATC_CATC_CODE_PK_FK As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "CHCATC_CHOIX_CLASSEATC"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CHCATC_CH_CODE_SQ_PK_FKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCHCATC_CH_CODE_SQ_PK_FK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CHCATC_CATC_CODE_PK_FKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCHCATC_CATC_CODE_PK_FK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As CHCATC_CHOIX_CLASSEATCRow
            Get
                Return CType(Me.Rows(index),CHCATC_CHOIX_CLASSEATCRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CHCATC_CHOIX_CLASSEATCRowChanging As CHCATC_CHOIX_CLASSEATCRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CHCATC_CHOIX_CLASSEATCRowChanged As CHCATC_CHOIX_CLASSEATCRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CHCATC_CHOIX_CLASSEATCRowDeleting As CHCATC_CHOIX_CLASSEATCRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CHCATC_CHOIX_CLASSEATCRowDeleted As CHCATC_CHOIX_CLASSEATCRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddCHCATC_CHOIX_CLASSEATCRow(ByVal row As CHCATC_CHOIX_CLASSEATCRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddCHCATC_CHOIX_CLASSEATCRow(ByVal CHCATC_CH_CODE_SQ_PK_FK As Integer, ByVal CHCATC_CATC_CODE_PK_FK As String) As CHCATC_CHOIX_CLASSEATCRow
            Dim rowCHCATC_CHOIX_CLASSEATCRow As CHCATC_CHOIX_CLASSEATCRow = CType(Me.NewRow,CHCATC_CHOIX_CLASSEATCRow)
            Dim columnValuesArray() As Object = New Object() {CHCATC_CH_CODE_SQ_PK_FK, CHCATC_CATC_CODE_PK_FK}
            rowCHCATC_CHOIX_CLASSEATCRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowCHCATC_CHOIX_CLASSEATCRow)
            Return rowCHCATC_CHOIX_CLASSEATCRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByCHCATC_CH_CODE_SQ_PK_FKCHCATC_CATC_CODE_PK_FK(ByVal CHCATC_CH_CODE_SQ_PK_FK As Integer, ByVal CHCATC_CATC_CODE_PK_FK As String) As CHCATC_CHOIX_CLASSEATCRow
            Return CType(Me.Rows.Find(New Object() {CHCATC_CH_CODE_SQ_PK_FK, CHCATC_CATC_CODE_PK_FK}),CHCATC_CHOIX_CLASSEATCRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As CHCATC_CHOIX_CLASSEATCDataTable = CType(MyBase.Clone,CHCATC_CHOIX_CLASSEATCDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New CHCATC_CHOIX_CLASSEATCDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCHCATC_CH_CODE_SQ_PK_FK = MyBase.Columns("CHCATC_CH_CODE_SQ_PK_FK")
            Me.columnCHCATC_CATC_CODE_PK_FK = MyBase.Columns("CHCATC_CATC_CODE_PK_FK")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCHCATC_CH_CODE_SQ_PK_FK = New Global.System.Data.DataColumn("CHCATC_CH_CODE_SQ_PK_FK", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCHCATC_CH_CODE_SQ_PK_FK)
            Me.columnCHCATC_CATC_CODE_PK_FK = New Global.System.Data.DataColumn("CHCATC_CATC_CODE_PK_FK", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCHCATC_CATC_CODE_PK_FK)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnCHCATC_CH_CODE_SQ_PK_FK, Me.columnCHCATC_CATC_CODE_PK_FK}, true))
            Me.columnCHCATC_CH_CODE_SQ_PK_FK.AllowDBNull = false
            Me.columnCHCATC_CATC_CODE_PK_FK.AllowDBNull = false
            Me.columnCHCATC_CATC_CODE_PK_FK.MaxLength = 10
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewCHCATC_CHOIX_CLASSEATCRow() As CHCATC_CHOIX_CLASSEATCRow
            Return CType(Me.NewRow,CHCATC_CHOIX_CLASSEATCRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New CHCATC_CHOIX_CLASSEATCRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(CHCATC_CHOIX_CLASSEATCRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.CHCATC_CHOIX_CLASSEATCRowChangedEvent) Is Nothing) Then
                RaiseEvent CHCATC_CHOIX_CLASSEATCRowChanged(Me, New CHCATC_CHOIX_CLASSEATCRowChangeEvent(CType(e.Row,CHCATC_CHOIX_CLASSEATCRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.CHCATC_CHOIX_CLASSEATCRowChangingEvent) Is Nothing) Then
                RaiseEvent CHCATC_CHOIX_CLASSEATCRowChanging(Me, New CHCATC_CHOIX_CLASSEATCRowChangeEvent(CType(e.Row,CHCATC_CHOIX_CLASSEATCRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.CHCATC_CHOIX_CLASSEATCRowDeletedEvent) Is Nothing) Then
                RaiseEvent CHCATC_CHOIX_CLASSEATCRowDeleted(Me, New CHCATC_CHOIX_CLASSEATCRowChangeEvent(CType(e.Row,CHCATC_CHOIX_CLASSEATCRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.CHCATC_CHOIX_CLASSEATCRowDeletingEvent) Is Nothing) Then
                RaiseEvent CHCATC_CHOIX_CLASSEATCRowDeleting(Me, New CHCATC_CHOIX_CLASSEATCRowChangeEvent(CType(e.Row,CHCATC_CHOIX_CLASSEATCRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveCHCATC_CHOIX_CLASSEATCRow(ByVal row As CHCATC_CHOIX_CLASSEATCRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsTheriaque_CriteresChoix = New dsTheriaque_CriteresChoix()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "CHCATC_CHOIX_CLASSEATCDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class FTHCPH_FIT_CLASSEPHARMTHERDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnFTHCPH_FTH_CODE_SQ_PK_FK As Global.System.Data.DataColumn
        
        Private columnFTHCPH_CPH_CODE_PK_FK As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "FTHCPH_FIT_CLASSEPHARMTHER"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FTHCPH_FTH_CODE_SQ_PK_FKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFTHCPH_FTH_CODE_SQ_PK_FK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FTHCPH_CPH_CODE_PK_FKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFTHCPH_CPH_CODE_PK_FK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As FTHCPH_FIT_CLASSEPHARMTHERRow
            Get
                Return CType(Me.Rows(index),FTHCPH_FIT_CLASSEPHARMTHERRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FTHCPH_FIT_CLASSEPHARMTHERRowChanging As FTHCPH_FIT_CLASSEPHARMTHERRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FTHCPH_FIT_CLASSEPHARMTHERRowChanged As FTHCPH_FIT_CLASSEPHARMTHERRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FTHCPH_FIT_CLASSEPHARMTHERRowDeleting As FTHCPH_FIT_CLASSEPHARMTHERRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FTHCPH_FIT_CLASSEPHARMTHERRowDeleted As FTHCPH_FIT_CLASSEPHARMTHERRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddFTHCPH_FIT_CLASSEPHARMTHERRow(ByVal row As FTHCPH_FIT_CLASSEPHARMTHERRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddFTHCPH_FIT_CLASSEPHARMTHERRow(ByVal FTHCPH_FTH_CODE_SQ_PK_FK As Integer, ByVal FTHCPH_CPH_CODE_PK_FK As String) As FTHCPH_FIT_CLASSEPHARMTHERRow
            Dim rowFTHCPH_FIT_CLASSEPHARMTHERRow As FTHCPH_FIT_CLASSEPHARMTHERRow = CType(Me.NewRow,FTHCPH_FIT_CLASSEPHARMTHERRow)
            Dim columnValuesArray() As Object = New Object() {FTHCPH_FTH_CODE_SQ_PK_FK, FTHCPH_CPH_CODE_PK_FK}
            rowFTHCPH_FIT_CLASSEPHARMTHERRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowFTHCPH_FIT_CLASSEPHARMTHERRow)
            Return rowFTHCPH_FIT_CLASSEPHARMTHERRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByFTHCPH_FTH_CODE_SQ_PK_FKFTHCPH_CPH_CODE_PK_FK(ByVal FTHCPH_FTH_CODE_SQ_PK_FK As Integer, ByVal FTHCPH_CPH_CODE_PK_FK As String) As FTHCPH_FIT_CLASSEPHARMTHERRow
            Return CType(Me.Rows.Find(New Object() {FTHCPH_FTH_CODE_SQ_PK_FK, FTHCPH_CPH_CODE_PK_FK}),FTHCPH_FIT_CLASSEPHARMTHERRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As FTHCPH_FIT_CLASSEPHARMTHERDataTable = CType(MyBase.Clone,FTHCPH_FIT_CLASSEPHARMTHERDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New FTHCPH_FIT_CLASSEPHARMTHERDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnFTHCPH_FTH_CODE_SQ_PK_FK = MyBase.Columns("FTHCPH_FTH_CODE_SQ_PK_FK")
            Me.columnFTHCPH_CPH_CODE_PK_FK = MyBase.Columns("FTHCPH_CPH_CODE_PK_FK")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnFTHCPH_FTH_CODE_SQ_PK_FK = New Global.System.Data.DataColumn("FTHCPH_FTH_CODE_SQ_PK_FK", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFTHCPH_FTH_CODE_SQ_PK_FK)
            Me.columnFTHCPH_CPH_CODE_PK_FK = New Global.System.Data.DataColumn("FTHCPH_CPH_CODE_PK_FK", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFTHCPH_CPH_CODE_PK_FK)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnFTHCPH_FTH_CODE_SQ_PK_FK, Me.columnFTHCPH_CPH_CODE_PK_FK}, true))
            Me.columnFTHCPH_FTH_CODE_SQ_PK_FK.AllowDBNull = false
            Me.columnFTHCPH_CPH_CODE_PK_FK.AllowDBNull = false
            Me.columnFTHCPH_CPH_CODE_PK_FK.MaxLength = 10
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewFTHCPH_FIT_CLASSEPHARMTHERRow() As FTHCPH_FIT_CLASSEPHARMTHERRow
            Return CType(Me.NewRow,FTHCPH_FIT_CLASSEPHARMTHERRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New FTHCPH_FIT_CLASSEPHARMTHERRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(FTHCPH_FIT_CLASSEPHARMTHERRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.FTHCPH_FIT_CLASSEPHARMTHERRowChangedEvent) Is Nothing) Then
                RaiseEvent FTHCPH_FIT_CLASSEPHARMTHERRowChanged(Me, New FTHCPH_FIT_CLASSEPHARMTHERRowChangeEvent(CType(e.Row,FTHCPH_FIT_CLASSEPHARMTHERRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.FTHCPH_FIT_CLASSEPHARMTHERRowChangingEvent) Is Nothing) Then
                RaiseEvent FTHCPH_FIT_CLASSEPHARMTHERRowChanging(Me, New FTHCPH_FIT_CLASSEPHARMTHERRowChangeEvent(CType(e.Row,FTHCPH_FIT_CLASSEPHARMTHERRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.FTHCPH_FIT_CLASSEPHARMTHERRowDeletedEvent) Is Nothing) Then
                RaiseEvent FTHCPH_FIT_CLASSEPHARMTHERRowDeleted(Me, New FTHCPH_FIT_CLASSEPHARMTHERRowChangeEvent(CType(e.Row,FTHCPH_FIT_CLASSEPHARMTHERRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.FTHCPH_FIT_CLASSEPHARMTHERRowDeletingEvent) Is Nothing) Then
                RaiseEvent FTHCPH_FIT_CLASSEPHARMTHERRowDeleting(Me, New FTHCPH_FIT_CLASSEPHARMTHERRowChangeEvent(CType(e.Row,FTHCPH_FIT_CLASSEPHARMTHERRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveFTHCPH_FIT_CLASSEPHARMTHERRow(ByVal row As FTHCPH_FIT_CLASSEPHARMTHERRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsTheriaque_CriteresChoix = New dsTheriaque_CriteresChoix()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "FTHCPH_FIT_CLASSEPHARMTHERDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class FTHCCH_FIT_CLASSECHIMIQUEDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnFTHCCH_FTH_CODE_SQ_PK_FK As Global.System.Data.DataColumn
        
        Private columnFTHCCH_CCH_CODE_PK_FK As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "FTHCCH_FIT_CLASSECHIMIQUE"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FTHCCH_FTH_CODE_SQ_PK_FKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFTHCCH_FTH_CODE_SQ_PK_FK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FTHCCH_CCH_CODE_PK_FKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFTHCCH_CCH_CODE_PK_FK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As FTHCCH_FIT_CLASSECHIMIQUERow
            Get
                Return CType(Me.Rows(index),FTHCCH_FIT_CLASSECHIMIQUERow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FTHCCH_FIT_CLASSECHIMIQUERowChanging As FTHCCH_FIT_CLASSECHIMIQUERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FTHCCH_FIT_CLASSECHIMIQUERowChanged As FTHCCH_FIT_CLASSECHIMIQUERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FTHCCH_FIT_CLASSECHIMIQUERowDeleting As FTHCCH_FIT_CLASSECHIMIQUERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FTHCCH_FIT_CLASSECHIMIQUERowDeleted As FTHCCH_FIT_CLASSECHIMIQUERowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddFTHCCH_FIT_CLASSECHIMIQUERow(ByVal row As FTHCCH_FIT_CLASSECHIMIQUERow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddFTHCCH_FIT_CLASSECHIMIQUERow(ByVal FTHCCH_FTH_CODE_SQ_PK_FK As Integer, ByVal FTHCCH_CCH_CODE_PK_FK As String) As FTHCCH_FIT_CLASSECHIMIQUERow
            Dim rowFTHCCH_FIT_CLASSECHIMIQUERow As FTHCCH_FIT_CLASSECHIMIQUERow = CType(Me.NewRow,FTHCCH_FIT_CLASSECHIMIQUERow)
            Dim columnValuesArray() As Object = New Object() {FTHCCH_FTH_CODE_SQ_PK_FK, FTHCCH_CCH_CODE_PK_FK}
            rowFTHCCH_FIT_CLASSECHIMIQUERow.ItemArray = columnValuesArray
            Me.Rows.Add(rowFTHCCH_FIT_CLASSECHIMIQUERow)
            Return rowFTHCCH_FIT_CLASSECHIMIQUERow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As FTHCCH_FIT_CLASSECHIMIQUEDataTable = CType(MyBase.Clone,FTHCCH_FIT_CLASSECHIMIQUEDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New FTHCCH_FIT_CLASSECHIMIQUEDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnFTHCCH_FTH_CODE_SQ_PK_FK = MyBase.Columns("FTHCCH_FTH_CODE_SQ_PK_FK")
            Me.columnFTHCCH_CCH_CODE_PK_FK = MyBase.Columns("FTHCCH_CCH_CODE_PK_FK")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnFTHCCH_FTH_CODE_SQ_PK_FK = New Global.System.Data.DataColumn("FTHCCH_FTH_CODE_SQ_PK_FK", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFTHCCH_FTH_CODE_SQ_PK_FK)
            Me.columnFTHCCH_CCH_CODE_PK_FK = New Global.System.Data.DataColumn("FTHCCH_CCH_CODE_PK_FK", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFTHCCH_CCH_CODE_PK_FK)
            Me.columnFTHCCH_CCH_CODE_PK_FK.MaxLength = 10
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewFTHCCH_FIT_CLASSECHIMIQUERow() As FTHCCH_FIT_CLASSECHIMIQUERow
            Return CType(Me.NewRow,FTHCCH_FIT_CLASSECHIMIQUERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New FTHCCH_FIT_CLASSECHIMIQUERow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(FTHCCH_FIT_CLASSECHIMIQUERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.FTHCCH_FIT_CLASSECHIMIQUERowChangedEvent) Is Nothing) Then
                RaiseEvent FTHCCH_FIT_CLASSECHIMIQUERowChanged(Me, New FTHCCH_FIT_CLASSECHIMIQUERowChangeEvent(CType(e.Row,FTHCCH_FIT_CLASSECHIMIQUERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.FTHCCH_FIT_CLASSECHIMIQUERowChangingEvent) Is Nothing) Then
                RaiseEvent FTHCCH_FIT_CLASSECHIMIQUERowChanging(Me, New FTHCCH_FIT_CLASSECHIMIQUERowChangeEvent(CType(e.Row,FTHCCH_FIT_CLASSECHIMIQUERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.FTHCCH_FIT_CLASSECHIMIQUERowDeletedEvent) Is Nothing) Then
                RaiseEvent FTHCCH_FIT_CLASSECHIMIQUERowDeleted(Me, New FTHCCH_FIT_CLASSECHIMIQUERowChangeEvent(CType(e.Row,FTHCCH_FIT_CLASSECHIMIQUERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.FTHCCH_FIT_CLASSECHIMIQUERowDeletingEvent) Is Nothing) Then
                RaiseEvent FTHCCH_FIT_CLASSECHIMIQUERowDeleting(Me, New FTHCCH_FIT_CLASSECHIMIQUERowChangeEvent(CType(e.Row,FTHCCH_FIT_CLASSECHIMIQUERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveFTHCCH_FIT_CLASSECHIMIQUERow(ByVal row As FTHCCH_FIT_CLASSECHIMIQUERow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsTheriaque_CriteresChoix = New dsTheriaque_CriteresChoix()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "FTHCCH_FIT_CLASSECHIMIQUEDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class FTHSAC_FIT_SUBACTIVEDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnFTHSAC_FTH_CODE_SQ_PK_FK As Global.System.Data.DataColumn
        
        Private columnFTHSAC_SAC_CODE_SQ_PK_FK As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "FTHSAC_FIT_SUBACTIVE"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FTHSAC_FTH_CODE_SQ_PK_FKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFTHSAC_FTH_CODE_SQ_PK_FK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FTHSAC_SAC_CODE_SQ_PK_FKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFTHSAC_SAC_CODE_SQ_PK_FK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As FTHSAC_FIT_SUBACTIVERow
            Get
                Return CType(Me.Rows(index),FTHSAC_FIT_SUBACTIVERow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FTHSAC_FIT_SUBACTIVERowChanging As FTHSAC_FIT_SUBACTIVERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FTHSAC_FIT_SUBACTIVERowChanged As FTHSAC_FIT_SUBACTIVERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FTHSAC_FIT_SUBACTIVERowDeleting As FTHSAC_FIT_SUBACTIVERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FTHSAC_FIT_SUBACTIVERowDeleted As FTHSAC_FIT_SUBACTIVERowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddFTHSAC_FIT_SUBACTIVERow(ByVal row As FTHSAC_FIT_SUBACTIVERow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddFTHSAC_FIT_SUBACTIVERow(ByVal FTHSAC_FTH_CODE_SQ_PK_FK As Integer, ByVal FTHSAC_SAC_CODE_SQ_PK_FK As Integer) As FTHSAC_FIT_SUBACTIVERow
            Dim rowFTHSAC_FIT_SUBACTIVERow As FTHSAC_FIT_SUBACTIVERow = CType(Me.NewRow,FTHSAC_FIT_SUBACTIVERow)
            Dim columnValuesArray() As Object = New Object() {FTHSAC_FTH_CODE_SQ_PK_FK, FTHSAC_SAC_CODE_SQ_PK_FK}
            rowFTHSAC_FIT_SUBACTIVERow.ItemArray = columnValuesArray
            Me.Rows.Add(rowFTHSAC_FIT_SUBACTIVERow)
            Return rowFTHSAC_FIT_SUBACTIVERow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByFTHSAC_FTH_CODE_SQ_PK_FKFTHSAC_SAC_CODE_SQ_PK_FK(ByVal FTHSAC_FTH_CODE_SQ_PK_FK As Integer, ByVal FTHSAC_SAC_CODE_SQ_PK_FK As Integer) As FTHSAC_FIT_SUBACTIVERow
            Return CType(Me.Rows.Find(New Object() {FTHSAC_FTH_CODE_SQ_PK_FK, FTHSAC_SAC_CODE_SQ_PK_FK}),FTHSAC_FIT_SUBACTIVERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As FTHSAC_FIT_SUBACTIVEDataTable = CType(MyBase.Clone,FTHSAC_FIT_SUBACTIVEDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New FTHSAC_FIT_SUBACTIVEDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnFTHSAC_FTH_CODE_SQ_PK_FK = MyBase.Columns("FTHSAC_FTH_CODE_SQ_PK_FK")
            Me.columnFTHSAC_SAC_CODE_SQ_PK_FK = MyBase.Columns("FTHSAC_SAC_CODE_SQ_PK_FK")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnFTHSAC_FTH_CODE_SQ_PK_FK = New Global.System.Data.DataColumn("FTHSAC_FTH_CODE_SQ_PK_FK", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFTHSAC_FTH_CODE_SQ_PK_FK)
            Me.columnFTHSAC_SAC_CODE_SQ_PK_FK = New Global.System.Data.DataColumn("FTHSAC_SAC_CODE_SQ_PK_FK", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFTHSAC_SAC_CODE_SQ_PK_FK)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnFTHSAC_FTH_CODE_SQ_PK_FK, Me.columnFTHSAC_SAC_CODE_SQ_PK_FK}, true))
            Me.columnFTHSAC_FTH_CODE_SQ_PK_FK.AllowDBNull = false
            Me.columnFTHSAC_SAC_CODE_SQ_PK_FK.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewFTHSAC_FIT_SUBACTIVERow() As FTHSAC_FIT_SUBACTIVERow
            Return CType(Me.NewRow,FTHSAC_FIT_SUBACTIVERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New FTHSAC_FIT_SUBACTIVERow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(FTHSAC_FIT_SUBACTIVERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.FTHSAC_FIT_SUBACTIVERowChangedEvent) Is Nothing) Then
                RaiseEvent FTHSAC_FIT_SUBACTIVERowChanged(Me, New FTHSAC_FIT_SUBACTIVERowChangeEvent(CType(e.Row,FTHSAC_FIT_SUBACTIVERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.FTHSAC_FIT_SUBACTIVERowChangingEvent) Is Nothing) Then
                RaiseEvent FTHSAC_FIT_SUBACTIVERowChanging(Me, New FTHSAC_FIT_SUBACTIVERowChangeEvent(CType(e.Row,FTHSAC_FIT_SUBACTIVERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.FTHSAC_FIT_SUBACTIVERowDeletedEvent) Is Nothing) Then
                RaiseEvent FTHSAC_FIT_SUBACTIVERowDeleted(Me, New FTHSAC_FIT_SUBACTIVERowChangeEvent(CType(e.Row,FTHSAC_FIT_SUBACTIVERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.FTHSAC_FIT_SUBACTIVERowDeletingEvent) Is Nothing) Then
                RaiseEvent FTHSAC_FIT_SUBACTIVERowDeleting(Me, New FTHSAC_FIT_SUBACTIVERowChangeEvent(CType(e.Row,FTHSAC_FIT_SUBACTIVERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveFTHSAC_FIT_SUBACTIVERow(ByVal row As FTHSAC_FIT_SUBACTIVERow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsTheriaque_CriteresChoix = New dsTheriaque_CriteresChoix()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "FTHSAC_FIT_SUBACTIVEDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class FTHSAU_FIT_SUBAUXILIAIREDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnFTHSAU_FTH_CODE_SQ_PK_FK As Global.System.Data.DataColumn
        
        Private columnFTHSAU_SAU_CODE_SQ_PK_FK As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "FTHSAU_FIT_SUBAUXILIAIRE"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FTHSAU_FTH_CODE_SQ_PK_FKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFTHSAU_FTH_CODE_SQ_PK_FK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FTHSAU_SAU_CODE_SQ_PK_FKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFTHSAU_SAU_CODE_SQ_PK_FK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As FTHSAU_FIT_SUBAUXILIAIRERow
            Get
                Return CType(Me.Rows(index),FTHSAU_FIT_SUBAUXILIAIRERow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FTHSAU_FIT_SUBAUXILIAIRERowChanging As FTHSAU_FIT_SUBAUXILIAIRERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FTHSAU_FIT_SUBAUXILIAIRERowChanged As FTHSAU_FIT_SUBAUXILIAIRERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FTHSAU_FIT_SUBAUXILIAIRERowDeleting As FTHSAU_FIT_SUBAUXILIAIRERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FTHSAU_FIT_SUBAUXILIAIRERowDeleted As FTHSAU_FIT_SUBAUXILIAIRERowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddFTHSAU_FIT_SUBAUXILIAIRERow(ByVal row As FTHSAU_FIT_SUBAUXILIAIRERow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddFTHSAU_FIT_SUBAUXILIAIRERow(ByVal FTHSAU_FTH_CODE_SQ_PK_FK As Integer, ByVal FTHSAU_SAU_CODE_SQ_PK_FK As Integer) As FTHSAU_FIT_SUBAUXILIAIRERow
            Dim rowFTHSAU_FIT_SUBAUXILIAIRERow As FTHSAU_FIT_SUBAUXILIAIRERow = CType(Me.NewRow,FTHSAU_FIT_SUBAUXILIAIRERow)
            Dim columnValuesArray() As Object = New Object() {FTHSAU_FTH_CODE_SQ_PK_FK, FTHSAU_SAU_CODE_SQ_PK_FK}
            rowFTHSAU_FIT_SUBAUXILIAIRERow.ItemArray = columnValuesArray
            Me.Rows.Add(rowFTHSAU_FIT_SUBAUXILIAIRERow)
            Return rowFTHSAU_FIT_SUBAUXILIAIRERow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByFTHSAU_FTH_CODE_SQ_PK_FKFTHSAU_SAU_CODE_SQ_PK_FK(ByVal FTHSAU_FTH_CODE_SQ_PK_FK As Integer, ByVal FTHSAU_SAU_CODE_SQ_PK_FK As Integer) As FTHSAU_FIT_SUBAUXILIAIRERow
            Return CType(Me.Rows.Find(New Object() {FTHSAU_FTH_CODE_SQ_PK_FK, FTHSAU_SAU_CODE_SQ_PK_FK}),FTHSAU_FIT_SUBAUXILIAIRERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As FTHSAU_FIT_SUBAUXILIAIREDataTable = CType(MyBase.Clone,FTHSAU_FIT_SUBAUXILIAIREDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New FTHSAU_FIT_SUBAUXILIAIREDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnFTHSAU_FTH_CODE_SQ_PK_FK = MyBase.Columns("FTHSAU_FTH_CODE_SQ_PK_FK")
            Me.columnFTHSAU_SAU_CODE_SQ_PK_FK = MyBase.Columns("FTHSAU_SAU_CODE_SQ_PK_FK")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnFTHSAU_FTH_CODE_SQ_PK_FK = New Global.System.Data.DataColumn("FTHSAU_FTH_CODE_SQ_PK_FK", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFTHSAU_FTH_CODE_SQ_PK_FK)
            Me.columnFTHSAU_SAU_CODE_SQ_PK_FK = New Global.System.Data.DataColumn("FTHSAU_SAU_CODE_SQ_PK_FK", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFTHSAU_SAU_CODE_SQ_PK_FK)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnFTHSAU_FTH_CODE_SQ_PK_FK, Me.columnFTHSAU_SAU_CODE_SQ_PK_FK}, true))
            Me.columnFTHSAU_FTH_CODE_SQ_PK_FK.AllowDBNull = false
            Me.columnFTHSAU_SAU_CODE_SQ_PK_FK.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewFTHSAU_FIT_SUBAUXILIAIRERow() As FTHSAU_FIT_SUBAUXILIAIRERow
            Return CType(Me.NewRow,FTHSAU_FIT_SUBAUXILIAIRERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New FTHSAU_FIT_SUBAUXILIAIRERow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(FTHSAU_FIT_SUBAUXILIAIRERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.FTHSAU_FIT_SUBAUXILIAIRERowChangedEvent) Is Nothing) Then
                RaiseEvent FTHSAU_FIT_SUBAUXILIAIRERowChanged(Me, New FTHSAU_FIT_SUBAUXILIAIRERowChangeEvent(CType(e.Row,FTHSAU_FIT_SUBAUXILIAIRERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.FTHSAU_FIT_SUBAUXILIAIRERowChangingEvent) Is Nothing) Then
                RaiseEvent FTHSAU_FIT_SUBAUXILIAIRERowChanging(Me, New FTHSAU_FIT_SUBAUXILIAIRERowChangeEvent(CType(e.Row,FTHSAU_FIT_SUBAUXILIAIRERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.FTHSAU_FIT_SUBAUXILIAIRERowDeletedEvent) Is Nothing) Then
                RaiseEvent FTHSAU_FIT_SUBAUXILIAIRERowDeleted(Me, New FTHSAU_FIT_SUBAUXILIAIRERowChangeEvent(CType(e.Row,FTHSAU_FIT_SUBAUXILIAIRERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.FTHSAU_FIT_SUBAUXILIAIRERowDeletingEvent) Is Nothing) Then
                RaiseEvent FTHSAU_FIT_SUBAUXILIAIRERowDeleting(Me, New FTHSAU_FIT_SUBAUXILIAIRERowChangeEvent(CType(e.Row,FTHSAU_FIT_SUBAUXILIAIRERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveFTHSAU_FIT_SUBAUXILIAIRERow(ByVal row As FTHSAU_FIT_SUBAUXILIAIRERow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsTheriaque_CriteresChoix = New dsTheriaque_CriteresChoix()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "FTHSAU_FIT_SUBAUXILIAIREDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class FTHPR_FIT_PRODUITDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnFTHPR_FTH_CODE_SQ_PK_FK As Global.System.Data.DataColumn
        
        Private columnFTHPR_PR_CODE_SQ_PK_FK As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "FTHPR_FIT_PRODUIT"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FTHPR_FTH_CODE_SQ_PK_FKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFTHPR_FTH_CODE_SQ_PK_FK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FTHPR_PR_CODE_SQ_PK_FKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFTHPR_PR_CODE_SQ_PK_FK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As FTHPR_FIT_PRODUITRow
            Get
                Return CType(Me.Rows(index),FTHPR_FIT_PRODUITRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FTHPR_FIT_PRODUITRowChanging As FTHPR_FIT_PRODUITRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FTHPR_FIT_PRODUITRowChanged As FTHPR_FIT_PRODUITRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FTHPR_FIT_PRODUITRowDeleting As FTHPR_FIT_PRODUITRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FTHPR_FIT_PRODUITRowDeleted As FTHPR_FIT_PRODUITRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddFTHPR_FIT_PRODUITRow(ByVal row As FTHPR_FIT_PRODUITRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddFTHPR_FIT_PRODUITRow(ByVal FTHPR_FTH_CODE_SQ_PK_FK As Integer, ByVal FTHPR_PR_CODE_SQ_PK_FK As Integer) As FTHPR_FIT_PRODUITRow
            Dim rowFTHPR_FIT_PRODUITRow As FTHPR_FIT_PRODUITRow = CType(Me.NewRow,FTHPR_FIT_PRODUITRow)
            Dim columnValuesArray() As Object = New Object() {FTHPR_FTH_CODE_SQ_PK_FK, FTHPR_PR_CODE_SQ_PK_FK}
            rowFTHPR_FIT_PRODUITRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowFTHPR_FIT_PRODUITRow)
            Return rowFTHPR_FIT_PRODUITRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByFTHPR_FTH_CODE_SQ_PK_FKFTHPR_PR_CODE_SQ_PK_FK(ByVal FTHPR_FTH_CODE_SQ_PK_FK As Integer, ByVal FTHPR_PR_CODE_SQ_PK_FK As Integer) As FTHPR_FIT_PRODUITRow
            Return CType(Me.Rows.Find(New Object() {FTHPR_FTH_CODE_SQ_PK_FK, FTHPR_PR_CODE_SQ_PK_FK}),FTHPR_FIT_PRODUITRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As FTHPR_FIT_PRODUITDataTable = CType(MyBase.Clone,FTHPR_FIT_PRODUITDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New FTHPR_FIT_PRODUITDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnFTHPR_FTH_CODE_SQ_PK_FK = MyBase.Columns("FTHPR_FTH_CODE_SQ_PK_FK")
            Me.columnFTHPR_PR_CODE_SQ_PK_FK = MyBase.Columns("FTHPR_PR_CODE_SQ_PK_FK")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnFTHPR_FTH_CODE_SQ_PK_FK = New Global.System.Data.DataColumn("FTHPR_FTH_CODE_SQ_PK_FK", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFTHPR_FTH_CODE_SQ_PK_FK)
            Me.columnFTHPR_PR_CODE_SQ_PK_FK = New Global.System.Data.DataColumn("FTHPR_PR_CODE_SQ_PK_FK", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFTHPR_PR_CODE_SQ_PK_FK)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnFTHPR_FTH_CODE_SQ_PK_FK, Me.columnFTHPR_PR_CODE_SQ_PK_FK}, true))
            Me.columnFTHPR_FTH_CODE_SQ_PK_FK.AllowDBNull = false
            Me.columnFTHPR_PR_CODE_SQ_PK_FK.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewFTHPR_FIT_PRODUITRow() As FTHPR_FIT_PRODUITRow
            Return CType(Me.NewRow,FTHPR_FIT_PRODUITRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New FTHPR_FIT_PRODUITRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(FTHPR_FIT_PRODUITRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.FTHPR_FIT_PRODUITRowChangedEvent) Is Nothing) Then
                RaiseEvent FTHPR_FIT_PRODUITRowChanged(Me, New FTHPR_FIT_PRODUITRowChangeEvent(CType(e.Row,FTHPR_FIT_PRODUITRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.FTHPR_FIT_PRODUITRowChangingEvent) Is Nothing) Then
                RaiseEvent FTHPR_FIT_PRODUITRowChanging(Me, New FTHPR_FIT_PRODUITRowChangeEvent(CType(e.Row,FTHPR_FIT_PRODUITRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.FTHPR_FIT_PRODUITRowDeletedEvent) Is Nothing) Then
                RaiseEvent FTHPR_FIT_PRODUITRowDeleted(Me, New FTHPR_FIT_PRODUITRowChangeEvent(CType(e.Row,FTHPR_FIT_PRODUITRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.FTHPR_FIT_PRODUITRowDeletingEvent) Is Nothing) Then
                RaiseEvent FTHPR_FIT_PRODUITRowDeleting(Me, New FTHPR_FIT_PRODUITRowChangeEvent(CType(e.Row,FTHPR_FIT_PRODUITRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveFTHPR_FIT_PRODUITRow(ByVal row As FTHPR_FIT_PRODUITRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsTheriaque_CriteresChoix = New dsTheriaque_CriteresChoix()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "FTHPR_FIT_PRODUITDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class FTHCATC_FIT_CLASSEATCDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnFTHCATC_FTH_CODE_SQ_PK_FK As Global.System.Data.DataColumn
        
        Private columnFTHCATC_CATC_CODE_PK_FK As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "FTHCATC_FIT_CLASSEATC"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FTHCATC_FTH_CODE_SQ_PK_FKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFTHCATC_FTH_CODE_SQ_PK_FK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FTHCATC_CATC_CODE_PK_FKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFTHCATC_CATC_CODE_PK_FK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As FTHCATC_FIT_CLASSEATCRow
            Get
                Return CType(Me.Rows(index),FTHCATC_FIT_CLASSEATCRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FTHCATC_FIT_CLASSEATCRowChanging As FTHCATC_FIT_CLASSEATCRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FTHCATC_FIT_CLASSEATCRowChanged As FTHCATC_FIT_CLASSEATCRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FTHCATC_FIT_CLASSEATCRowDeleting As FTHCATC_FIT_CLASSEATCRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FTHCATC_FIT_CLASSEATCRowDeleted As FTHCATC_FIT_CLASSEATCRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddFTHCATC_FIT_CLASSEATCRow(ByVal row As FTHCATC_FIT_CLASSEATCRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddFTHCATC_FIT_CLASSEATCRow(ByVal FTHCATC_FTH_CODE_SQ_PK_FK As Integer, ByVal FTHCATC_CATC_CODE_PK_FK As String) As FTHCATC_FIT_CLASSEATCRow
            Dim rowFTHCATC_FIT_CLASSEATCRow As FTHCATC_FIT_CLASSEATCRow = CType(Me.NewRow,FTHCATC_FIT_CLASSEATCRow)
            Dim columnValuesArray() As Object = New Object() {FTHCATC_FTH_CODE_SQ_PK_FK, FTHCATC_CATC_CODE_PK_FK}
            rowFTHCATC_FIT_CLASSEATCRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowFTHCATC_FIT_CLASSEATCRow)
            Return rowFTHCATC_FIT_CLASSEATCRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByFTHCATC_FTH_CODE_SQ_PK_FKFTHCATC_CATC_CODE_PK_FK(ByVal FTHCATC_FTH_CODE_SQ_PK_FK As Integer, ByVal FTHCATC_CATC_CODE_PK_FK As String) As FTHCATC_FIT_CLASSEATCRow
            Return CType(Me.Rows.Find(New Object() {FTHCATC_FTH_CODE_SQ_PK_FK, FTHCATC_CATC_CODE_PK_FK}),FTHCATC_FIT_CLASSEATCRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As FTHCATC_FIT_CLASSEATCDataTable = CType(MyBase.Clone,FTHCATC_FIT_CLASSEATCDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New FTHCATC_FIT_CLASSEATCDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnFTHCATC_FTH_CODE_SQ_PK_FK = MyBase.Columns("FTHCATC_FTH_CODE_SQ_PK_FK")
            Me.columnFTHCATC_CATC_CODE_PK_FK = MyBase.Columns("FTHCATC_CATC_CODE_PK_FK")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnFTHCATC_FTH_CODE_SQ_PK_FK = New Global.System.Data.DataColumn("FTHCATC_FTH_CODE_SQ_PK_FK", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFTHCATC_FTH_CODE_SQ_PK_FK)
            Me.columnFTHCATC_CATC_CODE_PK_FK = New Global.System.Data.DataColumn("FTHCATC_CATC_CODE_PK_FK", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFTHCATC_CATC_CODE_PK_FK)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnFTHCATC_FTH_CODE_SQ_PK_FK, Me.columnFTHCATC_CATC_CODE_PK_FK}, true))
            Me.columnFTHCATC_FTH_CODE_SQ_PK_FK.AllowDBNull = false
            Me.columnFTHCATC_CATC_CODE_PK_FK.AllowDBNull = false
            Me.columnFTHCATC_CATC_CODE_PK_FK.MaxLength = 10
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewFTHCATC_FIT_CLASSEATCRow() As FTHCATC_FIT_CLASSEATCRow
            Return CType(Me.NewRow,FTHCATC_FIT_CLASSEATCRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New FTHCATC_FIT_CLASSEATCRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(FTHCATC_FIT_CLASSEATCRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.FTHCATC_FIT_CLASSEATCRowChangedEvent) Is Nothing) Then
                RaiseEvent FTHCATC_FIT_CLASSEATCRowChanged(Me, New FTHCATC_FIT_CLASSEATCRowChangeEvent(CType(e.Row,FTHCATC_FIT_CLASSEATCRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.FTHCATC_FIT_CLASSEATCRowChangingEvent) Is Nothing) Then
                RaiseEvent FTHCATC_FIT_CLASSEATCRowChanging(Me, New FTHCATC_FIT_CLASSEATCRowChangeEvent(CType(e.Row,FTHCATC_FIT_CLASSEATCRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.FTHCATC_FIT_CLASSEATCRowDeletedEvent) Is Nothing) Then
                RaiseEvent FTHCATC_FIT_CLASSEATCRowDeleted(Me, New FTHCATC_FIT_CLASSEATCRowChangeEvent(CType(e.Row,FTHCATC_FIT_CLASSEATCRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.FTHCATC_FIT_CLASSEATCRowDeletingEvent) Is Nothing) Then
                RaiseEvent FTHCATC_FIT_CLASSEATCRowDeleting(Me, New FTHCATC_FIT_CLASSEATCRowChangeEvent(CType(e.Row,FTHCATC_FIT_CLASSEATCRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveFTHCATC_FIT_CLASSEATCRow(ByVal row As FTHCATC_FIT_CLASSEATCRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsTheriaque_CriteresChoix = New dsTheriaque_CriteresChoix()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "FTHCATC_FIT_CLASSEATCDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class ATR_AVISCOMMISSIONTRANSPARENCERow
        Inherits Global.System.Data.DataRow
        
        Private tableATR_AVISCOMMISSIONTRANSPARENCE As ATR_AVISCOMMISSIONTRANSPARENCEDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableATR_AVISCOMMISSIONTRANSPARENCE = CType(Me.Table,ATR_AVISCOMMISSIONTRANSPARENCEDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ATR_CODE_SQ_PK() As Integer
            Get
                Return CType(Me(Me.tableATR_AVISCOMMISSIONTRANSPARENCE.ATR_CODE_SQ_PKColumn),Integer)
            End Get
            Set
                Me(Me.tableATR_AVISCOMMISSIONTRANSPARENCE.ATR_CODE_SQ_PKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ATR_TITRE() As String
            Get
                Return CType(Me(Me.tableATR_AVISCOMMISSIONTRANSPARENCE.ATR_TITREColumn),String)
            End Get
            Set
                Me(Me.tableATR_AVISCOMMISSIONTRANSPARENCE.ATR_TITREColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ATR_DATE_REDACTION() As Date
            Get
                Return CType(Me(Me.tableATR_AVISCOMMISSIONTRANSPARENCE.ATR_DATE_REDACTIONColumn),Date)
            End Get
            Set
                Me(Me.tableATR_AVISCOMMISSIONTRANSPARENCE.ATR_DATE_REDACTIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ATR_TEXTE() As String
            Get
                Return CType(Me(Me.tableATR_AVISCOMMISSIONTRANSPARENCE.ATR_TEXTEColumn),String)
            End Get
            Set
                Me(Me.tableATR_AVISCOMMISSIONTRANSPARENCE.ATR_TEXTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ATR_DATECR() As Date
            Get
                Return CType(Me(Me.tableATR_AVISCOMMISSIONTRANSPARENCE.ATR_DATECRColumn),Date)
            End Get
            Set
                Me(Me.tableATR_AVISCOMMISSIONTRANSPARENCE.ATR_DATECRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ATR_DATEMJ() As Date
            Get
                Try 
                    Return CType(Me(Me.tableATR_AVISCOMMISSIONTRANSPARENCE.ATR_DATEMJColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ATR_DATEMJ' in table 'ATR_AVISCOMMISSIONTRANSPARENCE' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableATR_AVISCOMMISSIONTRANSPARENCE.ATR_DATEMJColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsATR_DATEMJNull() As Boolean
            Return Me.IsNull(Me.tableATR_AVISCOMMISSIONTRANSPARENCE.ATR_DATEMJColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetATR_DATEMJNull()
            Me(Me.tableATR_AVISCOMMISSIONTRANSPARENCE.ATR_DATEMJColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class ATRASMR_AVISCOMTRANS_ASMRRow
        Inherits Global.System.Data.DataRow
        
        Private tableATRASMR_AVISCOMTRANS_ASMR As ATRASMR_AVISCOMTRANS_ASMRDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableATRASMR_AVISCOMTRANS_ASMR = CType(Me.Table,ATRASMR_AVISCOMTRANS_ASMRDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ATRASMR_ATR_CODE_FK_PK() As Integer
            Get
                Return CType(Me(Me.tableATRASMR_AVISCOMTRANS_ASMR.ATRASMR_ATR_CODE_FK_PKColumn),Integer)
            End Get
            Set
                Me(Me.tableATRASMR_AVISCOMTRANS_ASMR.ATRASMR_ATR_CODE_FK_PKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ATRASMR_CDF_ASMR_CODE_FK_PK() As String
            Get
                Return CType(Me(Me.tableATRASMR_AVISCOMTRANS_ASMR.ATRASMR_CDF_ASMR_CODE_FK_PKColumn),String)
            End Get
            Set
                Me(Me.tableATRASMR_AVISCOMTRANS_ASMR.ATRASMR_CDF_ASMR_CODE_FK_PKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ATRASMR_NUMORD() As Short
            Get
                Try 
                    Return CType(Me(Me.tableATRASMR_AVISCOMTRANS_ASMR.ATRASMR_NUMORDColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ATRASMR_NUMORD' in table 'ATRASMR_AVISCOMTRANS_ASMR' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableATRASMR_AVISCOMTRANS_ASMR.ATRASMR_NUMORDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsATRASMR_NUMORDNull() As Boolean
            Return Me.IsNull(Me.tableATRASMR_AVISCOMTRANS_ASMR.ATRASMR_NUMORDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetATRASMR_NUMORDNull()
            Me(Me.tableATRASMR_AVISCOMTRANS_ASMR.ATRASMR_NUMORDColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class ATRSMR_AVISCOMTRANS_SMRRow
        Inherits Global.System.Data.DataRow
        
        Private tableATRSMR_AVISCOMTRANS_SMR As ATRSMR_AVISCOMTRANS_SMRDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableATRSMR_AVISCOMTRANS_SMR = CType(Me.Table,ATRSMR_AVISCOMTRANS_SMRDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ATRSMR_ATR_CODE_FK_PK() As Integer
            Get
                Return CType(Me(Me.tableATRSMR_AVISCOMTRANS_SMR.ATRSMR_ATR_CODE_FK_PKColumn),Integer)
            End Get
            Set
                Me(Me.tableATRSMR_AVISCOMTRANS_SMR.ATRSMR_ATR_CODE_FK_PKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ATRSMR_CDF_SMR_CODE_FK_PK() As String
            Get
                Return CType(Me(Me.tableATRSMR_AVISCOMTRANS_SMR.ATRSMR_CDF_SMR_CODE_FK_PKColumn),String)
            End Get
            Set
                Me(Me.tableATRSMR_AVISCOMTRANS_SMR.ATRSMR_CDF_SMR_CODE_FK_PKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ATRSMR_NUMORD() As Short
            Get
                Try 
                    Return CType(Me(Me.tableATRSMR_AVISCOMTRANS_SMR.ATRSMR_NUMORDColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ATRSMR_NUMORD' in table 'ATRSMR_AVISCOMTRANS_SMR' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableATRSMR_AVISCOMTRANS_SMR.ATRSMR_NUMORDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsATRSMR_NUMORDNull() As Boolean
            Return Me.IsNull(Me.tableATRSMR_AVISCOMTRANS_SMR.ATRSMR_NUMORDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetATRSMR_NUMORDNull()
            Me(Me.tableATRSMR_AVISCOMTRANS_SMR.ATRSMR_NUMORDColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class ATRSAC_AVISCOMTRANS_SUBACTIVERow
        Inherits Global.System.Data.DataRow
        
        Private tableATRSAC_AVISCOMTRANS_SUBACTIVE As ATRSAC_AVISCOMTRANS_SUBACTIVEDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableATRSAC_AVISCOMTRANS_SUBACTIVE = CType(Me.Table,ATRSAC_AVISCOMTRANS_SUBACTIVEDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ATRSAC_ATR_CODE_FK_PK() As Integer
            Get
                Return CType(Me(Me.tableATRSAC_AVISCOMTRANS_SUBACTIVE.ATRSAC_ATR_CODE_FK_PKColumn),Integer)
            End Get
            Set
                Me(Me.tableATRSAC_AVISCOMTRANS_SUBACTIVE.ATRSAC_ATR_CODE_FK_PKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ATRSAC_SAC_CODE_FK_PK() As Integer
            Get
                Return CType(Me(Me.tableATRSAC_AVISCOMTRANS_SUBACTIVE.ATRSAC_SAC_CODE_FK_PKColumn),Integer)
            End Get
            Set
                Me(Me.tableATRSAC_AVISCOMTRANS_SUBACTIVE.ATRSAC_SAC_CODE_FK_PKColumn) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class ATRPR_AVISCOMTRANS_PRODUITRow
        Inherits Global.System.Data.DataRow
        
        Private tableATRPR_AVISCOMTRANS_PRODUIT As ATRPR_AVISCOMTRANS_PRODUITDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableATRPR_AVISCOMTRANS_PRODUIT = CType(Me.Table,ATRPR_AVISCOMTRANS_PRODUITDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ATRPR_ATR_CODE_FK_PK() As Integer
            Get
                Return CType(Me(Me.tableATRPR_AVISCOMTRANS_PRODUIT.ATRPR_ATR_CODE_FK_PKColumn),Integer)
            End Get
            Set
                Me(Me.tableATRPR_AVISCOMTRANS_PRODUIT.ATRPR_ATR_CODE_FK_PKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ATRPR_PR_CODE_FK_PK() As Integer
            Get
                Return CType(Me(Me.tableATRPR_AVISCOMTRANS_PRODUIT.ATRPR_PR_CODE_FK_PKColumn),Integer)
            End Get
            Set
                Me(Me.tableATRPR_AVISCOMTRANS_PRODUIT.ATRPR_PR_CODE_FK_PKColumn) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class SPATR_SPEC_AVISTRANSPARENCERow
        Inherits Global.System.Data.DataRow
        
        Private tableSPATR_SPEC_AVISTRANSPARENCE As SPATR_SPEC_AVISTRANSPARENCEDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableSPATR_SPEC_AVISTRANSPARENCE = CType(Me.Table,SPATR_SPEC_AVISTRANSPARENCEDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SPATR_SP_CODE_FK_PK() As Integer
            Get
                Return CType(Me(Me.tableSPATR_SPEC_AVISTRANSPARENCE.SPATR_SP_CODE_FK_PKColumn),Integer)
            End Get
            Set
                Me(Me.tableSPATR_SPEC_AVISTRANSPARENCE.SPATR_SP_CODE_FK_PKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SPATR_ATR_CODE_FK_PK() As Integer
            Get
                Return CType(Me(Me.tableSPATR_SPEC_AVISTRANSPARENCE.SPATR_ATR_CODE_FK_PKColumn),Integer)
            End Get
            Set
                Me(Me.tableSPATR_SPEC_AVISTRANSPARENCE.SPATR_ATR_CODE_FK_PKColumn) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class CH_CHOIXRow
        Inherits Global.System.Data.DataRow
        
        Private tableCH_CHOIX As CH_CHOIXDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableCH_CHOIX = CType(Me.Table,CH_CHOIXDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CH_CODE_SQ_PK() As Integer
            Get
                Return CType(Me(Me.tableCH_CHOIX.CH_CODE_SQ_PKColumn),Integer)
            End Get
            Set
                Me(Me.tableCH_CHOIX.CH_CODE_SQ_PKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CH_TITRE1() As String
            Get
                Return CType(Me(Me.tableCH_CHOIX.CH_TITRE1Column),String)
            End Get
            Set
                Me(Me.tableCH_CHOIX.CH_TITRE1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CH_DATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableCH_CHOIX.CH_DATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CH_DATE' in table 'CH_CHOIX' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCH_CHOIX.CH_DATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CH_TEXTE() As String
            Get
                Return CType(Me(Me.tableCH_CHOIX.CH_TEXTEColumn),String)
            End Get
            Set
                Me(Me.tableCH_CHOIX.CH_TEXTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CH_DATECR() As Date
            Get
                Return CType(Me(Me.tableCH_CHOIX.CH_DATECRColumn),Date)
            End Get
            Set
                Me(Me.tableCH_CHOIX.CH_DATECRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CH_DATEMJ() As Date
            Get
                Try 
                    Return CType(Me(Me.tableCH_CHOIX.CH_DATEMJColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CH_DATEMJ' in table 'CH_CHOIX' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCH_CHOIX.CH_DATEMJColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCH_DATENull() As Boolean
            Return Me.IsNull(Me.tableCH_CHOIX.CH_DATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCH_DATENull()
            Me(Me.tableCH_CHOIX.CH_DATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCH_DATEMJNull() As Boolean
            Return Me.IsNull(Me.tableCH_CHOIX.CH_DATEMJColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCH_DATEMJNull()
            Me(Me.tableCH_CHOIX.CH_DATEMJColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class CHTIT_CH_TITRE2Row
        Inherits Global.System.Data.DataRow
        
        Private tableCHTIT_CH_TITRE2 As CHTIT_CH_TITRE2DataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableCHTIT_CH_TITRE2 = CType(Me.Table,CHTIT_CH_TITRE2DataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CHTIT_CH_CODE_FK_PK() As Integer
            Get
                Return CType(Me(Me.tableCHTIT_CH_TITRE2.CHTIT_CH_CODE_FK_PKColumn),Integer)
            End Get
            Set
                Me(Me.tableCHTIT_CH_TITRE2.CHTIT_CH_CODE_FK_PKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CHTIT_CDF_TIT_CODE_FK_PK() As String
            Get
                Return CType(Me(Me.tableCHTIT_CH_TITRE2.CHTIT_CDF_TIT_CODE_FK_PKColumn),String)
            End Get
            Set
                Me(Me.tableCHTIT_CH_TITRE2.CHTIT_CDF_TIT_CODE_FK_PKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CHTIT_NUMORD() As Short
            Get
                Try 
                    Return CType(Me(Me.tableCHTIT_CH_TITRE2.CHTIT_NUMORDColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CHTIT_NUMORD' in table 'CHTIT_CH_TITRE2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCHTIT_CH_TITRE2.CHTIT_NUMORDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCHTIT_NUMORDNull() As Boolean
            Return Me.IsNull(Me.tableCHTIT_CH_TITRE2.CHTIT_NUMORDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCHTIT_NUMORDNull()
            Me(Me.tableCHTIT_CH_TITRE2.CHTIT_NUMORDColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class FTR_FICHETRANSPARENCERow
        Inherits Global.System.Data.DataRow
        
        Private tableFTR_FICHETRANSPARENCE As FTR_FICHETRANSPARENCEDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableFTR_FICHETRANSPARENCE = CType(Me.Table,FTR_FICHETRANSPARENCEDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FTR_CODE_SQ_PK() As Integer
            Get
                Return CType(Me(Me.tableFTR_FICHETRANSPARENCE.FTR_CODE_SQ_PKColumn),Integer)
            End Get
            Set
                Me(Me.tableFTR_FICHETRANSPARENCE.FTR_CODE_SQ_PKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FTR_TITRE() As String
            Get
                Return CType(Me(Me.tableFTR_FICHETRANSPARENCE.FTR_TITREColumn),String)
            End Get
            Set
                Me(Me.tableFTR_FICHETRANSPARENCE.FTR_TITREColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FTR_DATE_REDACTION() As Date
            Get
                Return CType(Me(Me.tableFTR_FICHETRANSPARENCE.FTR_DATE_REDACTIONColumn),Date)
            End Get
            Set
                Me(Me.tableFTR_FICHETRANSPARENCE.FTR_DATE_REDACTIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FTR_TEXTE() As String
            Get
                Return CType(Me(Me.tableFTR_FICHETRANSPARENCE.FTR_TEXTEColumn),String)
            End Get
            Set
                Me(Me.tableFTR_FICHETRANSPARENCE.FTR_TEXTEColumn) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class FTH_FICHEINFOTHERAPEUTIQUERow
        Inherits Global.System.Data.DataRow
        
        Private tableFTH_FICHEINFOTHERAPEUTIQUE As FTH_FICHEINFOTHERAPEUTIQUEDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableFTH_FICHEINFOTHERAPEUTIQUE = CType(Me.Table,FTH_FICHEINFOTHERAPEUTIQUEDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FTH_CODE_SQ_PK() As Integer
            Get
                Return CType(Me(Me.tableFTH_FICHEINFOTHERAPEUTIQUE.FTH_CODE_SQ_PKColumn),Integer)
            End Get
            Set
                Me(Me.tableFTH_FICHEINFOTHERAPEUTIQUE.FTH_CODE_SQ_PKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FTH_TITRE() As String
            Get
                Return CType(Me(Me.tableFTH_FICHEINFOTHERAPEUTIQUE.FTH_TITREColumn),String)
            End Get
            Set
                Me(Me.tableFTH_FICHEINFOTHERAPEUTIQUE.FTH_TITREColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FTH_DATE_JO() As Date
            Get
                Return CType(Me(Me.tableFTH_FICHEINFOTHERAPEUTIQUE.FTH_DATE_JOColumn),Date)
            End Get
            Set
                Me(Me.tableFTH_FICHEINFOTHERAPEUTIQUE.FTH_DATE_JOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FTH_TEXTE() As String
            Get
                Return CType(Me(Me.tableFTH_FICHEINFOTHERAPEUTIQUE.FTH_TEXTEColumn),String)
            End Get
            Set
                Me(Me.tableFTH_FICHEINFOTHERAPEUTIQUE.FTH_TEXTEColumn) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class RMORow
        Inherits Global.System.Data.DataRow
        
        Private tableRMO As RMODataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableRMO = CType(Me.Table,RMODataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RMO_CODE_PK() As Byte
            Get
                Return CType(Me(Me.tableRMO.RMO_CODE_PKColumn),Byte)
            End Get
            Set
                Me(Me.tableRMO.RMO_CODE_PKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RMO_TITRE1() As String
            Get
                Return CType(Me(Me.tableRMO.RMO_TITRE1Column),String)
            End Get
            Set
                Me(Me.tableRMO.RMO_TITRE1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RMO_TITRE2() As String
            Get
                Try 
                    Return CType(Me(Me.tableRMO.RMO_TITRE2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RMO_TITRE2' in table 'RMO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRMO.RMO_TITRE2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RMO_TEXTE() As String
            Get
                Return CType(Me(Me.tableRMO.RMO_TEXTEColumn),String)
            End Get
            Set
                Me(Me.tableRMO.RMO_TEXTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RMO_DATECR() As Date
            Get
                Return CType(Me(Me.tableRMO.RMO_DATECRColumn),Date)
            End Get
            Set
                Me(Me.tableRMO.RMO_DATECRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RMO_DATEJO() As Date
            Get
                Return CType(Me(Me.tableRMO.RMO_DATEJOColumn),Date)
            End Get
            Set
                Me(Me.tableRMO.RMO_DATEJOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RMO_DATEMJ() As Date
            Get
                Try 
                    Return CType(Me(Me.tableRMO.RMO_DATEMJColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RMO_DATEMJ' in table 'RMO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRMO.RMO_DATEMJColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRMO_TITRE2Null() As Boolean
            Return Me.IsNull(Me.tableRMO.RMO_TITRE2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRMO_TITRE2Null()
            Me(Me.tableRMO.RMO_TITRE2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRMO_DATEMJNull() As Boolean
            Return Me.IsNull(Me.tableRMO.RMO_DATEMJColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRMO_DATEMJNull()
            Me(Me.tableRMO.RMO_DATEMJColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class CLRMO_CLASSE_RMORow
        Inherits Global.System.Data.DataRow
        
        Private tableCLRMO_CLASSE_RMO As CLRMO_CLASSE_RMODataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableCLRMO_CLASSE_RMO = CType(Me.Table,CLRMO_CLASSE_RMODataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLRMO_RMO_CODE_FK_PK() As Byte
            Get
                Return CType(Me(Me.tableCLRMO_CLASSE_RMO.CLRMO_RMO_CODE_FK_PKColumn),Byte)
            End Get
            Set
                Me(Me.tableCLRMO_CLASSE_RMO.CLRMO_RMO_CODE_FK_PKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLRMO_CL_CODE_PK() As Byte
            Get
                Return CType(Me(Me.tableCLRMO_CLASSE_RMO.CLRMO_CL_CODE_PKColumn),Byte)
            End Get
            Set
                Me(Me.tableCLRMO_CLASSE_RMO.CLRMO_CL_CODE_PKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLRMO_NOM() As String
            Get
                Return CType(Me(Me.tableCLRMO_CLASSE_RMO.CLRMO_NOMColumn),String)
            End Get
            Set
                Me(Me.tableCLRMO_CLASSE_RMO.CLRMO_NOMColumn) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class SPSMR_SERVICE_MEDICAL_RENDURow
        Inherits Global.System.Data.DataRow
        
        Private tableSPSMR_SERVICE_MEDICAL_RENDU As SPSMR_SERVICE_MEDICAL_RENDUDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableSPSMR_SERVICE_MEDICAL_RENDU = CType(Me.Table,SPSMR_SERVICE_MEDICAL_RENDUDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SPSMR_SP_CODE_FK_PK() As Integer
            Get
                Return CType(Me(Me.tableSPSMR_SERVICE_MEDICAL_RENDU.SPSMR_SP_CODE_FK_PKColumn),Integer)
            End Get
            Set
                Me(Me.tableSPSMR_SERVICE_MEDICAL_RENDU.SPSMR_SP_CODE_FK_PKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SPSMR_CDF_SMR_CODE_FK_PK() As String
            Get
                Return CType(Me(Me.tableSPSMR_SERVICE_MEDICAL_RENDU.SPSMR_CDF_SMR_CODE_FK_PKColumn),String)
            End Get
            Set
                Me(Me.tableSPSMR_SERVICE_MEDICAL_RENDU.SPSMR_CDF_SMR_CODE_FK_PKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SPSMR_NUM_ORD_PK() As Short
            Get
                Return CType(Me(Me.tableSPSMR_SERVICE_MEDICAL_RENDU.SPSMR_NUM_ORD_PKColumn),Short)
            End Get
            Set
                Me(Me.tableSPSMR_SERVICE_MEDICAL_RENDU.SPSMR_NUM_ORD_PKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SPSMR_DATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableSPSMR_SERVICE_MEDICAL_RENDU.SPSMR_DATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SPSMR_DATE' in table 'SPSMR_SERVICE_MEDICAL_RENDU' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableSPSMR_SERVICE_MEDICAL_RENDU.SPSMR_DATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSPSMR_DATENull() As Boolean
            Return Me.IsNull(Me.tableSPSMR_SERVICE_MEDICAL_RENDU.SPSMR_DATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSPSMR_DATENull()
            Me(Me.tableSPSMR_SERVICE_MEDICAL_RENDU.SPSMR_DATEColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class SPFTH_SPEC_INFOTHERAPEUTIQUERow
        Inherits Global.System.Data.DataRow
        
        Private tableSPFTH_SPEC_INFOTHERAPEUTIQUE As SPFTH_SPEC_INFOTHERAPEUTIQUEDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableSPFTH_SPEC_INFOTHERAPEUTIQUE = CType(Me.Table,SPFTH_SPEC_INFOTHERAPEUTIQUEDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SPFTH_SP_CODE_FK_PK() As Integer
            Get
                Return CType(Me(Me.tableSPFTH_SPEC_INFOTHERAPEUTIQUE.SPFTH_SP_CODE_FK_PKColumn),Integer)
            End Get
            Set
                Me(Me.tableSPFTH_SPEC_INFOTHERAPEUTIQUE.SPFTH_SP_CODE_FK_PKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SPFTH_FTH_CODE_FK_PK() As Integer
            Get
                Return CType(Me(Me.tableSPFTH_SPEC_INFOTHERAPEUTIQUE.SPFTH_FTH_CODE_FK_PKColumn),Integer)
            End Get
            Set
                Me(Me.tableSPFTH_SPEC_INFOTHERAPEUTIQUE.SPFTH_FTH_CODE_FK_PKColumn) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class SPCH_SPECIALITE_CHOIXRow
        Inherits Global.System.Data.DataRow
        
        Private tableSPCH_SPECIALITE_CHOIX As SPCH_SPECIALITE_CHOIXDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableSPCH_SPECIALITE_CHOIX = CType(Me.Table,SPCH_SPECIALITE_CHOIXDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SPCH_SP_CODE_FK_PK() As Integer
            Get
                Return CType(Me(Me.tableSPCH_SPECIALITE_CHOIX.SPCH_SP_CODE_FK_PKColumn),Integer)
            End Get
            Set
                Me(Me.tableSPCH_SPECIALITE_CHOIX.SPCH_SP_CODE_FK_PKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SPCH_CH_CODE_FK_PK() As Integer
            Get
                Return CType(Me(Me.tableSPCH_SPECIALITE_CHOIX.SPCH_CH_CODE_FK_PKColumn),Integer)
            End Get
            Set
                Me(Me.tableSPCH_SPECIALITE_CHOIX.SPCH_CH_CODE_FK_PKColumn) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class CHSAC_CHOIX_SUBACTIVERow
        Inherits Global.System.Data.DataRow
        
        Private tableCHSAC_CHOIX_SUBACTIVE As CHSAC_CHOIX_SUBACTIVEDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableCHSAC_CHOIX_SUBACTIVE = CType(Me.Table,CHSAC_CHOIX_SUBACTIVEDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CHSAC_CH_CODE_SQ_PK_FK() As Integer
            Get
                Return CType(Me(Me.tableCHSAC_CHOIX_SUBACTIVE.CHSAC_CH_CODE_SQ_PK_FKColumn),Integer)
            End Get
            Set
                Me(Me.tableCHSAC_CHOIX_SUBACTIVE.CHSAC_CH_CODE_SQ_PK_FKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CHSAC_SAC_CODE_SQ_PK_FK() As Integer
            Get
                Return CType(Me(Me.tableCHSAC_CHOIX_SUBACTIVE.CHSAC_SAC_CODE_SQ_PK_FKColumn),Integer)
            End Get
            Set
                Me(Me.tableCHSAC_CHOIX_SUBACTIVE.CHSAC_SAC_CODE_SQ_PK_FKColumn) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class CHCPH_CHOIX_CLASSEPHARMTHERRow
        Inherits Global.System.Data.DataRow
        
        Private tableCHCPH_CHOIX_CLASSEPHARMTHER As CHCPH_CHOIX_CLASSEPHARMTHERDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableCHCPH_CHOIX_CLASSEPHARMTHER = CType(Me.Table,CHCPH_CHOIX_CLASSEPHARMTHERDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CHCPH_CH_CODE_SQ_PK_FK() As Integer
            Get
                Return CType(Me(Me.tableCHCPH_CHOIX_CLASSEPHARMTHER.CHCPH_CH_CODE_SQ_PK_FKColumn),Integer)
            End Get
            Set
                Me(Me.tableCHCPH_CHOIX_CLASSEPHARMTHER.CHCPH_CH_CODE_SQ_PK_FKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CHCPH_CPH_CODE_PK_FK() As String
            Get
                Return CType(Me(Me.tableCHCPH_CHOIX_CLASSEPHARMTHER.CHCPH_CPH_CODE_PK_FKColumn),String)
            End Get
            Set
                Me(Me.tableCHCPH_CHOIX_CLASSEPHARMTHER.CHCPH_CPH_CODE_PK_FKColumn) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class CHCCH_CHOIX_CLASSECHIMIQUERow
        Inherits Global.System.Data.DataRow
        
        Private tableCHCCH_CHOIX_CLASSECHIMIQUE As CHCCH_CHOIX_CLASSECHIMIQUEDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableCHCCH_CHOIX_CLASSECHIMIQUE = CType(Me.Table,CHCCH_CHOIX_CLASSECHIMIQUEDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CHCCH_CCH_CODE_PK_FK() As String
            Get
                Return CType(Me(Me.tableCHCCH_CHOIX_CLASSECHIMIQUE.CHCCH_CCH_CODE_PK_FKColumn),String)
            End Get
            Set
                Me(Me.tableCHCCH_CHOIX_CLASSECHIMIQUE.CHCCH_CCH_CODE_PK_FKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CHCCH_CH_CODE_SQ_PK_FK() As Integer
            Get
                Return CType(Me(Me.tableCHCCH_CHOIX_CLASSECHIMIQUE.CHCCH_CH_CODE_SQ_PK_FKColumn),Integer)
            End Get
            Set
                Me(Me.tableCHCCH_CHOIX_CLASSECHIMIQUE.CHCCH_CH_CODE_SQ_PK_FKColumn) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class CHSAU_CHOIX_SUBAUXILIAIRERow
        Inherits Global.System.Data.DataRow
        
        Private tableCHSAU_CHOIX_SUBAUXILIAIRE As CHSAU_CHOIX_SUBAUXILIAIREDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableCHSAU_CHOIX_SUBAUXILIAIRE = CType(Me.Table,CHSAU_CHOIX_SUBAUXILIAIREDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CHSAU_CH_CODE_SQ_PK_FK() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableCHSAU_CHOIX_SUBAUXILIAIRE.CHSAU_CH_CODE_SQ_PK_FKColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CHSAU_CH_CODE_SQ_PK_FK' in table 'CHSAU_CHOIX_SUBAUXILIAIRE"& _ 
                            "' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCHSAU_CHOIX_SUBAUXILIAIRE.CHSAU_CH_CODE_SQ_PK_FKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CHSAU_SAU_CODE_SQ_PK_FK() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableCHSAU_CHOIX_SUBAUXILIAIRE.CHSAU_SAU_CODE_SQ_PK_FKColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CHSAU_SAU_CODE_SQ_PK_FK' in table 'CHSAU_CHOIX_SUBAUXILIAIR"& _ 
                            "E' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCHSAU_CHOIX_SUBAUXILIAIRE.CHSAU_SAU_CODE_SQ_PK_FKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCHSAU_CH_CODE_SQ_PK_FKNull() As Boolean
            Return Me.IsNull(Me.tableCHSAU_CHOIX_SUBAUXILIAIRE.CHSAU_CH_CODE_SQ_PK_FKColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCHSAU_CH_CODE_SQ_PK_FKNull()
            Me(Me.tableCHSAU_CHOIX_SUBAUXILIAIRE.CHSAU_CH_CODE_SQ_PK_FKColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCHSAU_SAU_CODE_SQ_PK_FKNull() As Boolean
            Return Me.IsNull(Me.tableCHSAU_CHOIX_SUBAUXILIAIRE.CHSAU_SAU_CODE_SQ_PK_FKColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCHSAU_SAU_CODE_SQ_PK_FKNull()
            Me(Me.tableCHSAU_CHOIX_SUBAUXILIAIRE.CHSAU_SAU_CODE_SQ_PK_FKColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class CHPR_CHOIX_PRODUITRow
        Inherits Global.System.Data.DataRow
        
        Private tableCHPR_CHOIX_PRODUIT As CHPR_CHOIX_PRODUITDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableCHPR_CHOIX_PRODUIT = CType(Me.Table,CHPR_CHOIX_PRODUITDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CHPR_CH_CODE_SQ_PK_FK() As Integer
            Get
                Return CType(Me(Me.tableCHPR_CHOIX_PRODUIT.CHPR_CH_CODE_SQ_PK_FKColumn),Integer)
            End Get
            Set
                Me(Me.tableCHPR_CHOIX_PRODUIT.CHPR_CH_CODE_SQ_PK_FKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CHPR_PR_CODE_SQ_PK_FK() As Integer
            Get
                Return CType(Me(Me.tableCHPR_CHOIX_PRODUIT.CHPR_PR_CODE_SQ_PK_FKColumn),Integer)
            End Get
            Set
                Me(Me.tableCHPR_CHOIX_PRODUIT.CHPR_PR_CODE_SQ_PK_FKColumn) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class CHCATC_CHOIX_CLASSEATCRow
        Inherits Global.System.Data.DataRow
        
        Private tableCHCATC_CHOIX_CLASSEATC As CHCATC_CHOIX_CLASSEATCDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableCHCATC_CHOIX_CLASSEATC = CType(Me.Table,CHCATC_CHOIX_CLASSEATCDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CHCATC_CH_CODE_SQ_PK_FK() As Integer
            Get
                Return CType(Me(Me.tableCHCATC_CHOIX_CLASSEATC.CHCATC_CH_CODE_SQ_PK_FKColumn),Integer)
            End Get
            Set
                Me(Me.tableCHCATC_CHOIX_CLASSEATC.CHCATC_CH_CODE_SQ_PK_FKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CHCATC_CATC_CODE_PK_FK() As String
            Get
                Return CType(Me(Me.tableCHCATC_CHOIX_CLASSEATC.CHCATC_CATC_CODE_PK_FKColumn),String)
            End Get
            Set
                Me(Me.tableCHCATC_CHOIX_CLASSEATC.CHCATC_CATC_CODE_PK_FKColumn) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class FTHCPH_FIT_CLASSEPHARMTHERRow
        Inherits Global.System.Data.DataRow
        
        Private tableFTHCPH_FIT_CLASSEPHARMTHER As FTHCPH_FIT_CLASSEPHARMTHERDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableFTHCPH_FIT_CLASSEPHARMTHER = CType(Me.Table,FTHCPH_FIT_CLASSEPHARMTHERDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FTHCPH_FTH_CODE_SQ_PK_FK() As Integer
            Get
                Return CType(Me(Me.tableFTHCPH_FIT_CLASSEPHARMTHER.FTHCPH_FTH_CODE_SQ_PK_FKColumn),Integer)
            End Get
            Set
                Me(Me.tableFTHCPH_FIT_CLASSEPHARMTHER.FTHCPH_FTH_CODE_SQ_PK_FKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FTHCPH_CPH_CODE_PK_FK() As String
            Get
                Return CType(Me(Me.tableFTHCPH_FIT_CLASSEPHARMTHER.FTHCPH_CPH_CODE_PK_FKColumn),String)
            End Get
            Set
                Me(Me.tableFTHCPH_FIT_CLASSEPHARMTHER.FTHCPH_CPH_CODE_PK_FKColumn) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class FTHCCH_FIT_CLASSECHIMIQUERow
        Inherits Global.System.Data.DataRow
        
        Private tableFTHCCH_FIT_CLASSECHIMIQUE As FTHCCH_FIT_CLASSECHIMIQUEDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableFTHCCH_FIT_CLASSECHIMIQUE = CType(Me.Table,FTHCCH_FIT_CLASSECHIMIQUEDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FTHCCH_FTH_CODE_SQ_PK_FK() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableFTHCCH_FIT_CLASSECHIMIQUE.FTHCCH_FTH_CODE_SQ_PK_FKColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FTHCCH_FTH_CODE_SQ_PK_FK' in table 'FTHCCH_FIT_CLASSECHIMIQ"& _ 
                            "UE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFTHCCH_FIT_CLASSECHIMIQUE.FTHCCH_FTH_CODE_SQ_PK_FKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FTHCCH_CCH_CODE_PK_FK() As String
            Get
                Try 
                    Return CType(Me(Me.tableFTHCCH_FIT_CLASSECHIMIQUE.FTHCCH_CCH_CODE_PK_FKColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FTHCCH_CCH_CODE_PK_FK' in table 'FTHCCH_FIT_CLASSECHIMIQUE'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFTHCCH_FIT_CLASSECHIMIQUE.FTHCCH_CCH_CODE_PK_FKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFTHCCH_FTH_CODE_SQ_PK_FKNull() As Boolean
            Return Me.IsNull(Me.tableFTHCCH_FIT_CLASSECHIMIQUE.FTHCCH_FTH_CODE_SQ_PK_FKColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFTHCCH_FTH_CODE_SQ_PK_FKNull()
            Me(Me.tableFTHCCH_FIT_CLASSECHIMIQUE.FTHCCH_FTH_CODE_SQ_PK_FKColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFTHCCH_CCH_CODE_PK_FKNull() As Boolean
            Return Me.IsNull(Me.tableFTHCCH_FIT_CLASSECHIMIQUE.FTHCCH_CCH_CODE_PK_FKColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFTHCCH_CCH_CODE_PK_FKNull()
            Me(Me.tableFTHCCH_FIT_CLASSECHIMIQUE.FTHCCH_CCH_CODE_PK_FKColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class FTHSAC_FIT_SUBACTIVERow
        Inherits Global.System.Data.DataRow
        
        Private tableFTHSAC_FIT_SUBACTIVE As FTHSAC_FIT_SUBACTIVEDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableFTHSAC_FIT_SUBACTIVE = CType(Me.Table,FTHSAC_FIT_SUBACTIVEDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FTHSAC_FTH_CODE_SQ_PK_FK() As Integer
            Get
                Return CType(Me(Me.tableFTHSAC_FIT_SUBACTIVE.FTHSAC_FTH_CODE_SQ_PK_FKColumn),Integer)
            End Get
            Set
                Me(Me.tableFTHSAC_FIT_SUBACTIVE.FTHSAC_FTH_CODE_SQ_PK_FKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FTHSAC_SAC_CODE_SQ_PK_FK() As Integer
            Get
                Return CType(Me(Me.tableFTHSAC_FIT_SUBACTIVE.FTHSAC_SAC_CODE_SQ_PK_FKColumn),Integer)
            End Get
            Set
                Me(Me.tableFTHSAC_FIT_SUBACTIVE.FTHSAC_SAC_CODE_SQ_PK_FKColumn) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class FTHSAU_FIT_SUBAUXILIAIRERow
        Inherits Global.System.Data.DataRow
        
        Private tableFTHSAU_FIT_SUBAUXILIAIRE As FTHSAU_FIT_SUBAUXILIAIREDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableFTHSAU_FIT_SUBAUXILIAIRE = CType(Me.Table,FTHSAU_FIT_SUBAUXILIAIREDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FTHSAU_FTH_CODE_SQ_PK_FK() As Integer
            Get
                Return CType(Me(Me.tableFTHSAU_FIT_SUBAUXILIAIRE.FTHSAU_FTH_CODE_SQ_PK_FKColumn),Integer)
            End Get
            Set
                Me(Me.tableFTHSAU_FIT_SUBAUXILIAIRE.FTHSAU_FTH_CODE_SQ_PK_FKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FTHSAU_SAU_CODE_SQ_PK_FK() As Integer
            Get
                Return CType(Me(Me.tableFTHSAU_FIT_SUBAUXILIAIRE.FTHSAU_SAU_CODE_SQ_PK_FKColumn),Integer)
            End Get
            Set
                Me(Me.tableFTHSAU_FIT_SUBAUXILIAIRE.FTHSAU_SAU_CODE_SQ_PK_FKColumn) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class FTHPR_FIT_PRODUITRow
        Inherits Global.System.Data.DataRow
        
        Private tableFTHPR_FIT_PRODUIT As FTHPR_FIT_PRODUITDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableFTHPR_FIT_PRODUIT = CType(Me.Table,FTHPR_FIT_PRODUITDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FTHPR_FTH_CODE_SQ_PK_FK() As Integer
            Get
                Return CType(Me(Me.tableFTHPR_FIT_PRODUIT.FTHPR_FTH_CODE_SQ_PK_FKColumn),Integer)
            End Get
            Set
                Me(Me.tableFTHPR_FIT_PRODUIT.FTHPR_FTH_CODE_SQ_PK_FKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FTHPR_PR_CODE_SQ_PK_FK() As Integer
            Get
                Return CType(Me(Me.tableFTHPR_FIT_PRODUIT.FTHPR_PR_CODE_SQ_PK_FKColumn),Integer)
            End Get
            Set
                Me(Me.tableFTHPR_FIT_PRODUIT.FTHPR_PR_CODE_SQ_PK_FKColumn) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class FTHCATC_FIT_CLASSEATCRow
        Inherits Global.System.Data.DataRow
        
        Private tableFTHCATC_FIT_CLASSEATC As FTHCATC_FIT_CLASSEATCDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableFTHCATC_FIT_CLASSEATC = CType(Me.Table,FTHCATC_FIT_CLASSEATCDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FTHCATC_FTH_CODE_SQ_PK_FK() As Integer
            Get
                Return CType(Me(Me.tableFTHCATC_FIT_CLASSEATC.FTHCATC_FTH_CODE_SQ_PK_FKColumn),Integer)
            End Get
            Set
                Me(Me.tableFTHCATC_FIT_CLASSEATC.FTHCATC_FTH_CODE_SQ_PK_FKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FTHCATC_CATC_CODE_PK_FK() As String
            Get
                Return CType(Me(Me.tableFTHCATC_FIT_CLASSEATC.FTHCATC_CATC_CODE_PK_FKColumn),String)
            End Get
            Set
                Me(Me.tableFTHCATC_FIT_CLASSEATC.FTHCATC_CATC_CODE_PK_FKColumn) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class ATR_AVISCOMMISSIONTRANSPARENCERowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As ATR_AVISCOMMISSIONTRANSPARENCERow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As ATR_AVISCOMMISSIONTRANSPARENCERow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As ATR_AVISCOMMISSIONTRANSPARENCERow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class ATRASMR_AVISCOMTRANS_ASMRRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As ATRASMR_AVISCOMTRANS_ASMRRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As ATRASMR_AVISCOMTRANS_ASMRRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As ATRASMR_AVISCOMTRANS_ASMRRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class ATRSMR_AVISCOMTRANS_SMRRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As ATRSMR_AVISCOMTRANS_SMRRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As ATRSMR_AVISCOMTRANS_SMRRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As ATRSMR_AVISCOMTRANS_SMRRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class ATRSAC_AVISCOMTRANS_SUBACTIVERowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As ATRSAC_AVISCOMTRANS_SUBACTIVERow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As ATRSAC_AVISCOMTRANS_SUBACTIVERow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As ATRSAC_AVISCOMTRANS_SUBACTIVERow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class ATRPR_AVISCOMTRANS_PRODUITRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As ATRPR_AVISCOMTRANS_PRODUITRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As ATRPR_AVISCOMTRANS_PRODUITRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As ATRPR_AVISCOMTRANS_PRODUITRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class SPATR_SPEC_AVISTRANSPARENCERowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As SPATR_SPEC_AVISTRANSPARENCERow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As SPATR_SPEC_AVISTRANSPARENCERow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As SPATR_SPEC_AVISTRANSPARENCERow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class CH_CHOIXRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As CH_CHOIXRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As CH_CHOIXRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As CH_CHOIXRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class CHTIT_CH_TITRE2RowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As CHTIT_CH_TITRE2Row
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As CHTIT_CH_TITRE2Row, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As CHTIT_CH_TITRE2Row
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class FTR_FICHETRANSPARENCERowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As FTR_FICHETRANSPARENCERow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As FTR_FICHETRANSPARENCERow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As FTR_FICHETRANSPARENCERow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class FTH_FICHEINFOTHERAPEUTIQUERowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As FTH_FICHEINFOTHERAPEUTIQUERow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As FTH_FICHEINFOTHERAPEUTIQUERow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As FTH_FICHEINFOTHERAPEUTIQUERow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class RMORowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As RMORow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As RMORow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As RMORow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class CLRMO_CLASSE_RMORowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As CLRMO_CLASSE_RMORow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As CLRMO_CLASSE_RMORow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As CLRMO_CLASSE_RMORow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class SPSMR_SERVICE_MEDICAL_RENDURowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As SPSMR_SERVICE_MEDICAL_RENDURow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As SPSMR_SERVICE_MEDICAL_RENDURow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As SPSMR_SERVICE_MEDICAL_RENDURow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class SPFTH_SPEC_INFOTHERAPEUTIQUERowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As SPFTH_SPEC_INFOTHERAPEUTIQUERow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As SPFTH_SPEC_INFOTHERAPEUTIQUERow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As SPFTH_SPEC_INFOTHERAPEUTIQUERow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class SPCH_SPECIALITE_CHOIXRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As SPCH_SPECIALITE_CHOIXRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As SPCH_SPECIALITE_CHOIXRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As SPCH_SPECIALITE_CHOIXRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class CHSAC_CHOIX_SUBACTIVERowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As CHSAC_CHOIX_SUBACTIVERow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As CHSAC_CHOIX_SUBACTIVERow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As CHSAC_CHOIX_SUBACTIVERow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class CHCPH_CHOIX_CLASSEPHARMTHERRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As CHCPH_CHOIX_CLASSEPHARMTHERRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As CHCPH_CHOIX_CLASSEPHARMTHERRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As CHCPH_CHOIX_CLASSEPHARMTHERRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class CHCCH_CHOIX_CLASSECHIMIQUERowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As CHCCH_CHOIX_CLASSECHIMIQUERow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As CHCCH_CHOIX_CLASSECHIMIQUERow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As CHCCH_CHOIX_CLASSECHIMIQUERow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class CHSAU_CHOIX_SUBAUXILIAIRERowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As CHSAU_CHOIX_SUBAUXILIAIRERow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As CHSAU_CHOIX_SUBAUXILIAIRERow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As CHSAU_CHOIX_SUBAUXILIAIRERow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class CHPR_CHOIX_PRODUITRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As CHPR_CHOIX_PRODUITRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As CHPR_CHOIX_PRODUITRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As CHPR_CHOIX_PRODUITRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class CHCATC_CHOIX_CLASSEATCRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As CHCATC_CHOIX_CLASSEATCRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As CHCATC_CHOIX_CLASSEATCRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As CHCATC_CHOIX_CLASSEATCRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class FTHCPH_FIT_CLASSEPHARMTHERRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As FTHCPH_FIT_CLASSEPHARMTHERRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As FTHCPH_FIT_CLASSEPHARMTHERRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As FTHCPH_FIT_CLASSEPHARMTHERRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class FTHCCH_FIT_CLASSECHIMIQUERowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As FTHCCH_FIT_CLASSECHIMIQUERow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As FTHCCH_FIT_CLASSECHIMIQUERow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As FTHCCH_FIT_CLASSECHIMIQUERow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class FTHSAC_FIT_SUBACTIVERowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As FTHSAC_FIT_SUBACTIVERow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As FTHSAC_FIT_SUBACTIVERow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As FTHSAC_FIT_SUBACTIVERow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class FTHSAU_FIT_SUBAUXILIAIRERowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As FTHSAU_FIT_SUBAUXILIAIRERow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As FTHSAU_FIT_SUBAUXILIAIRERow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As FTHSAU_FIT_SUBAUXILIAIRERow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class FTHPR_FIT_PRODUITRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As FTHPR_FIT_PRODUITRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As FTHPR_FIT_PRODUITRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As FTHPR_FIT_PRODUITRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class FTHCATC_FIT_CLASSEATCRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As FTHCATC_FIT_CLASSEATCRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As FTHCATC_FIT_CLASSEATCRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As FTHCATC_FIT_CLASSEATCRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace dsTheriaque_CriteresChoixTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class ATR_AVISCOMMISSIONTRANSPARENCETableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "ATR_AVISCOMMISSIONTRANSPARENCE"
            tableMapping.ColumnMappings.Add("ATR_CODE_SQ_PK", "ATR_CODE_SQ_PK")
            tableMapping.ColumnMappings.Add("ATR_TITRE", "ATR_TITRE")
            tableMapping.ColumnMappings.Add("ATR_DATE_REDACTION", "ATR_DATE_REDACTION")
            tableMapping.ColumnMappings.Add("ATR_TEXTE", "ATR_TEXTE")
            tableMapping.ColumnMappings.Add("ATR_DATECR", "ATR_DATECR")
            tableMapping.ColumnMappings.Add("ATR_DATEMJ", "ATR_DATEMJ")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [THERIAQUE].[ATR_AVISCOMMISSIONTRANSPARENCE] WHERE (([ATR_CODE_SQ_PK]"& _ 
                " = @Original_ATR_CODE_SQ_PK) AND ([ATR_TITRE] = @Original_ATR_TITRE) AND ([ATR_D"& _ 
                "ATE_REDACTION] = @Original_ATR_DATE_REDACTION) AND ([ATR_DATECR] = @Original_ATR"& _ 
                "_DATECR) AND ((@IsNull_ATR_DATEMJ = 1 AND [ATR_DATEMJ] IS NULL) OR ([ATR_DATEMJ]"& _ 
                " = @Original_ATR_DATEMJ)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ATR_CODE_SQ_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ATR_CODE_SQ_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ATR_TITRE", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ATR_TITRE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ATR_DATE_REDACTION", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ATR_DATE_REDACTION", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ATR_DATECR", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ATR_DATECR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ATR_DATEMJ", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ATR_DATEMJ", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ATR_DATEMJ", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ATR_DATEMJ", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [THERIAQUE].[ATR_AVISCOMMISSIONTRANSPARENCE] ([ATR_CODE_SQ_PK], [ATR_"& _ 
                "TITRE], [ATR_DATE_REDACTION], [ATR_TEXTE], [ATR_DATECR], [ATR_DATEMJ]) VALUES (@"& _ 
                "ATR_CODE_SQ_PK, @ATR_TITRE, @ATR_DATE_REDACTION, @ATR_TEXTE, @ATR_DATECR, @ATR_D"& _ 
                "ATEMJ);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ATR_CODE_SQ_PK, ATR_TITRE, ATR_DATE_REDACTION, ATR_TEXTE, ATR_DA"& _ 
                "TECR, ATR_DATEMJ FROM THERIAQUE.ATR_AVISCOMMISSIONTRANSPARENCE WHERE (ATR_CODE_S"& _ 
                "Q_PK = @ATR_CODE_SQ_PK)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ATR_CODE_SQ_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ATR_CODE_SQ_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ATR_TITRE", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ATR_TITRE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ATR_DATE_REDACTION", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ATR_DATE_REDACTION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ATR_TEXTE", Global.System.Data.SqlDbType.Text, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ATR_TEXTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ATR_DATECR", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ATR_DATECR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ATR_DATEMJ", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ATR_DATEMJ", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [THERIAQUE].[ATR_AVISCOMMISSIONTRANSPARENCE] SET [ATR_CODE_SQ_PK] = @ATR_C"& _ 
                "ODE_SQ_PK, [ATR_TITRE] = @ATR_TITRE, [ATR_DATE_REDACTION] = @ATR_DATE_REDACTION,"& _ 
                " [ATR_TEXTE] = @ATR_TEXTE, [ATR_DATECR] = @ATR_DATECR, [ATR_DATEMJ] = @ATR_DATEM"& _ 
                "J WHERE (([ATR_CODE_SQ_PK] = @Original_ATR_CODE_SQ_PK) AND ([ATR_TITRE] = @Origi"& _ 
                "nal_ATR_TITRE) AND ([ATR_DATE_REDACTION] = @Original_ATR_DATE_REDACTION) AND ([A"& _ 
                "TR_DATECR] = @Original_ATR_DATECR) AND ((@IsNull_ATR_DATEMJ = 1 AND [ATR_DATEMJ]"& _ 
                " IS NULL) OR ([ATR_DATEMJ] = @Original_ATR_DATEMJ)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ATR_CODE_SQ_PK, AT"& _ 
                "R_TITRE, ATR_DATE_REDACTION, ATR_TEXTE, ATR_DATECR, ATR_DATEMJ FROM THERIAQUE.AT"& _ 
                "R_AVISCOMMISSIONTRANSPARENCE WHERE (ATR_CODE_SQ_PK = @ATR_CODE_SQ_PK)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ATR_CODE_SQ_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ATR_CODE_SQ_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ATR_TITRE", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ATR_TITRE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ATR_DATE_REDACTION", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ATR_DATE_REDACTION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ATR_TEXTE", Global.System.Data.SqlDbType.Text, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ATR_TEXTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ATR_DATECR", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ATR_DATECR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ATR_DATEMJ", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ATR_DATEMJ", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ATR_CODE_SQ_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ATR_CODE_SQ_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ATR_TITRE", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ATR_TITRE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ATR_DATE_REDACTION", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ATR_DATE_REDACTION", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ATR_DATECR", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ATR_DATECR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ATR_DATEMJ", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ATR_DATEMJ", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ATR_DATEMJ", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ATR_DATEMJ", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Theriaque.My.MySettings.Default.ConnectionString2
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT ATR_CODE_SQ_PK, ATR_TITRE, ATR_DATE_REDACTION, ATR_TEXTE, ATR_DATECR, ATR_"& _ 
                "DATEMJ FROM THERIAQUE.ATR_AVISCOMMISSIONTRANSPARENCE"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT ATR_CODE_SQ_PK, ATR_TITRE, ATR_DATE_REDACTION, ATR_TEXTE, ATR_DATECR, ATR_"& _ 
                "DATEMJ FROM THERIAQUE.ATR_AVISCOMMISSIONTRANSPARENCE"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE ATR_CODE_SQ_PK = @AT"& _ 
                "R_CODE_SQ_PK"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ATR_CODE_SQ_PK", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "ATR_CODE_SQ_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsTheriaque_CriteresChoix.ATR_AVISCOMMISSIONTRANSPARENCEDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsTheriaque_CriteresChoix.ATR_AVISCOMMISSIONTRANSPARENCEDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsTheriaque_CriteresChoix.ATR_AVISCOMMISSIONTRANSPARENCEDataTable = New dsTheriaque_CriteresChoix.ATR_AVISCOMMISSIONTRANSPARENCEDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByCode(ByVal dataTable As dsTheriaque_CriteresChoix.ATR_AVISCOMMISSIONTRANSPARENCEDataTable, ByVal ATR_CODE_SQ_PK As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(ATR_CODE_SQ_PK,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByCode(ByVal ATR_CODE_SQ_PK As Integer) As dsTheriaque_CriteresChoix.ATR_AVISCOMMISSIONTRANSPARENCEDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(ATR_CODE_SQ_PK,Integer)
            Dim dataTable As dsTheriaque_CriteresChoix.ATR_AVISCOMMISSIONTRANSPARENCEDataTable = New dsTheriaque_CriteresChoix.ATR_AVISCOMMISSIONTRANSPARENCEDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsTheriaque_CriteresChoix.ATR_AVISCOMMISSIONTRANSPARENCEDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsTheriaque_CriteresChoix) As Integer
            Return Me.Adapter.Update(dataSet, "ATR_AVISCOMMISSIONTRANSPARENCE")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_ATR_CODE_SQ_PK As Integer, ByVal Original_ATR_TITRE As String, ByVal Original_ATR_DATE_REDACTION As Date, ByVal Original_ATR_DATECR As Date, ByVal Original_ATR_DATEMJ As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_ATR_CODE_SQ_PK,Integer)
            If (Original_ATR_TITRE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ATR_TITRE")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_ATR_TITRE,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_ATR_DATE_REDACTION,Date)
            Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_ATR_DATECR,Date)
            If (Original_ATR_DATEMJ.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_ATR_DATEMJ.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal ATR_CODE_SQ_PK As Integer, ByVal ATR_TITRE As String, ByVal ATR_DATE_REDACTION As Date, ByVal ATR_TEXTE As String, ByVal ATR_DATECR As Date, ByVal ATR_DATEMJ As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(ATR_CODE_SQ_PK,Integer)
            If (ATR_TITRE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ATR_TITRE")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(ATR_TITRE,String)
            End If
            Me.Adapter.InsertCommand.Parameters(2).Value = CType(ATR_DATE_REDACTION,Date)
            If (ATR_TEXTE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ATR_TEXTE")
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(ATR_TEXTE,String)
            End If
            Me.Adapter.InsertCommand.Parameters(4).Value = CType(ATR_DATECR,Date)
            If (ATR_DATEMJ.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(ATR_DATEMJ.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal ATR_CODE_SQ_PK As Integer, ByVal ATR_TITRE As String, ByVal ATR_DATE_REDACTION As Date, ByVal ATR_TEXTE As String, ByVal ATR_DATECR As Date, ByVal ATR_DATEMJ As Global.System.Nullable(Of Date), ByVal Original_ATR_CODE_SQ_PK As Integer, ByVal Original_ATR_TITRE As String, ByVal Original_ATR_DATE_REDACTION As Date, ByVal Original_ATR_DATECR As Date, ByVal Original_ATR_DATEMJ As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(ATR_CODE_SQ_PK,Integer)
            If (ATR_TITRE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ATR_TITRE")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(ATR_TITRE,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(ATR_DATE_REDACTION,Date)
            If (ATR_TEXTE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ATR_TEXTE")
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(ATR_TEXTE,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(4).Value = CType(ATR_DATECR,Date)
            If (ATR_DATEMJ.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(ATR_DATEMJ.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Original_ATR_CODE_SQ_PK,Integer)
            If (Original_ATR_TITRE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ATR_TITRE")
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Original_ATR_TITRE,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Original_ATR_DATE_REDACTION,Date)
            Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Original_ATR_DATECR,Date)
            If (Original_ATR_DATEMJ.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(Original_ATR_DATEMJ.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal ATR_TITRE As String, ByVal ATR_DATE_REDACTION As Date, ByVal ATR_TEXTE As String, ByVal ATR_DATECR As Date, ByVal ATR_DATEMJ As Global.System.Nullable(Of Date), ByVal Original_ATR_CODE_SQ_PK As Integer, ByVal Original_ATR_TITRE As String, ByVal Original_ATR_DATE_REDACTION As Date, ByVal Original_ATR_DATECR As Date, ByVal Original_ATR_DATEMJ As Global.System.Nullable(Of Date)) As Integer
            Return Me.Update(Original_ATR_CODE_SQ_PK, ATR_TITRE, ATR_DATE_REDACTION, ATR_TEXTE, ATR_DATECR, ATR_DATEMJ, Original_ATR_CODE_SQ_PK, Original_ATR_TITRE, Original_ATR_DATE_REDACTION, Original_ATR_DATECR, Original_ATR_DATEMJ)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class ATRASMR_AVISCOMTRANS_ASMRTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "ATRASMR_AVISCOMTRANS_ASMR"
            tableMapping.ColumnMappings.Add("ATRASMR_ATR_CODE_FK_PK", "ATRASMR_ATR_CODE_FK_PK")
            tableMapping.ColumnMappings.Add("ATRASMR_CDF_ASMR_CODE_FK_PK", "ATRASMR_CDF_ASMR_CODE_FK_PK")
            tableMapping.ColumnMappings.Add("ATRASMR_NUMORD", "ATRASMR_NUMORD")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [THERIAQUE].[ATRASMR_AVISCOMTRANS_ASMR] WHERE (([ATRASMR_ATR_CODE_FK_"& _ 
                "PK] = @Original_ATRASMR_ATR_CODE_FK_PK) AND ([ATRASMR_CDF_ASMR_CODE_FK_PK] = @Or"& _ 
                "iginal_ATRASMR_CDF_ASMR_CODE_FK_PK) AND ((@IsNull_ATRASMR_NUMORD = 1 AND [ATRASM"& _ 
                "R_NUMORD] IS NULL) OR ([ATRASMR_NUMORD] = @Original_ATRASMR_NUMORD)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ATRASMR_ATR_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ATRASMR_ATR_CODE_FK_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ATRASMR_CDF_ASMR_CODE_FK_PK", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ATRASMR_CDF_ASMR_CODE_FK_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ATRASMR_NUMORD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ATRASMR_NUMORD", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ATRASMR_NUMORD", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ATRASMR_NUMORD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [THERIAQUE].[ATRASMR_AVISCOMTRANS_ASMR] ([ATRASMR_ATR_CODE_FK_PK], [A"& _ 
                "TRASMR_CDF_ASMR_CODE_FK_PK], [ATRASMR_NUMORD]) VALUES (@ATRASMR_ATR_CODE_FK_PK, "& _ 
                "@ATRASMR_CDF_ASMR_CODE_FK_PK, @ATRASMR_NUMORD);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ATRASMR_ATR_CODE_FK_PK, "& _ 
                "ATRASMR_CDF_ASMR_CODE_FK_PK, ATRASMR_NUMORD FROM THERIAQUE.ATRASMR_AVISCOMTRANS_"& _ 
                "ASMR WHERE (ATRASMR_ATR_CODE_FK_PK = @ATRASMR_ATR_CODE_FK_PK) AND (ATRASMR_CDF_A"& _ 
                "SMR_CODE_FK_PK = @ATRASMR_CDF_ASMR_CODE_FK_PK)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ATRASMR_ATR_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ATRASMR_ATR_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ATRASMR_CDF_ASMR_CODE_FK_PK", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ATRASMR_CDF_ASMR_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ATRASMR_NUMORD", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ATRASMR_NUMORD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [THERIAQUE].[ATRASMR_AVISCOMTRANS_ASMR] SET [ATRASMR_ATR_CODE_FK_PK] = @AT"& _ 
                "RASMR_ATR_CODE_FK_PK, [ATRASMR_CDF_ASMR_CODE_FK_PK] = @ATRASMR_CDF_ASMR_CODE_FK_"& _ 
                "PK, [ATRASMR_NUMORD] = @ATRASMR_NUMORD WHERE (([ATRASMR_ATR_CODE_FK_PK] = @Origi"& _ 
                "nal_ATRASMR_ATR_CODE_FK_PK) AND ([ATRASMR_CDF_ASMR_CODE_FK_PK] = @Original_ATRAS"& _ 
                "MR_CDF_ASMR_CODE_FK_PK) AND ((@IsNull_ATRASMR_NUMORD = 1 AND [ATRASMR_NUMORD] IS"& _ 
                " NULL) OR ([ATRASMR_NUMORD] = @Original_ATRASMR_NUMORD)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ATRASMR_ATR_C"& _ 
                "ODE_FK_PK, ATRASMR_CDF_ASMR_CODE_FK_PK, ATRASMR_NUMORD FROM THERIAQUE.ATRASMR_AV"& _ 
                "ISCOMTRANS_ASMR WHERE (ATRASMR_ATR_CODE_FK_PK = @ATRASMR_ATR_CODE_FK_PK) AND (AT"& _ 
                "RASMR_CDF_ASMR_CODE_FK_PK = @ATRASMR_CDF_ASMR_CODE_FK_PK)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ATRASMR_ATR_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ATRASMR_ATR_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ATRASMR_CDF_ASMR_CODE_FK_PK", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ATRASMR_CDF_ASMR_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ATRASMR_NUMORD", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ATRASMR_NUMORD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ATRASMR_ATR_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ATRASMR_ATR_CODE_FK_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ATRASMR_CDF_ASMR_CODE_FK_PK", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ATRASMR_CDF_ASMR_CODE_FK_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ATRASMR_NUMORD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ATRASMR_NUMORD", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ATRASMR_NUMORD", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ATRASMR_NUMORD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Theriaque.My.MySettings.Default.ConnectionString2
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT ATRASMR_ATR_CODE_FK_PK, ATRASMR_CDF_ASMR_CODE_FK_PK, ATRASMR_NUMORD FROM T"& _ 
                "HERIAQUE.ATRASMR_AVISCOMTRANS_ASMR"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT ATRASMR_ATR_CODE_FK_PK, ATRASMR_CDF_ASMR_CODE_FK_PK, ATRASMR_NUMORD FROM T"& _ 
                "HERIAQUE.ATRASMR_AVISCOMTRANS_ASMR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE ATRASMR_ATR_CODE_FK_PK = @ATRASMR_ATR_"& _ 
                "CODE_FK_PK"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ATRASMR_ATR_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "ATRASMR_ATR_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsTheriaque_CriteresChoix.ATRASMR_AVISCOMTRANS_ASMRDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsTheriaque_CriteresChoix.ATRASMR_AVISCOMTRANS_ASMRDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsTheriaque_CriteresChoix.ATRASMR_AVISCOMTRANS_ASMRDataTable = New dsTheriaque_CriteresChoix.ATRASMR_AVISCOMTRANS_ASMRDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByCode(ByVal dataTable As dsTheriaque_CriteresChoix.ATRASMR_AVISCOMTRANS_ASMRDataTable, ByVal ATRASMR_ATR_CODE_FK_PK As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(ATRASMR_ATR_CODE_FK_PK,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByCode(ByVal ATRASMR_ATR_CODE_FK_PK As Integer) As dsTheriaque_CriteresChoix.ATRASMR_AVISCOMTRANS_ASMRDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(ATRASMR_ATR_CODE_FK_PK,Integer)
            Dim dataTable As dsTheriaque_CriteresChoix.ATRASMR_AVISCOMTRANS_ASMRDataTable = New dsTheriaque_CriteresChoix.ATRASMR_AVISCOMTRANS_ASMRDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsTheriaque_CriteresChoix.ATRASMR_AVISCOMTRANS_ASMRDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsTheriaque_CriteresChoix) As Integer
            Return Me.Adapter.Update(dataSet, "ATRASMR_AVISCOMTRANS_ASMR")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_ATRASMR_ATR_CODE_FK_PK As Integer, ByVal Original_ATRASMR_CDF_ASMR_CODE_FK_PK As String, ByVal Original_ATRASMR_NUMORD As Global.System.Nullable(Of Short)) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_ATRASMR_ATR_CODE_FK_PK,Integer)
            If (Original_ATRASMR_CDF_ASMR_CODE_FK_PK Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ATRASMR_CDF_ASMR_CODE_FK_PK")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_ATRASMR_CDF_ASMR_CODE_FK_PK,String)
            End If
            If (Original_ATRASMR_NUMORD.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_ATRASMR_NUMORD.Value,Short)
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal ATRASMR_ATR_CODE_FK_PK As Integer, ByVal ATRASMR_CDF_ASMR_CODE_FK_PK As String, ByVal ATRASMR_NUMORD As Global.System.Nullable(Of Short)) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(ATRASMR_ATR_CODE_FK_PK,Integer)
            If (ATRASMR_CDF_ASMR_CODE_FK_PK Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ATRASMR_CDF_ASMR_CODE_FK_PK")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(ATRASMR_CDF_ASMR_CODE_FK_PK,String)
            End If
            If (ATRASMR_NUMORD.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(ATRASMR_NUMORD.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal ATRASMR_ATR_CODE_FK_PK As Integer, ByVal ATRASMR_CDF_ASMR_CODE_FK_PK As String, ByVal ATRASMR_NUMORD As Global.System.Nullable(Of Short), ByVal Original_ATRASMR_ATR_CODE_FK_PK As Integer, ByVal Original_ATRASMR_CDF_ASMR_CODE_FK_PK As String, ByVal Original_ATRASMR_NUMORD As Global.System.Nullable(Of Short)) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(ATRASMR_ATR_CODE_FK_PK,Integer)
            If (ATRASMR_CDF_ASMR_CODE_FK_PK Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ATRASMR_CDF_ASMR_CODE_FK_PK")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(ATRASMR_CDF_ASMR_CODE_FK_PK,String)
            End If
            If (ATRASMR_NUMORD.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(ATRASMR_NUMORD.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(3).Value = CType(Original_ATRASMR_ATR_CODE_FK_PK,Integer)
            If (Original_ATRASMR_CDF_ASMR_CODE_FK_PK Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ATRASMR_CDF_ASMR_CODE_FK_PK")
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Original_ATRASMR_CDF_ASMR_CODE_FK_PK,String)
            End If
            If (Original_ATRASMR_NUMORD.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Original_ATRASMR_NUMORD.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal ATRASMR_NUMORD As Global.System.Nullable(Of Short), ByVal Original_ATRASMR_ATR_CODE_FK_PK As Integer, ByVal Original_ATRASMR_CDF_ASMR_CODE_FK_PK As String, ByVal Original_ATRASMR_NUMORD As Global.System.Nullable(Of Short)) As Integer
            Return Me.Update(Original_ATRASMR_ATR_CODE_FK_PK, Original_ATRASMR_CDF_ASMR_CODE_FK_PK, ATRASMR_NUMORD, Original_ATRASMR_ATR_CODE_FK_PK, Original_ATRASMR_CDF_ASMR_CODE_FK_PK, Original_ATRASMR_NUMORD)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class ATRSMR_AVISCOMTRANS_SMRTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "ATRSMR_AVISCOMTRANS_SMR"
            tableMapping.ColumnMappings.Add("ATRSMR_ATR_CODE_FK_PK", "ATRSMR_ATR_CODE_FK_PK")
            tableMapping.ColumnMappings.Add("ATRSMR_CDF_SMR_CODE_FK_PK", "ATRSMR_CDF_SMR_CODE_FK_PK")
            tableMapping.ColumnMappings.Add("ATRSMR_NUMORD", "ATRSMR_NUMORD")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [THERIAQUE].[ATRSMR_AVISCOMTRANS_SMR] WHERE (([ATRSMR_ATR_CODE_FK_PK]"& _ 
                " = @Original_ATRSMR_ATR_CODE_FK_PK) AND ([ATRSMR_CDF_SMR_CODE_FK_PK] = @Original"& _ 
                "_ATRSMR_CDF_SMR_CODE_FK_PK) AND ((@IsNull_ATRSMR_NUMORD = 1 AND [ATRSMR_NUMORD] "& _ 
                "IS NULL) OR ([ATRSMR_NUMORD] = @Original_ATRSMR_NUMORD)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ATRSMR_ATR_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ATRSMR_ATR_CODE_FK_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ATRSMR_CDF_SMR_CODE_FK_PK", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ATRSMR_CDF_SMR_CODE_FK_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ATRSMR_NUMORD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ATRSMR_NUMORD", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ATRSMR_NUMORD", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ATRSMR_NUMORD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [THERIAQUE].[ATRSMR_AVISCOMTRANS_SMR] ([ATRSMR_ATR_CODE_FK_PK], [ATRS"& _ 
                "MR_CDF_SMR_CODE_FK_PK], [ATRSMR_NUMORD]) VALUES (@ATRSMR_ATR_CODE_FK_PK, @ATRSMR"& _ 
                "_CDF_SMR_CODE_FK_PK, @ATRSMR_NUMORD);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ATRSMR_ATR_CODE_FK_PK, ATRSMR_CDF_"& _ 
                "SMR_CODE_FK_PK, ATRSMR_NUMORD FROM THERIAQUE.ATRSMR_AVISCOMTRANS_SMR WHERE (ATRS"& _ 
                "MR_ATR_CODE_FK_PK = @ATRSMR_ATR_CODE_FK_PK) AND (ATRSMR_CDF_SMR_CODE_FK_PK = @AT"& _ 
                "RSMR_CDF_SMR_CODE_FK_PK)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ATRSMR_ATR_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ATRSMR_ATR_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ATRSMR_CDF_SMR_CODE_FK_PK", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ATRSMR_CDF_SMR_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ATRSMR_NUMORD", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ATRSMR_NUMORD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [THERIAQUE].[ATRSMR_AVISCOMTRANS_SMR] SET [ATRSMR_ATR_CODE_FK_PK] = @ATRSM"& _ 
                "R_ATR_CODE_FK_PK, [ATRSMR_CDF_SMR_CODE_FK_PK] = @ATRSMR_CDF_SMR_CODE_FK_PK, [ATR"& _ 
                "SMR_NUMORD] = @ATRSMR_NUMORD WHERE (([ATRSMR_ATR_CODE_FK_PK] = @Original_ATRSMR_"& _ 
                "ATR_CODE_FK_PK) AND ([ATRSMR_CDF_SMR_CODE_FK_PK] = @Original_ATRSMR_CDF_SMR_CODE"& _ 
                "_FK_PK) AND ((@IsNull_ATRSMR_NUMORD = 1 AND [ATRSMR_NUMORD] IS NULL) OR ([ATRSMR"& _ 
                "_NUMORD] = @Original_ATRSMR_NUMORD)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ATRSMR_ATR_CODE_FK_PK, ATRSMR_CDF"& _ 
                "_SMR_CODE_FK_PK, ATRSMR_NUMORD FROM THERIAQUE.ATRSMR_AVISCOMTRANS_SMR WHERE (ATR"& _ 
                "SMR_ATR_CODE_FK_PK = @ATRSMR_ATR_CODE_FK_PK) AND (ATRSMR_CDF_SMR_CODE_FK_PK = @A"& _ 
                "TRSMR_CDF_SMR_CODE_FK_PK)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ATRSMR_ATR_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ATRSMR_ATR_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ATRSMR_CDF_SMR_CODE_FK_PK", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ATRSMR_CDF_SMR_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ATRSMR_NUMORD", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ATRSMR_NUMORD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ATRSMR_ATR_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ATRSMR_ATR_CODE_FK_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ATRSMR_CDF_SMR_CODE_FK_PK", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ATRSMR_CDF_SMR_CODE_FK_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ATRSMR_NUMORD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ATRSMR_NUMORD", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ATRSMR_NUMORD", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ATRSMR_NUMORD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Theriaque.My.MySettings.Default.ConnectionString2
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT ATRSMR_ATR_CODE_FK_PK, ATRSMR_CDF_SMR_CODE_FK_PK, ATRSMR_NUMORD FROM THERI"& _ 
                "AQUE.ATRSMR_AVISCOMTRANS_SMR"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT ATRSMR_ATR_CODE_FK_PK, ATRSMR_CDF_SMR_CODE_FK_PK, ATRSMR_NUMORD FROM THERI"& _ 
                "AQUE.ATRSMR_AVISCOMTRANS_SMR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE ATRSMR_ATR_CODE_FK_PK = @ATRSMR_ATR_CODE_FK_"& _ 
                "PK"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ATRSMR_ATR_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "ATRSMR_ATR_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsTheriaque_CriteresChoix.ATRSMR_AVISCOMTRANS_SMRDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsTheriaque_CriteresChoix.ATRSMR_AVISCOMTRANS_SMRDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsTheriaque_CriteresChoix.ATRSMR_AVISCOMTRANS_SMRDataTable = New dsTheriaque_CriteresChoix.ATRSMR_AVISCOMTRANS_SMRDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByCode(ByVal dataTable As dsTheriaque_CriteresChoix.ATRSMR_AVISCOMTRANS_SMRDataTable, ByVal ATRSMR_ATR_CODE_FK_PK As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(ATRSMR_ATR_CODE_FK_PK,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByCode(ByVal ATRSMR_ATR_CODE_FK_PK As Integer) As dsTheriaque_CriteresChoix.ATRSMR_AVISCOMTRANS_SMRDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(ATRSMR_ATR_CODE_FK_PK,Integer)
            Dim dataTable As dsTheriaque_CriteresChoix.ATRSMR_AVISCOMTRANS_SMRDataTable = New dsTheriaque_CriteresChoix.ATRSMR_AVISCOMTRANS_SMRDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsTheriaque_CriteresChoix.ATRSMR_AVISCOMTRANS_SMRDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsTheriaque_CriteresChoix) As Integer
            Return Me.Adapter.Update(dataSet, "ATRSMR_AVISCOMTRANS_SMR")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_ATRSMR_ATR_CODE_FK_PK As Integer, ByVal Original_ATRSMR_CDF_SMR_CODE_FK_PK As String, ByVal Original_ATRSMR_NUMORD As Global.System.Nullable(Of Short)) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_ATRSMR_ATR_CODE_FK_PK,Integer)
            If (Original_ATRSMR_CDF_SMR_CODE_FK_PK Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ATRSMR_CDF_SMR_CODE_FK_PK")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_ATRSMR_CDF_SMR_CODE_FK_PK,String)
            End If
            If (Original_ATRSMR_NUMORD.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_ATRSMR_NUMORD.Value,Short)
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal ATRSMR_ATR_CODE_FK_PK As Integer, ByVal ATRSMR_CDF_SMR_CODE_FK_PK As String, ByVal ATRSMR_NUMORD As Global.System.Nullable(Of Short)) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(ATRSMR_ATR_CODE_FK_PK,Integer)
            If (ATRSMR_CDF_SMR_CODE_FK_PK Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ATRSMR_CDF_SMR_CODE_FK_PK")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(ATRSMR_CDF_SMR_CODE_FK_PK,String)
            End If
            If (ATRSMR_NUMORD.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(ATRSMR_NUMORD.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal ATRSMR_ATR_CODE_FK_PK As Integer, ByVal ATRSMR_CDF_SMR_CODE_FK_PK As String, ByVal ATRSMR_NUMORD As Global.System.Nullable(Of Short), ByVal Original_ATRSMR_ATR_CODE_FK_PK As Integer, ByVal Original_ATRSMR_CDF_SMR_CODE_FK_PK As String, ByVal Original_ATRSMR_NUMORD As Global.System.Nullable(Of Short)) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(ATRSMR_ATR_CODE_FK_PK,Integer)
            If (ATRSMR_CDF_SMR_CODE_FK_PK Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ATRSMR_CDF_SMR_CODE_FK_PK")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(ATRSMR_CDF_SMR_CODE_FK_PK,String)
            End If
            If (ATRSMR_NUMORD.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(ATRSMR_NUMORD.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(3).Value = CType(Original_ATRSMR_ATR_CODE_FK_PK,Integer)
            If (Original_ATRSMR_CDF_SMR_CODE_FK_PK Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ATRSMR_CDF_SMR_CODE_FK_PK")
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Original_ATRSMR_CDF_SMR_CODE_FK_PK,String)
            End If
            If (Original_ATRSMR_NUMORD.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Original_ATRSMR_NUMORD.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal ATRSMR_NUMORD As Global.System.Nullable(Of Short), ByVal Original_ATRSMR_ATR_CODE_FK_PK As Integer, ByVal Original_ATRSMR_CDF_SMR_CODE_FK_PK As String, ByVal Original_ATRSMR_NUMORD As Global.System.Nullable(Of Short)) As Integer
            Return Me.Update(Original_ATRSMR_ATR_CODE_FK_PK, Original_ATRSMR_CDF_SMR_CODE_FK_PK, ATRSMR_NUMORD, Original_ATRSMR_ATR_CODE_FK_PK, Original_ATRSMR_CDF_SMR_CODE_FK_PK, Original_ATRSMR_NUMORD)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class ATRSAC_AVISCOMTRANS_SUBACTIVETableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "ATRSAC_AVISCOMTRANS_SUBACTIVE"
            tableMapping.ColumnMappings.Add("ATRSAC_ATR_CODE_FK_PK", "ATRSAC_ATR_CODE_FK_PK")
            tableMapping.ColumnMappings.Add("ATRSAC_SAC_CODE_FK_PK", "ATRSAC_SAC_CODE_FK_PK")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [THERIAQUE].[ATRSAC_AVISCOMTRANS_SUBACTIVE] WHERE (([ATRSAC_ATR_CODE_"& _ 
                "FK_PK] = @Original_ATRSAC_ATR_CODE_FK_PK) AND ([ATRSAC_SAC_CODE_FK_PK] = @Origin"& _ 
                "al_ATRSAC_SAC_CODE_FK_PK))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ATRSAC_ATR_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ATRSAC_ATR_CODE_FK_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ATRSAC_SAC_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ATRSAC_SAC_CODE_FK_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [THERIAQUE].[ATRSAC_AVISCOMTRANS_SUBACTIVE] ([ATRSAC_ATR_CODE_FK_PK],"& _ 
                " [ATRSAC_SAC_CODE_FK_PK]) VALUES (@ATRSAC_ATR_CODE_FK_PK, @ATRSAC_SAC_CODE_FK_PK"& _ 
                ");"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ATRSAC_ATR_CODE_FK_PK, ATRSAC_SAC_CODE_FK_PK FROM THERIAQUE.ATRSAC_AV"& _ 
                "ISCOMTRANS_SUBACTIVE WHERE (ATRSAC_ATR_CODE_FK_PK = @ATRSAC_ATR_CODE_FK_PK) AND "& _ 
                "(ATRSAC_SAC_CODE_FK_PK = @ATRSAC_SAC_CODE_FK_PK)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ATRSAC_ATR_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ATRSAC_ATR_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ATRSAC_SAC_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ATRSAC_SAC_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [THERIAQUE].[ATRSAC_AVISCOMTRANS_SUBACTIVE] SET [ATRSAC_ATR_CODE_FK_PK] = "& _ 
                "@ATRSAC_ATR_CODE_FK_PK, [ATRSAC_SAC_CODE_FK_PK] = @ATRSAC_SAC_CODE_FK_PK WHERE ("& _ 
                "([ATRSAC_ATR_CODE_FK_PK] = @Original_ATRSAC_ATR_CODE_FK_PK) AND ([ATRSAC_SAC_COD"& _ 
                "E_FK_PK] = @Original_ATRSAC_SAC_CODE_FK_PK));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ATRSAC_ATR_CODE_FK_PK, ATR"& _ 
                "SAC_SAC_CODE_FK_PK FROM THERIAQUE.ATRSAC_AVISCOMTRANS_SUBACTIVE WHERE (ATRSAC_AT"& _ 
                "R_CODE_FK_PK = @ATRSAC_ATR_CODE_FK_PK) AND (ATRSAC_SAC_CODE_FK_PK = @ATRSAC_SAC_"& _ 
                "CODE_FK_PK)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ATRSAC_ATR_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ATRSAC_ATR_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ATRSAC_SAC_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ATRSAC_SAC_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ATRSAC_ATR_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ATRSAC_ATR_CODE_FK_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ATRSAC_SAC_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ATRSAC_SAC_CODE_FK_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Theriaque.My.MySettings.Default.ConnectionString2
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT ATRSAC_ATR_CODE_FK_PK, ATRSAC_SAC_CODE_FK_PK FROM THERIAQUE.ATRSAC_AVISCOM"& _ 
                "TRANS_SUBACTIVE"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT ATRSAC_ATR_CODE_FK_PK, ATRSAC_SAC_CODE_FK_PK FROM THERIAQUE.ATRSAC_AVISCOM"& _ 
                "TRANS_SUBACTIVE"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE ATRSAC_ATR_CODE_FK_PK = @ATRSAC_ATR_CODE_FK_PK"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ATRSAC_ATR_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "ATRSAC_ATR_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsTheriaque_CriteresChoix.ATRSAC_AVISCOMTRANS_SUBACTIVEDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsTheriaque_CriteresChoix.ATRSAC_AVISCOMTRANS_SUBACTIVEDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsTheriaque_CriteresChoix.ATRSAC_AVISCOMTRANS_SUBACTIVEDataTable = New dsTheriaque_CriteresChoix.ATRSAC_AVISCOMTRANS_SUBACTIVEDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByCode(ByVal dataTable As dsTheriaque_CriteresChoix.ATRSAC_AVISCOMTRANS_SUBACTIVEDataTable, ByVal ATRSAC_ATR_CODE_FK_PK As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(ATRSAC_ATR_CODE_FK_PK,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByCode(ByVal ATRSAC_ATR_CODE_FK_PK As Integer) As dsTheriaque_CriteresChoix.ATRSAC_AVISCOMTRANS_SUBACTIVEDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(ATRSAC_ATR_CODE_FK_PK,Integer)
            Dim dataTable As dsTheriaque_CriteresChoix.ATRSAC_AVISCOMTRANS_SUBACTIVEDataTable = New dsTheriaque_CriteresChoix.ATRSAC_AVISCOMTRANS_SUBACTIVEDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsTheriaque_CriteresChoix.ATRSAC_AVISCOMTRANS_SUBACTIVEDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsTheriaque_CriteresChoix) As Integer
            Return Me.Adapter.Update(dataSet, "ATRSAC_AVISCOMTRANS_SUBACTIVE")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_ATRSAC_ATR_CODE_FK_PK As Integer, ByVal Original_ATRSAC_SAC_CODE_FK_PK As Integer) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_ATRSAC_ATR_CODE_FK_PK,Integer)
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_ATRSAC_SAC_CODE_FK_PK,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal ATRSAC_ATR_CODE_FK_PK As Integer, ByVal ATRSAC_SAC_CODE_FK_PK As Integer) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(ATRSAC_ATR_CODE_FK_PK,Integer)
            Me.Adapter.InsertCommand.Parameters(1).Value = CType(ATRSAC_SAC_CODE_FK_PK,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal ATRSAC_ATR_CODE_FK_PK As Integer, ByVal ATRSAC_SAC_CODE_FK_PK As Integer, ByVal Original_ATRSAC_ATR_CODE_FK_PK As Integer, ByVal Original_ATRSAC_SAC_CODE_FK_PK As Integer) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(ATRSAC_ATR_CODE_FK_PK,Integer)
            Me.Adapter.UpdateCommand.Parameters(1).Value = CType(ATRSAC_SAC_CODE_FK_PK,Integer)
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Original_ATRSAC_ATR_CODE_FK_PK,Integer)
            Me.Adapter.UpdateCommand.Parameters(3).Value = CType(Original_ATRSAC_SAC_CODE_FK_PK,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal Original_ATRSAC_ATR_CODE_FK_PK As Integer, ByVal Original_ATRSAC_SAC_CODE_FK_PK As Integer) As Integer
            Return Me.Update(Original_ATRSAC_ATR_CODE_FK_PK, Original_ATRSAC_SAC_CODE_FK_PK, Original_ATRSAC_ATR_CODE_FK_PK, Original_ATRSAC_SAC_CODE_FK_PK)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class ATRPR_AVISCOMTRANS_PRODUITTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "ATRPR_AVISCOMTRANS_PRODUIT"
            tableMapping.ColumnMappings.Add("ATRPR_ATR_CODE_FK_PK", "ATRPR_ATR_CODE_FK_PK")
            tableMapping.ColumnMappings.Add("ATRPR_PR_CODE_FK_PK", "ATRPR_PR_CODE_FK_PK")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [THERIAQUE].[ATRPR_AVISCOMTRANS_PRODUIT] WHERE (([ATRPR_ATR_CODE_FK_P"& _ 
                "K] = @Original_ATRPR_ATR_CODE_FK_PK) AND ([ATRPR_PR_CODE_FK_PK] = @Original_ATRP"& _ 
                "R_PR_CODE_FK_PK))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ATRPR_ATR_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ATRPR_ATR_CODE_FK_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ATRPR_PR_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ATRPR_PR_CODE_FK_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [THERIAQUE].[ATRPR_AVISCOMTRANS_PRODUIT] ([ATRPR_ATR_CODE_FK_PK], [AT"& _ 
                "RPR_PR_CODE_FK_PK]) VALUES (@ATRPR_ATR_CODE_FK_PK, @ATRPR_PR_CODE_FK_PK);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELEC"& _ 
                "T ATRPR_ATR_CODE_FK_PK, ATRPR_PR_CODE_FK_PK FROM THERIAQUE.ATRPR_AVISCOMTRANS_PR"& _ 
                "ODUIT WHERE (ATRPR_ATR_CODE_FK_PK = @ATRPR_ATR_CODE_FK_PK) AND (ATRPR_PR_CODE_FK"& _ 
                "_PK = @ATRPR_PR_CODE_FK_PK)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ATRPR_ATR_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ATRPR_ATR_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ATRPR_PR_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ATRPR_PR_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [THERIAQUE].[ATRPR_AVISCOMTRANS_PRODUIT] SET [ATRPR_ATR_CODE_FK_PK] = @ATR"& _ 
                "PR_ATR_CODE_FK_PK, [ATRPR_PR_CODE_FK_PK] = @ATRPR_PR_CODE_FK_PK WHERE (([ATRPR_A"& _ 
                "TR_CODE_FK_PK] = @Original_ATRPR_ATR_CODE_FK_PK) AND ([ATRPR_PR_CODE_FK_PK] = @O"& _ 
                "riginal_ATRPR_PR_CODE_FK_PK));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ATRPR_ATR_CODE_FK_PK, ATRPR_PR_CODE_FK_PK"& _ 
                " FROM THERIAQUE.ATRPR_AVISCOMTRANS_PRODUIT WHERE (ATRPR_ATR_CODE_FK_PK = @ATRPR_"& _ 
                "ATR_CODE_FK_PK) AND (ATRPR_PR_CODE_FK_PK = @ATRPR_PR_CODE_FK_PK)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ATRPR_ATR_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ATRPR_ATR_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ATRPR_PR_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ATRPR_PR_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ATRPR_ATR_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ATRPR_ATR_CODE_FK_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ATRPR_PR_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ATRPR_PR_CODE_FK_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Theriaque.My.MySettings.Default.ConnectionString2
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT ATRPR_ATR_CODE_FK_PK, ATRPR_PR_CODE_FK_PK FROM THERIAQUE.ATRPR_AVISCOMTRAN"& _ 
                "S_PRODUIT"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT ATRPR_ATR_CODE_FK_PK, ATRPR_PR_CODE_FK_PK FROM THERIAQUE.ATRPR_AVISCOMTRAN"& _ 
                "S_PRODUIT"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE ATRPR_ATR_CODE_FK_PK = @ATRPR_ATR_CODE_FK_PK"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ATRPR_ATR_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "ATRPR_ATR_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsTheriaque_CriteresChoix.ATRPR_AVISCOMTRANS_PRODUITDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsTheriaque_CriteresChoix.ATRPR_AVISCOMTRANS_PRODUITDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsTheriaque_CriteresChoix.ATRPR_AVISCOMTRANS_PRODUITDataTable = New dsTheriaque_CriteresChoix.ATRPR_AVISCOMTRANS_PRODUITDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByCode(ByVal dataTable As dsTheriaque_CriteresChoix.ATRPR_AVISCOMTRANS_PRODUITDataTable, ByVal ATRPR_ATR_CODE_FK_PK As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(ATRPR_ATR_CODE_FK_PK,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByCode(ByVal ATRPR_ATR_CODE_FK_PK As Integer) As dsTheriaque_CriteresChoix.ATRPR_AVISCOMTRANS_PRODUITDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(ATRPR_ATR_CODE_FK_PK,Integer)
            Dim dataTable As dsTheriaque_CriteresChoix.ATRPR_AVISCOMTRANS_PRODUITDataTable = New dsTheriaque_CriteresChoix.ATRPR_AVISCOMTRANS_PRODUITDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsTheriaque_CriteresChoix.ATRPR_AVISCOMTRANS_PRODUITDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsTheriaque_CriteresChoix) As Integer
            Return Me.Adapter.Update(dataSet, "ATRPR_AVISCOMTRANS_PRODUIT")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_ATRPR_ATR_CODE_FK_PK As Integer, ByVal Original_ATRPR_PR_CODE_FK_PK As Integer) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_ATRPR_ATR_CODE_FK_PK,Integer)
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_ATRPR_PR_CODE_FK_PK,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal ATRPR_ATR_CODE_FK_PK As Integer, ByVal ATRPR_PR_CODE_FK_PK As Integer) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(ATRPR_ATR_CODE_FK_PK,Integer)
            Me.Adapter.InsertCommand.Parameters(1).Value = CType(ATRPR_PR_CODE_FK_PK,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal ATRPR_ATR_CODE_FK_PK As Integer, ByVal ATRPR_PR_CODE_FK_PK As Integer, ByVal Original_ATRPR_ATR_CODE_FK_PK As Integer, ByVal Original_ATRPR_PR_CODE_FK_PK As Integer) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(ATRPR_ATR_CODE_FK_PK,Integer)
            Me.Adapter.UpdateCommand.Parameters(1).Value = CType(ATRPR_PR_CODE_FK_PK,Integer)
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Original_ATRPR_ATR_CODE_FK_PK,Integer)
            Me.Adapter.UpdateCommand.Parameters(3).Value = CType(Original_ATRPR_PR_CODE_FK_PK,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal Original_ATRPR_ATR_CODE_FK_PK As Integer, ByVal Original_ATRPR_PR_CODE_FK_PK As Integer) As Integer
            Return Me.Update(Original_ATRPR_ATR_CODE_FK_PK, Original_ATRPR_PR_CODE_FK_PK, Original_ATRPR_ATR_CODE_FK_PK, Original_ATRPR_PR_CODE_FK_PK)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class SPATR_SPEC_AVISTRANSPARENCETableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "SPATR_SPEC_AVISTRANSPARENCE"
            tableMapping.ColumnMappings.Add("SPATR_SP_CODE_FK_PK", "SPATR_SP_CODE_FK_PK")
            tableMapping.ColumnMappings.Add("SPATR_ATR_CODE_FK_PK", "SPATR_ATR_CODE_FK_PK")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [THERIAQUE].[SPATR_SPEC_AVISTRANSPARENCE] WHERE (([SPATR_SP_CODE_FK_P"& _ 
                "K] = @Original_SPATR_SP_CODE_FK_PK) AND ([SPATR_ATR_CODE_FK_PK] = @Original_SPAT"& _ 
                "R_ATR_CODE_FK_PK))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SPATR_SP_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SPATR_SP_CODE_FK_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SPATR_ATR_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SPATR_ATR_CODE_FK_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [THERIAQUE].[SPATR_SPEC_AVISTRANSPARENCE] ([SPATR_SP_CODE_FK_PK], [SP"& _ 
                "ATR_ATR_CODE_FK_PK]) VALUES (@SPATR_SP_CODE_FK_PK, @SPATR_ATR_CODE_FK_PK);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELE"& _ 
                "CT SPATR_SP_CODE_FK_PK, SPATR_ATR_CODE_FK_PK FROM THERIAQUE.SPATR_SPEC_AVISTRANS"& _ 
                "PARENCE WHERE (SPATR_ATR_CODE_FK_PK = @SPATR_ATR_CODE_FK_PK) AND (SPATR_SP_CODE_"& _ 
                "FK_PK = @SPATR_SP_CODE_FK_PK)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SPATR_SP_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SPATR_SP_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SPATR_ATR_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SPATR_ATR_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [THERIAQUE].[SPATR_SPEC_AVISTRANSPARENCE] SET [SPATR_SP_CODE_FK_PK] = @SPA"& _ 
                "TR_SP_CODE_FK_PK, [SPATR_ATR_CODE_FK_PK] = @SPATR_ATR_CODE_FK_PK WHERE (([SPATR_"& _ 
                "SP_CODE_FK_PK] = @Original_SPATR_SP_CODE_FK_PK) AND ([SPATR_ATR_CODE_FK_PK] = @O"& _ 
                "riginal_SPATR_ATR_CODE_FK_PK));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT SPATR_SP_CODE_FK_PK, SPATR_ATR_CODE_FK_P"& _ 
                "K FROM THERIAQUE.SPATR_SPEC_AVISTRANSPARENCE WHERE (SPATR_ATR_CODE_FK_PK = @SPAT"& _ 
                "R_ATR_CODE_FK_PK) AND (SPATR_SP_CODE_FK_PK = @SPATR_SP_CODE_FK_PK)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SPATR_SP_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SPATR_SP_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SPATR_ATR_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SPATR_ATR_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SPATR_SP_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SPATR_SP_CODE_FK_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SPATR_ATR_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SPATR_ATR_CODE_FK_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Theriaque.My.MySettings.Default.ConnectionString2
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT SPATR_SP_CODE_FK_PK, SPATR_ATR_CODE_FK_PK FROM THERIAQUE.SPATR_SPEC_AVISTR"& _ 
                "ANSPARENCE"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT SPATR_SP_CODE_FK_PK, SPATR_ATR_CODE_FK_PK FROM THERIAQUE.SPATR_SPEC_AVISTR"& _ 
                "ANSPARENCE"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE SPATR_ATR_CODE_FK_PK = @SPATR_ATR_CODE_FK_PK"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SPATR_ATR_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "SPATR_ATR_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsTheriaque_CriteresChoix.SPATR_SPEC_AVISTRANSPARENCEDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsTheriaque_CriteresChoix.SPATR_SPEC_AVISTRANSPARENCEDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsTheriaque_CriteresChoix.SPATR_SPEC_AVISTRANSPARENCEDataTable = New dsTheriaque_CriteresChoix.SPATR_SPEC_AVISTRANSPARENCEDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByCode(ByVal dataTable As dsTheriaque_CriteresChoix.SPATR_SPEC_AVISTRANSPARENCEDataTable, ByVal SPATR_ATR_CODE_FK_PK As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(SPATR_ATR_CODE_FK_PK,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByCode(ByVal SPATR_ATR_CODE_FK_PK As Integer) As dsTheriaque_CriteresChoix.SPATR_SPEC_AVISTRANSPARENCEDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(SPATR_ATR_CODE_FK_PK,Integer)
            Dim dataTable As dsTheriaque_CriteresChoix.SPATR_SPEC_AVISTRANSPARENCEDataTable = New dsTheriaque_CriteresChoix.SPATR_SPEC_AVISTRANSPARENCEDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsTheriaque_CriteresChoix.SPATR_SPEC_AVISTRANSPARENCEDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsTheriaque_CriteresChoix) As Integer
            Return Me.Adapter.Update(dataSet, "SPATR_SPEC_AVISTRANSPARENCE")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_SPATR_SP_CODE_FK_PK As Integer, ByVal Original_SPATR_ATR_CODE_FK_PK As Integer) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_SPATR_SP_CODE_FK_PK,Integer)
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_SPATR_ATR_CODE_FK_PK,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal SPATR_SP_CODE_FK_PK As Integer, ByVal SPATR_ATR_CODE_FK_PK As Integer) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(SPATR_SP_CODE_FK_PK,Integer)
            Me.Adapter.InsertCommand.Parameters(1).Value = CType(SPATR_ATR_CODE_FK_PK,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal SPATR_SP_CODE_FK_PK As Integer, ByVal SPATR_ATR_CODE_FK_PK As Integer, ByVal Original_SPATR_SP_CODE_FK_PK As Integer, ByVal Original_SPATR_ATR_CODE_FK_PK As Integer) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(SPATR_SP_CODE_FK_PK,Integer)
            Me.Adapter.UpdateCommand.Parameters(1).Value = CType(SPATR_ATR_CODE_FK_PK,Integer)
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Original_SPATR_SP_CODE_FK_PK,Integer)
            Me.Adapter.UpdateCommand.Parameters(3).Value = CType(Original_SPATR_ATR_CODE_FK_PK,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal Original_SPATR_SP_CODE_FK_PK As Integer, ByVal Original_SPATR_ATR_CODE_FK_PK As Integer) As Integer
            Return Me.Update(Original_SPATR_SP_CODE_FK_PK, Original_SPATR_ATR_CODE_FK_PK, Original_SPATR_SP_CODE_FK_PK, Original_SPATR_ATR_CODE_FK_PK)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class CH_CHOIXTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "CH_CHOIX"
            tableMapping.ColumnMappings.Add("CH_CODE_SQ_PK", "CH_CODE_SQ_PK")
            tableMapping.ColumnMappings.Add("CH_TITRE1", "CH_TITRE1")
            tableMapping.ColumnMappings.Add("CH_DATE", "CH_DATE")
            tableMapping.ColumnMappings.Add("CH_TEXTE", "CH_TEXTE")
            tableMapping.ColumnMappings.Add("CH_DATECR", "CH_DATECR")
            tableMapping.ColumnMappings.Add("CH_DATEMJ", "CH_DATEMJ")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [THERIAQUE].[CH_CHOIX] WHERE (([CH_CODE_SQ_PK] = @Original_CH_CODE_SQ"& _ 
                "_PK) AND ([CH_TITRE1] = @Original_CH_TITRE1) AND ((@IsNull_CH_DATE = 1 AND [CH_D"& _ 
                "ATE] IS NULL) OR ([CH_DATE] = @Original_CH_DATE)) AND ([CH_DATECR] = @Original_C"& _ 
                "H_DATECR) AND ((@IsNull_CH_DATEMJ = 1 AND [CH_DATEMJ] IS NULL) OR ([CH_DATEMJ] ="& _ 
                " @Original_CH_DATEMJ)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CH_CODE_SQ_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CH_CODE_SQ_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CH_TITRE1", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CH_TITRE1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CH_DATE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CH_DATE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CH_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CH_DATE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CH_DATECR", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CH_DATECR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CH_DATEMJ", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CH_DATEMJ", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CH_DATEMJ", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CH_DATEMJ", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [THERIAQUE].[CH_CHOIX] ([CH_CODE_SQ_PK], [CH_TITRE1], [CH_DATE], [CH_"& _ 
                "TEXTE], [CH_DATECR], [CH_DATEMJ]) VALUES (@CH_CODE_SQ_PK, @CH_TITRE1, @CH_DATE, "& _ 
                "@CH_TEXTE, @CH_DATECR, @CH_DATEMJ);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT CH_CODE_SQ_PK, CH_TITRE1, CH_DATE, C"& _ 
                "H_TEXTE, CH_DATECR, CH_DATEMJ FROM THERIAQUE.CH_CHOIX WHERE (CH_CODE_SQ_PK = @CH"& _ 
                "_CODE_SQ_PK)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CH_CODE_SQ_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CH_CODE_SQ_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CH_TITRE1", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CH_TITRE1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CH_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CH_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CH_TEXTE", Global.System.Data.SqlDbType.Text, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CH_TEXTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CH_DATECR", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CH_DATECR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CH_DATEMJ", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CH_DATEMJ", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [THERIAQUE].[CH_CHOIX] SET [CH_CODE_SQ_PK] = @CH_CODE_SQ_PK, [CH_TITRE1] ="& _ 
                " @CH_TITRE1, [CH_DATE] = @CH_DATE, [CH_TEXTE] = @CH_TEXTE, [CH_DATECR] = @CH_DAT"& _ 
                "ECR, [CH_DATEMJ] = @CH_DATEMJ WHERE (([CH_CODE_SQ_PK] = @Original_CH_CODE_SQ_PK)"& _ 
                " AND ([CH_TITRE1] = @Original_CH_TITRE1) AND ((@IsNull_CH_DATE = 1 AND [CH_DATE]"& _ 
                " IS NULL) OR ([CH_DATE] = @Original_CH_DATE)) AND ([CH_DATECR] = @Original_CH_DA"& _ 
                "TECR) AND ((@IsNull_CH_DATEMJ = 1 AND [CH_DATEMJ] IS NULL) OR ([CH_DATEMJ] = @Or"& _ 
                "iginal_CH_DATEMJ)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT CH_CODE_SQ_PK, CH_TITRE1, CH_DATE, CH_TEXTE, CH_DAT"& _ 
                "ECR, CH_DATEMJ FROM THERIAQUE.CH_CHOIX WHERE (CH_CODE_SQ_PK = @CH_CODE_SQ_PK)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CH_CODE_SQ_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CH_CODE_SQ_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CH_TITRE1", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CH_TITRE1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CH_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CH_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CH_TEXTE", Global.System.Data.SqlDbType.Text, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CH_TEXTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CH_DATECR", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CH_DATECR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CH_DATEMJ", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CH_DATEMJ", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CH_CODE_SQ_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CH_CODE_SQ_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CH_TITRE1", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CH_TITRE1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CH_DATE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CH_DATE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CH_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CH_DATE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CH_DATECR", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CH_DATECR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CH_DATEMJ", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CH_DATEMJ", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CH_DATEMJ", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CH_DATEMJ", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Theriaque.My.MySettings.Default.ConnectionString2
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT CH_CODE_SQ_PK, CH_TITRE1, CH_DATE, CH_TEXTE, CH_DATECR, CH_DATEMJ FROM THE"& _ 
                "RIAQUE.CH_CHOIX"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT CH_CODE_SQ_PK, CH_TITRE1, CH_DATE, CH_TEXTE, CH_DATECR, CH_DATEMJ FROM THE"& _ 
                "RIAQUE.CH_CHOIX"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE CH_CODE_SQ_PK = @CH_CODE_SQ_PK"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CH_CODE_SQ_PK", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "CH_CODE_SQ_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsTheriaque_CriteresChoix.CH_CHOIXDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsTheriaque_CriteresChoix.CH_CHOIXDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsTheriaque_CriteresChoix.CH_CHOIXDataTable = New dsTheriaque_CriteresChoix.CH_CHOIXDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByCode(ByVal dataTable As dsTheriaque_CriteresChoix.CH_CHOIXDataTable, ByVal CH_CODE_SQ_PK As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(CH_CODE_SQ_PK,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByCode(ByVal CH_CODE_SQ_PK As Integer) As dsTheriaque_CriteresChoix.CH_CHOIXDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(CH_CODE_SQ_PK,Integer)
            Dim dataTable As dsTheriaque_CriteresChoix.CH_CHOIXDataTable = New dsTheriaque_CriteresChoix.CH_CHOIXDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsTheriaque_CriteresChoix.CH_CHOIXDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsTheriaque_CriteresChoix) As Integer
            Return Me.Adapter.Update(dataSet, "CH_CHOIX")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_CH_CODE_SQ_PK As Integer, ByVal Original_CH_TITRE1 As String, ByVal Original_CH_DATE As Global.System.Nullable(Of Date), ByVal Original_CH_DATECR As Date, ByVal Original_CH_DATEMJ As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_CH_CODE_SQ_PK,Integer)
            If (Original_CH_TITRE1 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_CH_TITRE1")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_CH_TITRE1,String)
            End If
            If (Original_CH_DATE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_CH_DATE.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_CH_DATECR,Date)
            If (Original_CH_DATEMJ.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_CH_DATEMJ.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal CH_CODE_SQ_PK As Integer, ByVal CH_TITRE1 As String, ByVal CH_DATE As Global.System.Nullable(Of Date), ByVal CH_TEXTE As String, ByVal CH_DATECR As Date, ByVal CH_DATEMJ As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(CH_CODE_SQ_PK,Integer)
            If (CH_TITRE1 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CH_TITRE1")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(CH_TITRE1,String)
            End If
            If (CH_DATE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(CH_DATE.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (CH_TEXTE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CH_TEXTE")
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(CH_TEXTE,String)
            End If
            Me.Adapter.InsertCommand.Parameters(4).Value = CType(CH_DATECR,Date)
            If (CH_DATEMJ.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(CH_DATEMJ.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal CH_CODE_SQ_PK As Integer, ByVal CH_TITRE1 As String, ByVal CH_DATE As Global.System.Nullable(Of Date), ByVal CH_TEXTE As String, ByVal CH_DATECR As Date, ByVal CH_DATEMJ As Global.System.Nullable(Of Date), ByVal Original_CH_CODE_SQ_PK As Integer, ByVal Original_CH_TITRE1 As String, ByVal Original_CH_DATE As Global.System.Nullable(Of Date), ByVal Original_CH_DATECR As Date, ByVal Original_CH_DATEMJ As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(CH_CODE_SQ_PK,Integer)
            If (CH_TITRE1 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CH_TITRE1")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(CH_TITRE1,String)
            End If
            If (CH_DATE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(CH_DATE.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (CH_TEXTE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CH_TEXTE")
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(CH_TEXTE,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(4).Value = CType(CH_DATECR,Date)
            If (CH_DATEMJ.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(CH_DATEMJ.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Original_CH_CODE_SQ_PK,Integer)
            If (Original_CH_TITRE1 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_CH_TITRE1")
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Original_CH_TITRE1,String)
            End If
            If (Original_CH_DATE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Original_CH_DATE.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(10).Value = CType(Original_CH_DATECR,Date)
            If (Original_CH_DATEMJ.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(Original_CH_DATEMJ.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal CH_TITRE1 As String, ByVal CH_DATE As Global.System.Nullable(Of Date), ByVal CH_TEXTE As String, ByVal CH_DATECR As Date, ByVal CH_DATEMJ As Global.System.Nullable(Of Date), ByVal Original_CH_CODE_SQ_PK As Integer, ByVal Original_CH_TITRE1 As String, ByVal Original_CH_DATE As Global.System.Nullable(Of Date), ByVal Original_CH_DATECR As Date, ByVal Original_CH_DATEMJ As Global.System.Nullable(Of Date)) As Integer
            Return Me.Update(Original_CH_CODE_SQ_PK, CH_TITRE1, CH_DATE, CH_TEXTE, CH_DATECR, CH_DATEMJ, Original_CH_CODE_SQ_PK, Original_CH_TITRE1, Original_CH_DATE, Original_CH_DATECR, Original_CH_DATEMJ)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class CHTIT_CH_TITRE2TableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "CHTIT_CH_TITRE2"
            tableMapping.ColumnMappings.Add("CHTIT_CH_CODE_FK_PK", "CHTIT_CH_CODE_FK_PK")
            tableMapping.ColumnMappings.Add("CHTIT_CDF_TIT_CODE_FK_PK", "CHTIT_CDF_TIT_CODE_FK_PK")
            tableMapping.ColumnMappings.Add("CHTIT_NUMORD", "CHTIT_NUMORD")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [THERIAQUE].[CHTIT_CH_TITRE2] WHERE (([CHTIT_CH_CODE_FK_PK] = @Origin"& _ 
                "al_CHTIT_CH_CODE_FK_PK) AND ([CHTIT_CDF_TIT_CODE_FK_PK] = @Original_CHTIT_CDF_TI"& _ 
                "T_CODE_FK_PK) AND ((@IsNull_CHTIT_NUMORD = 1 AND [CHTIT_NUMORD] IS NULL) OR ([CH"& _ 
                "TIT_NUMORD] = @Original_CHTIT_NUMORD)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CHTIT_CH_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CHTIT_CH_CODE_FK_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CHTIT_CDF_TIT_CODE_FK_PK", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CHTIT_CDF_TIT_CODE_FK_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CHTIT_NUMORD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CHTIT_NUMORD", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CHTIT_NUMORD", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CHTIT_NUMORD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [THERIAQUE].[CHTIT_CH_TITRE2] ([CHTIT_CH_CODE_FK_PK], [CHTIT_CDF_TIT_"& _ 
                "CODE_FK_PK], [CHTIT_NUMORD]) VALUES (@CHTIT_CH_CODE_FK_PK, @CHTIT_CDF_TIT_CODE_F"& _ 
                "K_PK, @CHTIT_NUMORD);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT CHTIT_CH_CODE_FK_PK, CHTIT_CDF_TIT_CODE_FK_PK, CHT"& _ 
                "IT_NUMORD FROM THERIAQUE.CHTIT_CH_TITRE2 WHERE (CHTIT_CDF_TIT_CODE_FK_PK = @CHTI"& _ 
                "T_CDF_TIT_CODE_FK_PK) AND (CHTIT_CH_CODE_FK_PK = @CHTIT_CH_CODE_FK_PK)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CHTIT_CH_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CHTIT_CH_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CHTIT_CDF_TIT_CODE_FK_PK", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CHTIT_CDF_TIT_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CHTIT_NUMORD", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CHTIT_NUMORD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [THERIAQUE].[CHTIT_CH_TITRE2] SET [CHTIT_CH_CODE_FK_PK] = @CHTIT_CH_CODE_F"& _ 
                "K_PK, [CHTIT_CDF_TIT_CODE_FK_PK] = @CHTIT_CDF_TIT_CODE_FK_PK, [CHTIT_NUMORD] = @"& _ 
                "CHTIT_NUMORD WHERE (([CHTIT_CH_CODE_FK_PK] = @Original_CHTIT_CH_CODE_FK_PK) AND "& _ 
                "([CHTIT_CDF_TIT_CODE_FK_PK] = @Original_CHTIT_CDF_TIT_CODE_FK_PK) AND ((@IsNull_"& _ 
                "CHTIT_NUMORD = 1 AND [CHTIT_NUMORD] IS NULL) OR ([CHTIT_NUMORD] = @Original_CHTI"& _ 
                "T_NUMORD)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT CHTIT_CH_CODE_FK_PK, CHTIT_CDF_TIT_CODE_FK_PK, CHTIT_NUMORD"& _ 
                " FROM THERIAQUE.CHTIT_CH_TITRE2 WHERE (CHTIT_CDF_TIT_CODE_FK_PK = @CHTIT_CDF_TIT"& _ 
                "_CODE_FK_PK) AND (CHTIT_CH_CODE_FK_PK = @CHTIT_CH_CODE_FK_PK)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CHTIT_CH_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CHTIT_CH_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CHTIT_CDF_TIT_CODE_FK_PK", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CHTIT_CDF_TIT_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CHTIT_NUMORD", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CHTIT_NUMORD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CHTIT_CH_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CHTIT_CH_CODE_FK_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CHTIT_CDF_TIT_CODE_FK_PK", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CHTIT_CDF_TIT_CODE_FK_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CHTIT_NUMORD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CHTIT_NUMORD", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CHTIT_NUMORD", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CHTIT_NUMORD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Theriaque.My.MySettings.Default.ConnectionString2
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT CHTIT_CH_CODE_FK_PK, CHTIT_CDF_TIT_CODE_FK_PK, CHTIT_NUMORD FROM THERIAQUE"& _ 
                ".CHTIT_CH_TITRE2"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT CHTIT_CH_CODE_FK_PK, CHTIT_CDF_TIT_CODE_FK_PK, CHTIT_NUMORD FROM THERIAQUE"& _ 
                ".CHTIT_CH_TITRE2"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE CHTIT_CH_CODE_FK_PK = @CHTIT_CH_CODE_FK_PK"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CHTIT_CH_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "CHTIT_CH_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsTheriaque_CriteresChoix.CHTIT_CH_TITRE2DataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsTheriaque_CriteresChoix.CHTIT_CH_TITRE2DataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsTheriaque_CriteresChoix.CHTIT_CH_TITRE2DataTable = New dsTheriaque_CriteresChoix.CHTIT_CH_TITRE2DataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByCode(ByVal dataTable As dsTheriaque_CriteresChoix.CHTIT_CH_TITRE2DataTable, ByVal CHTIT_CH_CODE_FK_PK As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(CHTIT_CH_CODE_FK_PK,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByCode(ByVal CHTIT_CH_CODE_FK_PK As Integer) As dsTheriaque_CriteresChoix.CHTIT_CH_TITRE2DataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(CHTIT_CH_CODE_FK_PK,Integer)
            Dim dataTable As dsTheriaque_CriteresChoix.CHTIT_CH_TITRE2DataTable = New dsTheriaque_CriteresChoix.CHTIT_CH_TITRE2DataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsTheriaque_CriteresChoix.CHTIT_CH_TITRE2DataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsTheriaque_CriteresChoix) As Integer
            Return Me.Adapter.Update(dataSet, "CHTIT_CH_TITRE2")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_CHTIT_CH_CODE_FK_PK As Integer, ByVal Original_CHTIT_CDF_TIT_CODE_FK_PK As String, ByVal Original_CHTIT_NUMORD As Global.System.Nullable(Of Short)) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_CHTIT_CH_CODE_FK_PK,Integer)
            If (Original_CHTIT_CDF_TIT_CODE_FK_PK Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_CHTIT_CDF_TIT_CODE_FK_PK")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_CHTIT_CDF_TIT_CODE_FK_PK,String)
            End If
            If (Original_CHTIT_NUMORD.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_CHTIT_NUMORD.Value,Short)
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal CHTIT_CH_CODE_FK_PK As Integer, ByVal CHTIT_CDF_TIT_CODE_FK_PK As String, ByVal CHTIT_NUMORD As Global.System.Nullable(Of Short)) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(CHTIT_CH_CODE_FK_PK,Integer)
            If (CHTIT_CDF_TIT_CODE_FK_PK Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CHTIT_CDF_TIT_CODE_FK_PK")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(CHTIT_CDF_TIT_CODE_FK_PK,String)
            End If
            If (CHTIT_NUMORD.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(CHTIT_NUMORD.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal CHTIT_CH_CODE_FK_PK As Integer, ByVal CHTIT_CDF_TIT_CODE_FK_PK As String, ByVal CHTIT_NUMORD As Global.System.Nullable(Of Short), ByVal Original_CHTIT_CH_CODE_FK_PK As Integer, ByVal Original_CHTIT_CDF_TIT_CODE_FK_PK As String, ByVal Original_CHTIT_NUMORD As Global.System.Nullable(Of Short)) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(CHTIT_CH_CODE_FK_PK,Integer)
            If (CHTIT_CDF_TIT_CODE_FK_PK Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CHTIT_CDF_TIT_CODE_FK_PK")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(CHTIT_CDF_TIT_CODE_FK_PK,String)
            End If
            If (CHTIT_NUMORD.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(CHTIT_NUMORD.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(3).Value = CType(Original_CHTIT_CH_CODE_FK_PK,Integer)
            If (Original_CHTIT_CDF_TIT_CODE_FK_PK Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_CHTIT_CDF_TIT_CODE_FK_PK")
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Original_CHTIT_CDF_TIT_CODE_FK_PK,String)
            End If
            If (Original_CHTIT_NUMORD.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Original_CHTIT_NUMORD.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal CHTIT_NUMORD As Global.System.Nullable(Of Short), ByVal Original_CHTIT_CH_CODE_FK_PK As Integer, ByVal Original_CHTIT_CDF_TIT_CODE_FK_PK As String, ByVal Original_CHTIT_NUMORD As Global.System.Nullable(Of Short)) As Integer
            Return Me.Update(Original_CHTIT_CH_CODE_FK_PK, Original_CHTIT_CDF_TIT_CODE_FK_PK, CHTIT_NUMORD, Original_CHTIT_CH_CODE_FK_PK, Original_CHTIT_CDF_TIT_CODE_FK_PK, Original_CHTIT_NUMORD)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class FTR_FICHETRANSPARENCETableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "FTR_FICHETRANSPARENCE"
            tableMapping.ColumnMappings.Add("FTR_CODE_SQ_PK", "FTR_CODE_SQ_PK")
            tableMapping.ColumnMappings.Add("FTR_TITRE", "FTR_TITRE")
            tableMapping.ColumnMappings.Add("FTR_DATE_REDACTION", "FTR_DATE_REDACTION")
            tableMapping.ColumnMappings.Add("FTR_TEXTE", "FTR_TEXTE")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [THERIAQUE].[FTR_FICHETRANSPARENCE] WHERE (([FTR_CODE_SQ_PK] = @Origi"& _ 
                "nal_FTR_CODE_SQ_PK) AND ([FTR_TITRE] = @Original_FTR_TITRE) AND ([FTR_DATE_REDAC"& _ 
                "TION] = @Original_FTR_DATE_REDACTION))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FTR_CODE_SQ_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FTR_CODE_SQ_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FTR_TITRE", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FTR_TITRE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FTR_DATE_REDACTION", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FTR_DATE_REDACTION", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [THERIAQUE].[FTR_FICHETRANSPARENCE] ([FTR_CODE_SQ_PK], [FTR_TITRE], ["& _ 
                "FTR_DATE_REDACTION], [FTR_TEXTE]) VALUES (@FTR_CODE_SQ_PK, @FTR_TITRE, @FTR_DATE"& _ 
                "_REDACTION, @FTR_TEXTE);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT FTR_CODE_SQ_PK, FTR_TITRE, FTR_DATE_REDACTION, "& _ 
                "FTR_TEXTE FROM THERIAQUE.FTR_FICHETRANSPARENCE WHERE (FTR_CODE_SQ_PK = @FTR_CODE"& _ 
                "_SQ_PK)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FTR_CODE_SQ_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FTR_CODE_SQ_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FTR_TITRE", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FTR_TITRE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FTR_DATE_REDACTION", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FTR_DATE_REDACTION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FTR_TEXTE", Global.System.Data.SqlDbType.Text, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FTR_TEXTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [THERIAQUE].[FTR_FICHETRANSPARENCE] SET [FTR_CODE_SQ_PK] = @FTR_CODE_SQ_PK"& _ 
                ", [FTR_TITRE] = @FTR_TITRE, [FTR_DATE_REDACTION] = @FTR_DATE_REDACTION, [FTR_TEX"& _ 
                "TE] = @FTR_TEXTE WHERE (([FTR_CODE_SQ_PK] = @Original_FTR_CODE_SQ_PK) AND ([FTR_"& _ 
                "TITRE] = @Original_FTR_TITRE) AND ([FTR_DATE_REDACTION] = @Original_FTR_DATE_RED"& _ 
                "ACTION));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT FTR_CODE_SQ_PK, FTR_TITRE, FTR_DATE_REDACTION, FTR_TEXTE FROM "& _ 
                "THERIAQUE.FTR_FICHETRANSPARENCE WHERE (FTR_CODE_SQ_PK = @FTR_CODE_SQ_PK)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FTR_CODE_SQ_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FTR_CODE_SQ_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FTR_TITRE", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FTR_TITRE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FTR_DATE_REDACTION", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FTR_DATE_REDACTION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FTR_TEXTE", Global.System.Data.SqlDbType.Text, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FTR_TEXTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FTR_CODE_SQ_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FTR_CODE_SQ_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FTR_TITRE", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FTR_TITRE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FTR_DATE_REDACTION", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FTR_DATE_REDACTION", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Theriaque.My.MySettings.Default.ConnectionString2
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT FTR_CODE_SQ_PK, FTR_TITRE, FTR_DATE_REDACTION, FTR_TEXTE FROM THERIAQUE.FT"& _ 
                "R_FICHETRANSPARENCE"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT FTR_CODE_SQ_PK, FTR_TITRE, FTR_DATE_REDACTION, FTR_TEXTE FROM THERIAQUE.FT"& _ 
                "R_FICHETRANSPARENCE"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE FTR_CODE_SQ_PK = @FTR_CODE_SQ_PK"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FTR_CODE_SQ_PK", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "FTR_CODE_SQ_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsTheriaque_CriteresChoix.FTR_FICHETRANSPARENCEDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsTheriaque_CriteresChoix.FTR_FICHETRANSPARENCEDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsTheriaque_CriteresChoix.FTR_FICHETRANSPARENCEDataTable = New dsTheriaque_CriteresChoix.FTR_FICHETRANSPARENCEDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByCode(ByVal dataTable As dsTheriaque_CriteresChoix.FTR_FICHETRANSPARENCEDataTable, ByVal FTR_CODE_SQ_PK As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(FTR_CODE_SQ_PK,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByCode(ByVal FTR_CODE_SQ_PK As Integer) As dsTheriaque_CriteresChoix.FTR_FICHETRANSPARENCEDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(FTR_CODE_SQ_PK,Integer)
            Dim dataTable As dsTheriaque_CriteresChoix.FTR_FICHETRANSPARENCEDataTable = New dsTheriaque_CriteresChoix.FTR_FICHETRANSPARENCEDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsTheriaque_CriteresChoix.FTR_FICHETRANSPARENCEDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsTheriaque_CriteresChoix) As Integer
            Return Me.Adapter.Update(dataSet, "FTR_FICHETRANSPARENCE")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_FTR_CODE_SQ_PK As Integer, ByVal Original_FTR_TITRE As String, ByVal Original_FTR_DATE_REDACTION As Date) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_FTR_CODE_SQ_PK,Integer)
            If (Original_FTR_TITRE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_FTR_TITRE")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_FTR_TITRE,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_FTR_DATE_REDACTION,Date)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal FTR_CODE_SQ_PK As Integer, ByVal FTR_TITRE As String, ByVal FTR_DATE_REDACTION As Date, ByVal FTR_TEXTE As String) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(FTR_CODE_SQ_PK,Integer)
            If (FTR_TITRE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("FTR_TITRE")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(FTR_TITRE,String)
            End If
            Me.Adapter.InsertCommand.Parameters(2).Value = CType(FTR_DATE_REDACTION,Date)
            If (FTR_TEXTE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("FTR_TEXTE")
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(FTR_TEXTE,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal FTR_CODE_SQ_PK As Integer, ByVal FTR_TITRE As String, ByVal FTR_DATE_REDACTION As Date, ByVal FTR_TEXTE As String, ByVal Original_FTR_CODE_SQ_PK As Integer, ByVal Original_FTR_TITRE As String, ByVal Original_FTR_DATE_REDACTION As Date) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(FTR_CODE_SQ_PK,Integer)
            If (FTR_TITRE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("FTR_TITRE")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(FTR_TITRE,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(FTR_DATE_REDACTION,Date)
            If (FTR_TEXTE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("FTR_TEXTE")
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(FTR_TEXTE,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Original_FTR_CODE_SQ_PK,Integer)
            If (Original_FTR_TITRE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_FTR_TITRE")
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Original_FTR_TITRE,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Original_FTR_DATE_REDACTION,Date)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal FTR_TITRE As String, ByVal FTR_DATE_REDACTION As Date, ByVal FTR_TEXTE As String, ByVal Original_FTR_CODE_SQ_PK As Integer, ByVal Original_FTR_TITRE As String, ByVal Original_FTR_DATE_REDACTION As Date) As Integer
            Return Me.Update(Original_FTR_CODE_SQ_PK, FTR_TITRE, FTR_DATE_REDACTION, FTR_TEXTE, Original_FTR_CODE_SQ_PK, Original_FTR_TITRE, Original_FTR_DATE_REDACTION)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class FTH_FICHEINFOTHERAPEUTIQUETableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "FTH_FICHEINFOTHERAPEUTIQUE"
            tableMapping.ColumnMappings.Add("FTH_CODE_SQ_PK", "FTH_CODE_SQ_PK")
            tableMapping.ColumnMappings.Add("FTH_TITRE", "FTH_TITRE")
            tableMapping.ColumnMappings.Add("FTH_DATE_JO", "FTH_DATE_JO")
            tableMapping.ColumnMappings.Add("FTH_TEXTE", "FTH_TEXTE")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [THERIAQUE].[FTH_FICHEINFOTHERAPEUTIQUE] WHERE (([FTH_CODE_SQ_PK] = @"& _ 
                "Original_FTH_CODE_SQ_PK) AND ([FTH_TITRE] = @Original_FTH_TITRE) AND ([FTH_DATE_"& _ 
                "JO] = @Original_FTH_DATE_JO))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FTH_CODE_SQ_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FTH_CODE_SQ_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FTH_TITRE", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FTH_TITRE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FTH_DATE_JO", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FTH_DATE_JO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [THERIAQUE].[FTH_FICHEINFOTHERAPEUTIQUE] ([FTH_CODE_SQ_PK], [FTH_TITR"& _ 
                "E], [FTH_DATE_JO], [FTH_TEXTE]) VALUES (@FTH_CODE_SQ_PK, @FTH_TITRE, @FTH_DATE_J"& _ 
                "O, @FTH_TEXTE);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT FTH_CODE_SQ_PK, FTH_TITRE, FTH_DATE_JO, FTH_TEXTE FROM T"& _ 
                "HERIAQUE.FTH_FICHEINFOTHERAPEUTIQUE WHERE (FTH_CODE_SQ_PK = @FTH_CODE_SQ_PK)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FTH_CODE_SQ_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FTH_CODE_SQ_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FTH_TITRE", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FTH_TITRE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FTH_DATE_JO", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FTH_DATE_JO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FTH_TEXTE", Global.System.Data.SqlDbType.Text, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FTH_TEXTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [THERIAQUE].[FTH_FICHEINFOTHERAPEUTIQUE] SET [FTH_CODE_SQ_PK] = @FTH_CODE_"& _ 
                "SQ_PK, [FTH_TITRE] = @FTH_TITRE, [FTH_DATE_JO] = @FTH_DATE_JO, [FTH_TEXTE] = @FT"& _ 
                "H_TEXTE WHERE (([FTH_CODE_SQ_PK] = @Original_FTH_CODE_SQ_PK) AND ([FTH_TITRE] = "& _ 
                "@Original_FTH_TITRE) AND ([FTH_DATE_JO] = @Original_FTH_DATE_JO));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT FTH_C"& _ 
                "ODE_SQ_PK, FTH_TITRE, FTH_DATE_JO, FTH_TEXTE FROM THERIAQUE.FTH_FICHEINFOTHERAPE"& _ 
                "UTIQUE WHERE (FTH_CODE_SQ_PK = @FTH_CODE_SQ_PK)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FTH_CODE_SQ_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FTH_CODE_SQ_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FTH_TITRE", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FTH_TITRE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FTH_DATE_JO", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FTH_DATE_JO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FTH_TEXTE", Global.System.Data.SqlDbType.Text, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FTH_TEXTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FTH_CODE_SQ_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FTH_CODE_SQ_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FTH_TITRE", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FTH_TITRE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FTH_DATE_JO", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FTH_DATE_JO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Theriaque.My.MySettings.Default.ConnectionString2
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT FTH_CODE_SQ_PK, FTH_TITRE, FTH_DATE_JO, FTH_TEXTE FROM THERIAQUE.FTH_FICHE"& _ 
                "INFOTHERAPEUTIQUE"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT FTH_CODE_SQ_PK, FTH_TITRE, FTH_DATE_JO, FTH_TEXTE FROM THERIAQUE.FTH_FICHE"& _ 
                "INFOTHERAPEUTIQUE"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE FTH_CODE_SQ_PK = @FTH_CODE_SQ_PK"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FTH_CODE_SQ_PK", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "FTH_CODE_SQ_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsTheriaque_CriteresChoix.FTH_FICHEINFOTHERAPEUTIQUEDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsTheriaque_CriteresChoix.FTH_FICHEINFOTHERAPEUTIQUEDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsTheriaque_CriteresChoix.FTH_FICHEINFOTHERAPEUTIQUEDataTable = New dsTheriaque_CriteresChoix.FTH_FICHEINFOTHERAPEUTIQUEDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByCode(ByVal dataTable As dsTheriaque_CriteresChoix.FTH_FICHEINFOTHERAPEUTIQUEDataTable, ByVal FTH_CODE_SQ_PK As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(FTH_CODE_SQ_PK,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByCode(ByVal FTH_CODE_SQ_PK As Integer) As dsTheriaque_CriteresChoix.FTH_FICHEINFOTHERAPEUTIQUEDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(FTH_CODE_SQ_PK,Integer)
            Dim dataTable As dsTheriaque_CriteresChoix.FTH_FICHEINFOTHERAPEUTIQUEDataTable = New dsTheriaque_CriteresChoix.FTH_FICHEINFOTHERAPEUTIQUEDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsTheriaque_CriteresChoix.FTH_FICHEINFOTHERAPEUTIQUEDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsTheriaque_CriteresChoix) As Integer
            Return Me.Adapter.Update(dataSet, "FTH_FICHEINFOTHERAPEUTIQUE")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_FTH_CODE_SQ_PK As Integer, ByVal Original_FTH_TITRE As String, ByVal Original_FTH_DATE_JO As Date) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_FTH_CODE_SQ_PK,Integer)
            If (Original_FTH_TITRE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_FTH_TITRE")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_FTH_TITRE,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_FTH_DATE_JO,Date)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal FTH_CODE_SQ_PK As Integer, ByVal FTH_TITRE As String, ByVal FTH_DATE_JO As Date, ByVal FTH_TEXTE As String) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(FTH_CODE_SQ_PK,Integer)
            If (FTH_TITRE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("FTH_TITRE")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(FTH_TITRE,String)
            End If
            Me.Adapter.InsertCommand.Parameters(2).Value = CType(FTH_DATE_JO,Date)
            If (FTH_TEXTE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("FTH_TEXTE")
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(FTH_TEXTE,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal FTH_CODE_SQ_PK As Integer, ByVal FTH_TITRE As String, ByVal FTH_DATE_JO As Date, ByVal FTH_TEXTE As String, ByVal Original_FTH_CODE_SQ_PK As Integer, ByVal Original_FTH_TITRE As String, ByVal Original_FTH_DATE_JO As Date) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(FTH_CODE_SQ_PK,Integer)
            If (FTH_TITRE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("FTH_TITRE")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(FTH_TITRE,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(FTH_DATE_JO,Date)
            If (FTH_TEXTE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("FTH_TEXTE")
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(FTH_TEXTE,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Original_FTH_CODE_SQ_PK,Integer)
            If (Original_FTH_TITRE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_FTH_TITRE")
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Original_FTH_TITRE,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Original_FTH_DATE_JO,Date)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal FTH_TITRE As String, ByVal FTH_DATE_JO As Date, ByVal FTH_TEXTE As String, ByVal Original_FTH_CODE_SQ_PK As Integer, ByVal Original_FTH_TITRE As String, ByVal Original_FTH_DATE_JO As Date) As Integer
            Return Me.Update(Original_FTH_CODE_SQ_PK, FTH_TITRE, FTH_DATE_JO, FTH_TEXTE, Original_FTH_CODE_SQ_PK, Original_FTH_TITRE, Original_FTH_DATE_JO)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class RMOTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "RMO"
            tableMapping.ColumnMappings.Add("RMO_CODE_PK", "RMO_CODE_PK")
            tableMapping.ColumnMappings.Add("RMO_TITRE1", "RMO_TITRE1")
            tableMapping.ColumnMappings.Add("RMO_TITRE2", "RMO_TITRE2")
            tableMapping.ColumnMappings.Add("RMO_TEXTE", "RMO_TEXTE")
            tableMapping.ColumnMappings.Add("RMO_DATECR", "RMO_DATECR")
            tableMapping.ColumnMappings.Add("RMO_DATEJO", "RMO_DATEJO")
            tableMapping.ColumnMappings.Add("RMO_DATEMJ", "RMO_DATEMJ")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [THERIAQUE].[RMO] WHERE (([RMO_CODE_PK] = @Original_RMO_CODE_PK) AND "& _ 
                "([RMO_TITRE1] = @Original_RMO_TITRE1) AND ((@IsNull_RMO_TITRE2 = 1 AND [RMO_TITR"& _ 
                "E2] IS NULL) OR ([RMO_TITRE2] = @Original_RMO_TITRE2)) AND ([RMO_DATECR] = @Orig"& _ 
                "inal_RMO_DATECR) AND ([RMO_DATEJO] = @Original_RMO_DATEJO) AND ((@IsNull_RMO_DAT"& _ 
                "EMJ = 1 AND [RMO_DATEMJ] IS NULL) OR ([RMO_DATEMJ] = @Original_RMO_DATEMJ)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RMO_CODE_PK", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RMO_CODE_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RMO_TITRE1", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RMO_TITRE1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RMO_TITRE2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RMO_TITRE2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RMO_TITRE2", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RMO_TITRE2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RMO_DATECR", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RMO_DATECR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RMO_DATEJO", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RMO_DATEJO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RMO_DATEMJ", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RMO_DATEMJ", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RMO_DATEMJ", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RMO_DATEMJ", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [THERIAQUE].[RMO] ([RMO_CODE_PK], [RMO_TITRE1], [RMO_TITRE2], [RMO_TE"& _ 
                "XTE], [RMO_DATECR], [RMO_DATEJO], [RMO_DATEMJ]) VALUES (@RMO_CODE_PK, @RMO_TITRE"& _ 
                "1, @RMO_TITRE2, @RMO_TEXTE, @RMO_DATECR, @RMO_DATEJO, @RMO_DATEMJ);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT RMO_"& _ 
                "CODE_PK, RMO_TITRE1, RMO_TITRE2, RMO_TEXTE, RMO_DATECR, RMO_DATEJO, RMO_DATEMJ F"& _ 
                "ROM THERIAQUE.RMO WHERE (RMO_CODE_PK = @RMO_CODE_PK)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RMO_CODE_PK", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RMO_CODE_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RMO_TITRE1", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RMO_TITRE1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RMO_TITRE2", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RMO_TITRE2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RMO_TEXTE", Global.System.Data.SqlDbType.Text, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RMO_TEXTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RMO_DATECR", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RMO_DATECR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RMO_DATEJO", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RMO_DATEJO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RMO_DATEMJ", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RMO_DATEMJ", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [THERIAQUE].[RMO] SET [RMO_CODE_PK] = @RMO_CODE_PK, [RMO_TITRE1] = @RMO_TI"& _ 
                "TRE1, [RMO_TITRE2] = @RMO_TITRE2, [RMO_TEXTE] = @RMO_TEXTE, [RMO_DATECR] = @RMO_"& _ 
                "DATECR, [RMO_DATEJO] = @RMO_DATEJO, [RMO_DATEMJ] = @RMO_DATEMJ WHERE (([RMO_CODE"& _ 
                "_PK] = @Original_RMO_CODE_PK) AND ([RMO_TITRE1] = @Original_RMO_TITRE1) AND ((@I"& _ 
                "sNull_RMO_TITRE2 = 1 AND [RMO_TITRE2] IS NULL) OR ([RMO_TITRE2] = @Original_RMO_"& _ 
                "TITRE2)) AND ([RMO_DATECR] = @Original_RMO_DATECR) AND ([RMO_DATEJO] = @Original"& _ 
                "_RMO_DATEJO) AND ((@IsNull_RMO_DATEMJ = 1 AND [RMO_DATEMJ] IS NULL) OR ([RMO_DAT"& _ 
                "EMJ] = @Original_RMO_DATEMJ)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT RMO_CODE_PK, RMO_TITRE1, RMO_TITRE2, RMO"& _ 
                "_TEXTE, RMO_DATECR, RMO_DATEJO, RMO_DATEMJ FROM THERIAQUE.RMO WHERE (RMO_CODE_PK"& _ 
                " = @RMO_CODE_PK)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RMO_CODE_PK", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RMO_CODE_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RMO_TITRE1", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RMO_TITRE1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RMO_TITRE2", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RMO_TITRE2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RMO_TEXTE", Global.System.Data.SqlDbType.Text, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RMO_TEXTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RMO_DATECR", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RMO_DATECR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RMO_DATEJO", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RMO_DATEJO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RMO_DATEMJ", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RMO_DATEMJ", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RMO_CODE_PK", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RMO_CODE_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RMO_TITRE1", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RMO_TITRE1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RMO_TITRE2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RMO_TITRE2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RMO_TITRE2", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RMO_TITRE2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RMO_DATECR", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RMO_DATECR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RMO_DATEJO", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RMO_DATEJO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RMO_DATEMJ", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RMO_DATEMJ", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RMO_DATEMJ", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RMO_DATEMJ", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Theriaque.My.MySettings.Default.ConnectionString2
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT RMO_CODE_PK, RMO_TITRE1, RMO_TITRE2, RMO_TEXTE, RMO_DATECR, RMO_DATEJO, RM"& _ 
                "O_DATEMJ FROM THERIAQUE.RMO"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT RMO_CODE_PK, RMO_TITRE1, RMO_TITRE2, RMO_TEXTE, RMO_DATECR, RMO_DATEJO, RM"& _ 
                "O_DATEMJ FROM THERIAQUE.RMO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE RMO_CODE_PK = @RMO_CODE_PK"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RMO_CODE_PK", Global.System.Data.SqlDbType.TinyInt, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "RMO_CODE_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsTheriaque_CriteresChoix.RMODataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsTheriaque_CriteresChoix.RMODataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsTheriaque_CriteresChoix.RMODataTable = New dsTheriaque_CriteresChoix.RMODataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByCode(ByVal dataTable As dsTheriaque_CriteresChoix.RMODataTable, ByVal RMO_CODE_PK As Byte) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(RMO_CODE_PK,Byte)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByCode(ByVal RMO_CODE_PK As Byte) As dsTheriaque_CriteresChoix.RMODataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(RMO_CODE_PK,Byte)
            Dim dataTable As dsTheriaque_CriteresChoix.RMODataTable = New dsTheriaque_CriteresChoix.RMODataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsTheriaque_CriteresChoix.RMODataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsTheriaque_CriteresChoix) As Integer
            Return Me.Adapter.Update(dataSet, "RMO")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_RMO_CODE_PK As Byte, ByVal Original_RMO_TITRE1 As String, ByVal Original_RMO_TITRE2 As String, ByVal Original_RMO_DATECR As Date, ByVal Original_RMO_DATEJO As Date, ByVal Original_RMO_DATEMJ As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_RMO_CODE_PK,Byte)
            If (Original_RMO_TITRE1 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_RMO_TITRE1")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_RMO_TITRE1,String)
            End If
            If (Original_RMO_TITRE2 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_RMO_TITRE2,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_RMO_DATECR,Date)
            Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_RMO_DATEJO,Date)
            If (Original_RMO_DATEMJ.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(Original_RMO_DATEMJ.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal RMO_CODE_PK As Byte, ByVal RMO_TITRE1 As String, ByVal RMO_TITRE2 As String, ByVal RMO_TEXTE As String, ByVal RMO_DATECR As Date, ByVal RMO_DATEJO As Date, ByVal RMO_DATEMJ As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(RMO_CODE_PK,Byte)
            If (RMO_TITRE1 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("RMO_TITRE1")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(RMO_TITRE1,String)
            End If
            If (RMO_TITRE2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(RMO_TITRE2,String)
            End If
            If (RMO_TEXTE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("RMO_TEXTE")
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(RMO_TEXTE,String)
            End If
            Me.Adapter.InsertCommand.Parameters(4).Value = CType(RMO_DATECR,Date)
            Me.Adapter.InsertCommand.Parameters(5).Value = CType(RMO_DATEJO,Date)
            If (RMO_DATEMJ.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(RMO_DATEMJ.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal RMO_CODE_PK As Byte, ByVal RMO_TITRE1 As String, ByVal RMO_TITRE2 As String, ByVal RMO_TEXTE As String, ByVal RMO_DATECR As Date, ByVal RMO_DATEJO As Date, ByVal RMO_DATEMJ As Global.System.Nullable(Of Date), ByVal Original_RMO_CODE_PK As Byte, ByVal Original_RMO_TITRE1 As String, ByVal Original_RMO_TITRE2 As String, ByVal Original_RMO_DATECR As Date, ByVal Original_RMO_DATEJO As Date, ByVal Original_RMO_DATEMJ As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(RMO_CODE_PK,Byte)
            If (RMO_TITRE1 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("RMO_TITRE1")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(RMO_TITRE1,String)
            End If
            If (RMO_TITRE2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(RMO_TITRE2,String)
            End If
            If (RMO_TEXTE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("RMO_TEXTE")
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(RMO_TEXTE,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(4).Value = CType(RMO_DATECR,Date)
            Me.Adapter.UpdateCommand.Parameters(5).Value = CType(RMO_DATEJO,Date)
            If (RMO_DATEMJ.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(RMO_DATEMJ.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Original_RMO_CODE_PK,Byte)
            If (Original_RMO_TITRE1 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_RMO_TITRE1")
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Original_RMO_TITRE1,String)
            End If
            If (Original_RMO_TITRE2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(Original_RMO_TITRE2,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(11).Value = CType(Original_RMO_DATECR,Date)
            Me.Adapter.UpdateCommand.Parameters(12).Value = CType(Original_RMO_DATEJO,Date)
            If (Original_RMO_DATEMJ.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(Original_RMO_DATEMJ.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal RMO_TITRE1 As String, ByVal RMO_TITRE2 As String, ByVal RMO_TEXTE As String, ByVal RMO_DATECR As Date, ByVal RMO_DATEJO As Date, ByVal RMO_DATEMJ As Global.System.Nullable(Of Date), ByVal Original_RMO_CODE_PK As Byte, ByVal Original_RMO_TITRE1 As String, ByVal Original_RMO_TITRE2 As String, ByVal Original_RMO_DATECR As Date, ByVal Original_RMO_DATEJO As Date, ByVal Original_RMO_DATEMJ As Global.System.Nullable(Of Date)) As Integer
            Return Me.Update(Original_RMO_CODE_PK, RMO_TITRE1, RMO_TITRE2, RMO_TEXTE, RMO_DATECR, RMO_DATEJO, RMO_DATEMJ, Original_RMO_CODE_PK, Original_RMO_TITRE1, Original_RMO_TITRE2, Original_RMO_DATECR, Original_RMO_DATEJO, Original_RMO_DATEMJ)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class CLRMO_CLASSE_RMOTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "CLRMO_CLASSE_RMO"
            tableMapping.ColumnMappings.Add("CLRMO_RMO_CODE_FK_PK", "CLRMO_RMO_CODE_FK_PK")
            tableMapping.ColumnMappings.Add("CLRMO_CL_CODE_PK", "CLRMO_CL_CODE_PK")
            tableMapping.ColumnMappings.Add("CLRMO_NOM", "CLRMO_NOM")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [THERIAQUE].[CLRMO_CLASSE_RMO] WHERE (([CLRMO_RMO_CODE_FK_PK] = @Orig"& _ 
                "inal_CLRMO_RMO_CODE_FK_PK) AND ([CLRMO_CL_CODE_PK] = @Original_CLRMO_CL_CODE_PK)"& _ 
                " AND ([CLRMO_NOM] = @Original_CLRMO_NOM))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLRMO_RMO_CODE_FK_PK", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLRMO_RMO_CODE_FK_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLRMO_CL_CODE_PK", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLRMO_CL_CODE_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLRMO_NOM", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLRMO_NOM", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [THERIAQUE].[CLRMO_CLASSE_RMO] ([CLRMO_RMO_CODE_FK_PK], [CLRMO_CL_COD"& _ 
                "E_PK], [CLRMO_NOM]) VALUES (@CLRMO_RMO_CODE_FK_PK, @CLRMO_CL_CODE_PK, @CLRMO_NOM"& _ 
                ");"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT CLRMO_RMO_CODE_FK_PK, CLRMO_CL_CODE_PK, CLRMO_NOM FROM THERIAQUE.CLRM"& _ 
                "O_CLASSE_RMO WHERE (CLRMO_CL_CODE_PK = @CLRMO_CL_CODE_PK) AND (CLRMO_RMO_CODE_FK"& _ 
                "_PK = @CLRMO_RMO_CODE_FK_PK)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLRMO_RMO_CODE_FK_PK", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLRMO_RMO_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLRMO_CL_CODE_PK", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLRMO_CL_CODE_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLRMO_NOM", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLRMO_NOM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [THERIAQUE].[CLRMO_CLASSE_RMO] SET [CLRMO_RMO_CODE_FK_PK] = @CLRMO_RMO_COD"& _ 
                "E_FK_PK, [CLRMO_CL_CODE_PK] = @CLRMO_CL_CODE_PK, [CLRMO_NOM] = @CLRMO_NOM WHERE "& _ 
                "(([CLRMO_RMO_CODE_FK_PK] = @Original_CLRMO_RMO_CODE_FK_PK) AND ([CLRMO_CL_CODE_P"& _ 
                "K] = @Original_CLRMO_CL_CODE_PK) AND ([CLRMO_NOM] = @Original_CLRMO_NOM));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELE"& _ 
                "CT CLRMO_RMO_CODE_FK_PK, CLRMO_CL_CODE_PK, CLRMO_NOM FROM THERIAQUE.CLRMO_CLASSE"& _ 
                "_RMO WHERE (CLRMO_CL_CODE_PK = @CLRMO_CL_CODE_PK) AND (CLRMO_RMO_CODE_FK_PK = @C"& _ 
                "LRMO_RMO_CODE_FK_PK)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLRMO_RMO_CODE_FK_PK", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLRMO_RMO_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLRMO_CL_CODE_PK", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLRMO_CL_CODE_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLRMO_NOM", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLRMO_NOM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLRMO_RMO_CODE_FK_PK", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLRMO_RMO_CODE_FK_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLRMO_CL_CODE_PK", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLRMO_CL_CODE_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLRMO_NOM", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLRMO_NOM", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Theriaque.My.MySettings.Default.ConnectionString2
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT CLRMO_RMO_CODE_FK_PK, CLRMO_CL_CODE_PK, CLRMO_NOM FROM THERIAQUE.CLRMO_CLA"& _ 
                "SSE_RMO"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT CLRMO_RMO_CODE_FK_PK, CLRMO_CL_CODE_PK, CLRMO_NOM FROM THERIAQUE.CLRMO_CLA"& _ 
                "SSE_RMO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE CLRMO_RMO_CODE_FK_PK = @CLRMO_RMO_CODE_FK_PK"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLRMO_RMO_CODE_FK_PK", Global.System.Data.SqlDbType.TinyInt, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "CLRMO_RMO_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsTheriaque_CriteresChoix.CLRMO_CLASSE_RMODataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsTheriaque_CriteresChoix.CLRMO_CLASSE_RMODataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsTheriaque_CriteresChoix.CLRMO_CLASSE_RMODataTable = New dsTheriaque_CriteresChoix.CLRMO_CLASSE_RMODataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByCode(ByVal dataTable As dsTheriaque_CriteresChoix.CLRMO_CLASSE_RMODataTable, ByVal CLRMO_RMO_CODE_FK_PK As Byte) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(CLRMO_RMO_CODE_FK_PK,Byte)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByCode(ByVal CLRMO_RMO_CODE_FK_PK As Byte) As dsTheriaque_CriteresChoix.CLRMO_CLASSE_RMODataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(CLRMO_RMO_CODE_FK_PK,Byte)
            Dim dataTable As dsTheriaque_CriteresChoix.CLRMO_CLASSE_RMODataTable = New dsTheriaque_CriteresChoix.CLRMO_CLASSE_RMODataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsTheriaque_CriteresChoix.CLRMO_CLASSE_RMODataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsTheriaque_CriteresChoix) As Integer
            Return Me.Adapter.Update(dataSet, "CLRMO_CLASSE_RMO")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_CLRMO_RMO_CODE_FK_PK As Byte, ByVal Original_CLRMO_CL_CODE_PK As Byte, ByVal Original_CLRMO_NOM As String) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_CLRMO_RMO_CODE_FK_PK,Byte)
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_CLRMO_CL_CODE_PK,Byte)
            If (Original_CLRMO_NOM Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_CLRMO_NOM")
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_CLRMO_NOM,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal CLRMO_RMO_CODE_FK_PK As Byte, ByVal CLRMO_CL_CODE_PK As Byte, ByVal CLRMO_NOM As String) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(CLRMO_RMO_CODE_FK_PK,Byte)
            Me.Adapter.InsertCommand.Parameters(1).Value = CType(CLRMO_CL_CODE_PK,Byte)
            If (CLRMO_NOM Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CLRMO_NOM")
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(CLRMO_NOM,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal CLRMO_RMO_CODE_FK_PK As Byte, ByVal CLRMO_CL_CODE_PK As Byte, ByVal CLRMO_NOM As String, ByVal Original_CLRMO_RMO_CODE_FK_PK As Byte, ByVal Original_CLRMO_CL_CODE_PK As Byte, ByVal Original_CLRMO_NOM As String) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(CLRMO_RMO_CODE_FK_PK,Byte)
            Me.Adapter.UpdateCommand.Parameters(1).Value = CType(CLRMO_CL_CODE_PK,Byte)
            If (CLRMO_NOM Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CLRMO_NOM")
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(CLRMO_NOM,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(3).Value = CType(Original_CLRMO_RMO_CODE_FK_PK,Byte)
            Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Original_CLRMO_CL_CODE_PK,Byte)
            If (Original_CLRMO_NOM Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_CLRMO_NOM")
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Original_CLRMO_NOM,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal CLRMO_NOM As String, ByVal Original_CLRMO_RMO_CODE_FK_PK As Byte, ByVal Original_CLRMO_CL_CODE_PK As Byte, ByVal Original_CLRMO_NOM As String) As Integer
            Return Me.Update(Original_CLRMO_RMO_CODE_FK_PK, Original_CLRMO_CL_CODE_PK, CLRMO_NOM, Original_CLRMO_RMO_CODE_FK_PK, Original_CLRMO_CL_CODE_PK, Original_CLRMO_NOM)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class SPSMR_SERVICE_MEDICAL_RENDUTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "SPSMR_SERVICE_MEDICAL_RENDU"
            tableMapping.ColumnMappings.Add("SPSMR_SP_CODE_FK_PK", "SPSMR_SP_CODE_FK_PK")
            tableMapping.ColumnMappings.Add("SPSMR_CDF_SMR_CODE_FK_PK", "SPSMR_CDF_SMR_CODE_FK_PK")
            tableMapping.ColumnMappings.Add("SPSMR_NUM_ORD_PK", "SPSMR_NUM_ORD_PK")
            tableMapping.ColumnMappings.Add("SPSMR_DATE", "SPSMR_DATE")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [theriaque].[SPSMR_SERVICE_MEDICAL_RENDU] WHERE (([SPSMR_SP_CODE_FK_P"& _ 
                "K] = @Original_SPSMR_SP_CODE_FK_PK) AND ([SPSMR_CDF_SMR_CODE_FK_PK] = @Original_"& _ 
                "SPSMR_CDF_SMR_CODE_FK_PK) AND ([SPSMR_NUM_ORD_PK] = @Original_SPSMR_NUM_ORD_PK) "& _ 
                "AND ((@IsNull_SPSMR_DATE = 1 AND [SPSMR_DATE] IS NULL) OR ([SPSMR_DATE] = @Origi"& _ 
                "nal_SPSMR_DATE)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SPSMR_SP_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SPSMR_SP_CODE_FK_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SPSMR_CDF_SMR_CODE_FK_PK", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SPSMR_CDF_SMR_CODE_FK_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SPSMR_NUM_ORD_PK", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SPSMR_NUM_ORD_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SPSMR_DATE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SPSMR_DATE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SPSMR_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SPSMR_DATE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [theriaque].[SPSMR_SERVICE_MEDICAL_RENDU] ([SPSMR_SP_CODE_FK_PK], [SP"& _ 
                "SMR_CDF_SMR_CODE_FK_PK], [SPSMR_NUM_ORD_PK], [SPSMR_DATE]) VALUES (@SPSMR_SP_COD"& _ 
                "E_FK_PK, @SPSMR_CDF_SMR_CODE_FK_PK, @SPSMR_NUM_ORD_PK, @SPSMR_DATE);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT SPS"& _ 
                "MR_SP_CODE_FK_PK, SPSMR_CDF_SMR_CODE_FK_PK, SPSMR_NUM_ORD_PK, SPSMR_DATE FROM th"& _ 
                "eriaque.SPSMR_SERVICE_MEDICAL_RENDU WHERE (SPSMR_CDF_SMR_CODE_FK_PK = @SPSMR_CDF"& _ 
                "_SMR_CODE_FK_PK) AND (SPSMR_NUM_ORD_PK = @SPSMR_NUM_ORD_PK) AND (SPSMR_SP_CODE_F"& _ 
                "K_PK = @SPSMR_SP_CODE_FK_PK)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SPSMR_SP_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SPSMR_SP_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SPSMR_CDF_SMR_CODE_FK_PK", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SPSMR_CDF_SMR_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SPSMR_NUM_ORD_PK", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SPSMR_NUM_ORD_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SPSMR_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SPSMR_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [theriaque].[SPSMR_SERVICE_MEDICAL_RENDU] SET [SPSMR_SP_CODE_FK_PK] = @SPS"& _ 
                "MR_SP_CODE_FK_PK, [SPSMR_CDF_SMR_CODE_FK_PK] = @SPSMR_CDF_SMR_CODE_FK_PK, [SPSMR"& _ 
                "_NUM_ORD_PK] = @SPSMR_NUM_ORD_PK, [SPSMR_DATE] = @SPSMR_DATE WHERE (([SPSMR_SP_C"& _ 
                "ODE_FK_PK] = @Original_SPSMR_SP_CODE_FK_PK) AND ([SPSMR_CDF_SMR_CODE_FK_PK] = @O"& _ 
                "riginal_SPSMR_CDF_SMR_CODE_FK_PK) AND ([SPSMR_NUM_ORD_PK] = @Original_SPSMR_NUM_"& _ 
                "ORD_PK) AND ((@IsNull_SPSMR_DATE = 1 AND [SPSMR_DATE] IS NULL) OR ([SPSMR_DATE] "& _ 
                "= @Original_SPSMR_DATE)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT SPSMR_SP_CODE_FK_PK, SPSMR_CDF_SMR_CODE_FK_PK"& _ 
                ", SPSMR_NUM_ORD_PK, SPSMR_DATE FROM theriaque.SPSMR_SERVICE_MEDICAL_RENDU WHERE "& _ 
                "(SPSMR_CDF_SMR_CODE_FK_PK = @SPSMR_CDF_SMR_CODE_FK_PK) AND (SPSMR_NUM_ORD_PK = @"& _ 
                "SPSMR_NUM_ORD_PK) AND (SPSMR_SP_CODE_FK_PK = @SPSMR_SP_CODE_FK_PK)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SPSMR_SP_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SPSMR_SP_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SPSMR_CDF_SMR_CODE_FK_PK", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SPSMR_CDF_SMR_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SPSMR_NUM_ORD_PK", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SPSMR_NUM_ORD_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SPSMR_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SPSMR_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SPSMR_SP_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SPSMR_SP_CODE_FK_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SPSMR_CDF_SMR_CODE_FK_PK", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SPSMR_CDF_SMR_CODE_FK_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SPSMR_NUM_ORD_PK", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SPSMR_NUM_ORD_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SPSMR_DATE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SPSMR_DATE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SPSMR_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SPSMR_DATE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Theriaque.My.MySettings.Default.ConnectionString2
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT SPSMR_SP_CODE_FK_PK, SPSMR_CDF_SMR_CODE_FK_PK, SPSMR_NUM_ORD_PK, SPSMR_DAT"& _ 
                "E FROM theriaque.SPSMR_SERVICE_MEDICAL_RENDU"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT SPSMR_SP_CODE_FK_PK, SPSMR_CDF_SMR_CODE_FK_PK, SPSMR_NUM_ORD_PK, SPSMR_DAT"& _ 
                "E FROM theriaque.SPSMR_SERVICE_MEDICAL_RENDU"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"where SPSMR_SP_CODE_FK_PK = @SPSMR"& _ 
                "_SP_CODE_FK_PK"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SPSMR_SP_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "SPSMR_SP_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsTheriaque_CriteresChoix.SPSMR_SERVICE_MEDICAL_RENDUDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsTheriaque_CriteresChoix.SPSMR_SERVICE_MEDICAL_RENDUDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsTheriaque_CriteresChoix.SPSMR_SERVICE_MEDICAL_RENDUDataTable = New dsTheriaque_CriteresChoix.SPSMR_SERVICE_MEDICAL_RENDUDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByCode(ByVal dataTable As dsTheriaque_CriteresChoix.SPSMR_SERVICE_MEDICAL_RENDUDataTable, ByVal SPSMR_SP_CODE_FK_PK As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(SPSMR_SP_CODE_FK_PK,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByCode(ByVal SPSMR_SP_CODE_FK_PK As Integer) As dsTheriaque_CriteresChoix.SPSMR_SERVICE_MEDICAL_RENDUDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(SPSMR_SP_CODE_FK_PK,Integer)
            Dim dataTable As dsTheriaque_CriteresChoix.SPSMR_SERVICE_MEDICAL_RENDUDataTable = New dsTheriaque_CriteresChoix.SPSMR_SERVICE_MEDICAL_RENDUDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsTheriaque_CriteresChoix.SPSMR_SERVICE_MEDICAL_RENDUDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsTheriaque_CriteresChoix) As Integer
            Return Me.Adapter.Update(dataSet, "SPSMR_SERVICE_MEDICAL_RENDU")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_SPSMR_SP_CODE_FK_PK As Integer, ByVal Original_SPSMR_CDF_SMR_CODE_FK_PK As String, ByVal Original_SPSMR_NUM_ORD_PK As Short, ByVal Original_SPSMR_DATE As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_SPSMR_SP_CODE_FK_PK,Integer)
            If (Original_SPSMR_CDF_SMR_CODE_FK_PK Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_SPSMR_CDF_SMR_CODE_FK_PK")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_SPSMR_CDF_SMR_CODE_FK_PK,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_SPSMR_NUM_ORD_PK,Short)
            If (Original_SPSMR_DATE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_SPSMR_DATE.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal SPSMR_SP_CODE_FK_PK As Integer, ByVal SPSMR_CDF_SMR_CODE_FK_PK As String, ByVal SPSMR_NUM_ORD_PK As Short, ByVal SPSMR_DATE As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(SPSMR_SP_CODE_FK_PK,Integer)
            If (SPSMR_CDF_SMR_CODE_FK_PK Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SPSMR_CDF_SMR_CODE_FK_PK")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(SPSMR_CDF_SMR_CODE_FK_PK,String)
            End If
            Me.Adapter.InsertCommand.Parameters(2).Value = CType(SPSMR_NUM_ORD_PK,Short)
            If (SPSMR_DATE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(SPSMR_DATE.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal SPSMR_SP_CODE_FK_PK As Integer, ByVal SPSMR_CDF_SMR_CODE_FK_PK As String, ByVal SPSMR_NUM_ORD_PK As Short, ByVal SPSMR_DATE As Global.System.Nullable(Of Date), ByVal Original_SPSMR_SP_CODE_FK_PK As Integer, ByVal Original_SPSMR_CDF_SMR_CODE_FK_PK As String, ByVal Original_SPSMR_NUM_ORD_PK As Short, ByVal Original_SPSMR_DATE As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(SPSMR_SP_CODE_FK_PK,Integer)
            If (SPSMR_CDF_SMR_CODE_FK_PK Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SPSMR_CDF_SMR_CODE_FK_PK")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(SPSMR_CDF_SMR_CODE_FK_PK,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(SPSMR_NUM_ORD_PK,Short)
            If (SPSMR_DATE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(SPSMR_DATE.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Original_SPSMR_SP_CODE_FK_PK,Integer)
            If (Original_SPSMR_CDF_SMR_CODE_FK_PK Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_SPSMR_CDF_SMR_CODE_FK_PK")
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Original_SPSMR_CDF_SMR_CODE_FK_PK,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Original_SPSMR_NUM_ORD_PK,Short)
            If (Original_SPSMR_DATE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Original_SPSMR_DATE.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal SPSMR_DATE As Global.System.Nullable(Of Date), ByVal Original_SPSMR_SP_CODE_FK_PK As Integer, ByVal Original_SPSMR_CDF_SMR_CODE_FK_PK As String, ByVal Original_SPSMR_NUM_ORD_PK As Short, ByVal Original_SPSMR_DATE As Global.System.Nullable(Of Date)) As Integer
            Return Me.Update(Original_SPSMR_SP_CODE_FK_PK, Original_SPSMR_CDF_SMR_CODE_FK_PK, Original_SPSMR_NUM_ORD_PK, SPSMR_DATE, Original_SPSMR_SP_CODE_FK_PK, Original_SPSMR_CDF_SMR_CODE_FK_PK, Original_SPSMR_NUM_ORD_PK, Original_SPSMR_DATE)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class SPFTH_SPEC_INFOTHERAPEUTIQUETableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "SPFTH_SPEC_INFOTHERAPEUTIQUE"
            tableMapping.ColumnMappings.Add("SPFTH_SP_CODE_FK_PK", "SPFTH_SP_CODE_FK_PK")
            tableMapping.ColumnMappings.Add("SPFTH_FTH_CODE_FK_PK", "SPFTH_FTH_CODE_FK_PK")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [theriaque].[SPFTH_SPEC_INFOTHERAPEUTIQUE] WHERE (([SPFTH_SP_CODE_FK_"& _ 
                "PK] = @Original_SPFTH_SP_CODE_FK_PK) AND ([SPFTH_FTH_CODE_FK_PK] = @Original_SPF"& _ 
                "TH_FTH_CODE_FK_PK))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SPFTH_SP_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SPFTH_SP_CODE_FK_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SPFTH_FTH_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SPFTH_FTH_CODE_FK_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [theriaque].[SPFTH_SPEC_INFOTHERAPEUTIQUE] ([SPFTH_SP_CODE_FK_PK], [S"& _ 
                "PFTH_FTH_CODE_FK_PK]) VALUES (@SPFTH_SP_CODE_FK_PK, @SPFTH_FTH_CODE_FK_PK);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SEL"& _ 
                "ECT SPFTH_SP_CODE_FK_PK, SPFTH_FTH_CODE_FK_PK FROM theriaque.SPFTH_SPEC_INFOTHER"& _ 
                "APEUTIQUE WHERE (SPFTH_FTH_CODE_FK_PK = @SPFTH_FTH_CODE_FK_PK) AND (SPFTH_SP_COD"& _ 
                "E_FK_PK = @SPFTH_SP_CODE_FK_PK)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SPFTH_SP_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SPFTH_SP_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SPFTH_FTH_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SPFTH_FTH_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [theriaque].[SPFTH_SPEC_INFOTHERAPEUTIQUE] SET [SPFTH_SP_CODE_FK_PK] = @SP"& _ 
                "FTH_SP_CODE_FK_PK, [SPFTH_FTH_CODE_FK_PK] = @SPFTH_FTH_CODE_FK_PK WHERE (([SPFTH"& _ 
                "_SP_CODE_FK_PK] = @Original_SPFTH_SP_CODE_FK_PK) AND ([SPFTH_FTH_CODE_FK_PK] = @"& _ 
                "Original_SPFTH_FTH_CODE_FK_PK));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT SPFTH_SP_CODE_FK_PK, SPFTH_FTH_CODE_FK_"& _ 
                "PK FROM theriaque.SPFTH_SPEC_INFOTHERAPEUTIQUE WHERE (SPFTH_FTH_CODE_FK_PK = @SP"& _ 
                "FTH_FTH_CODE_FK_PK) AND (SPFTH_SP_CODE_FK_PK = @SPFTH_SP_CODE_FK_PK)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SPFTH_SP_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SPFTH_SP_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SPFTH_FTH_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SPFTH_FTH_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SPFTH_SP_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SPFTH_SP_CODE_FK_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SPFTH_FTH_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SPFTH_FTH_CODE_FK_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Theriaque.MySettings.Default.ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT SPFTH_SP_CODE_FK_PK, SPFTH_FTH_CODE_FK_PK FROM theriaque.SPFTH_SPEC_INFOTH"& _ 
                "ERAPEUTIQUE"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT SPFTH_SP_CODE_FK_PK, SPFTH_FTH_CODE_FK_PK FROM theriaque.SPFTH_SPEC_INFOTH"& _ 
                "ERAPEUTIQUE"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE SPFTH_FTH_CODE_FK_PK =@SPFTH_FTH_CODE_FK_PK"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SPFTH_FTH_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "SPFTH_FTH_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsTheriaque_CriteresChoix.SPFTH_SPEC_INFOTHERAPEUTIQUEDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsTheriaque_CriteresChoix.SPFTH_SPEC_INFOTHERAPEUTIQUEDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsTheriaque_CriteresChoix.SPFTH_SPEC_INFOTHERAPEUTIQUEDataTable = New dsTheriaque_CriteresChoix.SPFTH_SPEC_INFOTHERAPEUTIQUEDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByCode(ByVal dataTable As dsTheriaque_CriteresChoix.SPFTH_SPEC_INFOTHERAPEUTIQUEDataTable, ByVal SPFTH_FTH_CODE_FK_PK As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(SPFTH_FTH_CODE_FK_PK,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByCode(ByVal SPFTH_FTH_CODE_FK_PK As Integer) As dsTheriaque_CriteresChoix.SPFTH_SPEC_INFOTHERAPEUTIQUEDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(SPFTH_FTH_CODE_FK_PK,Integer)
            Dim dataTable As dsTheriaque_CriteresChoix.SPFTH_SPEC_INFOTHERAPEUTIQUEDataTable = New dsTheriaque_CriteresChoix.SPFTH_SPEC_INFOTHERAPEUTIQUEDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsTheriaque_CriteresChoix.SPFTH_SPEC_INFOTHERAPEUTIQUEDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsTheriaque_CriteresChoix) As Integer
            Return Me.Adapter.Update(dataSet, "SPFTH_SPEC_INFOTHERAPEUTIQUE")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_SPFTH_SP_CODE_FK_PK As Integer, ByVal Original_SPFTH_FTH_CODE_FK_PK As Integer) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_SPFTH_SP_CODE_FK_PK,Integer)
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_SPFTH_FTH_CODE_FK_PK,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal SPFTH_SP_CODE_FK_PK As Integer, ByVal SPFTH_FTH_CODE_FK_PK As Integer) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(SPFTH_SP_CODE_FK_PK,Integer)
            Me.Adapter.InsertCommand.Parameters(1).Value = CType(SPFTH_FTH_CODE_FK_PK,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal SPFTH_SP_CODE_FK_PK As Integer, ByVal SPFTH_FTH_CODE_FK_PK As Integer, ByVal Original_SPFTH_SP_CODE_FK_PK As Integer, ByVal Original_SPFTH_FTH_CODE_FK_PK As Integer) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(SPFTH_SP_CODE_FK_PK,Integer)
            Me.Adapter.UpdateCommand.Parameters(1).Value = CType(SPFTH_FTH_CODE_FK_PK,Integer)
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Original_SPFTH_SP_CODE_FK_PK,Integer)
            Me.Adapter.UpdateCommand.Parameters(3).Value = CType(Original_SPFTH_FTH_CODE_FK_PK,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal Original_SPFTH_SP_CODE_FK_PK As Integer, ByVal Original_SPFTH_FTH_CODE_FK_PK As Integer) As Integer
            Return Me.Update(Original_SPFTH_SP_CODE_FK_PK, Original_SPFTH_FTH_CODE_FK_PK, Original_SPFTH_SP_CODE_FK_PK, Original_SPFTH_FTH_CODE_FK_PK)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class SPCH_SPECIALITE_CHOIXTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "SPCH_SPECIALITE_CHOIX"
            tableMapping.ColumnMappings.Add("SPCH_SP_CODE_FK_PK", "SPCH_SP_CODE_FK_PK")
            tableMapping.ColumnMappings.Add("SPCH_CH_CODE_FK_PK", "SPCH_CH_CODE_FK_PK")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [theriaque].[SPCH_SPECIALITE_CHOIX] WHERE (([SPCH_SP_CODE_FK_PK] = @O"& _ 
                "riginal_SPCH_SP_CODE_FK_PK) AND ([SPCH_CH_CODE_FK_PK] = @Original_SPCH_CH_CODE_F"& _ 
                "K_PK))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SPCH_SP_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SPCH_SP_CODE_FK_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SPCH_CH_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SPCH_CH_CODE_FK_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [theriaque].[SPCH_SPECIALITE_CHOIX] ([SPCH_SP_CODE_FK_PK], [SPCH_CH_C"& _ 
                "ODE_FK_PK]) VALUES (@SPCH_SP_CODE_FK_PK, @SPCH_CH_CODE_FK_PK);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT SPCH_SP_C"& _ 
                "ODE_FK_PK, SPCH_CH_CODE_FK_PK FROM theriaque.SPCH_SPECIALITE_CHOIX WHERE (SPCH_C"& _ 
                "H_CODE_FK_PK = @SPCH_CH_CODE_FK_PK) AND (SPCH_SP_CODE_FK_PK = @SPCH_SP_CODE_FK_P"& _ 
                "K)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SPCH_SP_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SPCH_SP_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SPCH_CH_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SPCH_CH_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [theriaque].[SPCH_SPECIALITE_CHOIX] SET [SPCH_SP_CODE_FK_PK] = @SPCH_SP_CO"& _ 
                "DE_FK_PK, [SPCH_CH_CODE_FK_PK] = @SPCH_CH_CODE_FK_PK WHERE (([SPCH_SP_CODE_FK_PK"& _ 
                "] = @Original_SPCH_SP_CODE_FK_PK) AND ([SPCH_CH_CODE_FK_PK] = @Original_SPCH_CH_"& _ 
                "CODE_FK_PK));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT SPCH_SP_CODE_FK_PK, SPCH_CH_CODE_FK_PK FROM theriaque.SPCH"& _ 
                "_SPECIALITE_CHOIX WHERE (SPCH_CH_CODE_FK_PK = @SPCH_CH_CODE_FK_PK) AND (SPCH_SP_"& _ 
                "CODE_FK_PK = @SPCH_SP_CODE_FK_PK)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SPCH_SP_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SPCH_SP_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SPCH_CH_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SPCH_CH_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SPCH_SP_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SPCH_SP_CODE_FK_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SPCH_CH_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SPCH_CH_CODE_FK_PK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Theriaque.MySettings.Default.ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        theriaque.SPCH_SPECIALITE_CHOIX.*"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            theriaque.SPCH_S"& _ 
                "PECIALITE_CHOIX"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT        theriaque.SPCH_SPECIALITE_CHOIX.*"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            theriaque.SPCH_S"& _ 
                "PECIALITE_CHOIX"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE SPCH_CH_CODE_FK_PK=@SPCH_CH_CODE_FK_PK"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SPCH_CH_CODE_FK_PK", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "SPCH_CH_CODE_FK_PK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsTheriaque_CriteresChoix.SPCH_SPECIALITE_CHOIXDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsTheriaque_CriteresChoix.SPCH_SPECIALITE_CHOIXDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsTheriaque_CriteresChoix.SPCH_SPECIALITE_CHOIXDataTable = New dsTheriaque_CriteresChoix.SPCH_SPECIALITE_CHOIXDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByCode(ByVal dataTable As dsTheriaque_CriteresChoix.SPCH_SPECIALITE_CHOIXDataTable, ByVal SPCH_CH_CODE_FK_PK As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(SPCH_CH_CODE_FK_PK,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByCode(ByVal SPCH_CH_CODE_FK_PK As Integer) As dsTheriaque_CriteresChoix.SPCH_SPECIALITE_CHOIXDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(SPCH_CH_CODE_FK_PK,Integer)
            Dim dataTable As dsTheriaque_CriteresChoix.SPCH_SPECIALITE_CHOIXDataTable = New dsTheriaque_CriteresChoix.SPCH_SPECIALITE_CHOIXDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsTheriaque_CriteresChoix.SPCH_SPECIALITE_CHOIXDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsTheriaque_CriteresChoix) As Integer
            Return Me.Adapter.Update(dataSet, "SPCH_SPECIALITE_CHOIX")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_SPCH_SP_CODE_FK_PK As Integer, ByVal Original_SPCH_CH_CODE_FK_PK As Integer) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_SPCH_SP_CODE_FK_PK,Integer)
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_SPCH_CH_CODE_FK_PK,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal SPCH_SP_CODE_FK_PK As Integer, ByVal SPCH_CH_CODE_FK_PK As Integer) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(SPCH_SP_CODE_FK_PK,Integer)
            Me.Adapter.InsertCommand.Parameters(1).Value = CType(SPCH_CH_CODE_FK_PK,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal SPCH_SP_CODE_FK_PK As Integer, ByVal SPCH_CH_CODE_FK_PK As Integer, ByVal Original_SPCH_SP_CODE_FK_PK As Integer, ByVal Original_SPCH_CH_CODE_FK_PK As Integer) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(SPCH_SP_CODE_FK_PK,Integer)
            Me.Adapter.UpdateCommand.Parameters(1).Value = CType(SPCH_CH_CODE_FK_PK,Integer)
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Original_SPCH_SP_CODE_FK_PK,Integer)
            Me.Adapter.UpdateCommand.Parameters(3).Value = CType(Original_SPCH_CH_CODE_FK_PK,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal Original_SPCH_SP_CODE_FK_PK As Integer, ByVal Original_SPCH_CH_CODE_FK_PK As Integer) As Integer
            Return Me.Update(Original_SPCH_SP_CODE_FK_PK, Original_SPCH_CH_CODE_FK_PK, Original_SPCH_SP_CODE_FK_PK, Original_SPCH_CH_CODE_FK_PK)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class CHSAC_CHOIX_SUBACTIVETableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "CHSAC_CHOIX_SUBACTIVE"
            tableMapping.ColumnMappings.Add("CHSAC_CH_CODE_SQ_PK_FK", "CHSAC_CH_CODE_SQ_PK_FK")
            tableMapping.ColumnMappings.Add("CHSAC_SAC_CODE_SQ_PK_FK", "CHSAC_SAC_CODE_SQ_PK_FK")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [theriaque].[CHSAC_CHOIX_SUBACTIVE] WHERE (([CHSAC_CH_CODE_SQ_PK_FK] "& _ 
                "= @Original_CHSAC_CH_CODE_SQ_PK_FK) AND ([CHSAC_SAC_CODE_SQ_PK_FK] = @Original_C"& _ 
                "HSAC_SAC_CODE_SQ_PK_FK))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CHSAC_CH_CODE_SQ_PK_FK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CHSAC_CH_CODE_SQ_PK_FK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CHSAC_SAC_CODE_SQ_PK_FK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CHSAC_SAC_CODE_SQ_PK_FK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [theriaque].[CHSAC_CHOIX_SUBACTIVE] ([CHSAC_CH_CODE_SQ_PK_FK], [CHSAC"& _ 
                "_SAC_CODE_SQ_PK_FK]) VALUES (@CHSAC_CH_CODE_SQ_PK_FK, @CHSAC_SAC_CODE_SQ_PK_FK);"& _ 
                ""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT CHSAC_CH_CODE_SQ_PK_FK, CHSAC_SAC_CODE_SQ_PK_FK FROM theriaque.CHSAC_CH"& _ 
                "OIX_SUBACTIVE WHERE (CHSAC_CH_CODE_SQ_PK_FK = @CHSAC_CH_CODE_SQ_PK_FK) AND (CHSA"& _ 
                "C_SAC_CODE_SQ_PK_FK = @CHSAC_SAC_CODE_SQ_PK_FK)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CHSAC_CH_CODE_SQ_PK_FK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CHSAC_CH_CODE_SQ_PK_FK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CHSAC_SAC_CODE_SQ_PK_FK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CHSAC_SAC_CODE_SQ_PK_FK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [theriaque].[CHSAC_CHOIX_SUBACTIVE] SET [CHSAC_CH_CODE_SQ_PK_FK] = @CHSAC_"& _ 
                "CH_CODE_SQ_PK_FK, [CHSAC_SAC_CODE_SQ_PK_FK] = @CHSAC_SAC_CODE_SQ_PK_FK WHERE ((["& _ 
                "CHSAC_CH_CODE_SQ_PK_FK] = @Original_CHSAC_CH_CODE_SQ_PK_FK) AND ([CHSAC_SAC_CODE"& _ 
                "_SQ_PK_FK] = @Original_CHSAC_SAC_CODE_SQ_PK_FK));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT CHSAC_CH_CODE_SQ_PK_FK"& _ 
                ", CHSAC_SAC_CODE_SQ_PK_FK FROM theriaque.CHSAC_CHOIX_SUBACTIVE WHERE (CHSAC_CH_C"& _ 
                "ODE_SQ_PK_FK = @CHSAC_CH_CODE_SQ_PK_FK) AND (CHSAC_SAC_CODE_SQ_PK_FK = @CHSAC_SA"& _ 
                "C_CODE_SQ_PK_FK)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CHSAC_CH_CODE_SQ_PK_FK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CHSAC_CH_CODE_SQ_PK_FK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CHSAC_SAC_CODE_SQ_PK_FK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CHSAC_SAC_CODE_SQ_PK_FK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CHSAC_CH_CODE_SQ_PK_FK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CHSAC_CH_CODE_SQ_PK_FK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CHSAC_SAC_CODE_SQ_PK_FK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CHSAC_SAC_CODE_SQ_PK_FK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Theriaque.MySettings.Default.ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT CHSAC_CH_CODE_SQ_PK_FK, CHSAC_SAC_CODE_SQ_PK_FK FROM theriaque.CHSAC_CHOIX"& _ 
                "_SUBACTIVE"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT CHSAC_CH_CODE_SQ_PK_FK, CHSAC_SAC_CODE_SQ_PK_FK "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM theriaque.CHSAC_CHO"& _ 
                "IX_SUBACTIVE"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE CHSAC_CH_CODE_SQ_PK_FK=@CHSAC_CH_CODE_SQ_PK_FK"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CHSAC_CH_CODE_SQ_PK_FK", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "CHSAC_CH_CODE_SQ_PK_FK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsTheriaque_CriteresChoix.CHSAC_CHOIX_SUBACTIVEDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsTheriaque_CriteresChoix.CHSAC_CHOIX_SUBACTIVEDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsTheriaque_CriteresChoix.CHSAC_CHOIX_SUBACTIVEDataTable = New dsTheriaque_CriteresChoix.CHSAC_CHOIX_SUBACTIVEDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByCode(ByVal dataTable As dsTheriaque_CriteresChoix.CHSAC_CHOIX_SUBACTIVEDataTable, ByVal CHSAC_CH_CODE_SQ_PK_FK As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(CHSAC_CH_CODE_SQ_PK_FK,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByCode(ByVal CHSAC_CH_CODE_SQ_PK_FK As Integer) As dsTheriaque_CriteresChoix.CHSAC_CHOIX_SUBACTIVEDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(CHSAC_CH_CODE_SQ_PK_FK,Integer)
            Dim dataTable As dsTheriaque_CriteresChoix.CHSAC_CHOIX_SUBACTIVEDataTable = New dsTheriaque_CriteresChoix.CHSAC_CHOIX_SUBACTIVEDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsTheriaque_CriteresChoix.CHSAC_CHOIX_SUBACTIVEDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsTheriaque_CriteresChoix) As Integer
            Return Me.Adapter.Update(dataSet, "CHSAC_CHOIX_SUBACTIVE")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_CHSAC_CH_CODE_SQ_PK_FK As Integer, ByVal Original_CHSAC_SAC_CODE_SQ_PK_FK As Integer) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_CHSAC_CH_CODE_SQ_PK_FK,Integer)
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_CHSAC_SAC_CODE_SQ_PK_FK,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal CHSAC_CH_CODE_SQ_PK_FK As Integer, ByVal CHSAC_SAC_CODE_SQ_PK_FK As Integer) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(CHSAC_CH_CODE_SQ_PK_FK,Integer)
            Me.Adapter.InsertCommand.Parameters(1).Value = CType(CHSAC_SAC_CODE_SQ_PK_FK,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal CHSAC_CH_CODE_SQ_PK_FK As Integer, ByVal CHSAC_SAC_CODE_SQ_PK_FK As Integer, ByVal Original_CHSAC_CH_CODE_SQ_PK_FK As Integer, ByVal Original_CHSAC_SAC_CODE_SQ_PK_FK As Integer) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(CHSAC_CH_CODE_SQ_PK_FK,Integer)
            Me.Adapter.UpdateCommand.Parameters(1).Value = CType(CHSAC_SAC_CODE_SQ_PK_FK,Integer)
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Original_CHSAC_CH_CODE_SQ_PK_FK,Integer)
            Me.Adapter.UpdateCommand.Parameters(3).Value = CType(Original_CHSAC_SAC_CODE_SQ_PK_FK,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal Original_CHSAC_CH_CODE_SQ_PK_FK As Integer, ByVal Original_CHSAC_SAC_CODE_SQ_PK_FK As Integer) As Integer
            Return Me.Update(Original_CHSAC_CH_CODE_SQ_PK_FK, Original_CHSAC_SAC_CODE_SQ_PK_FK, Original_CHSAC_CH_CODE_SQ_PK_FK, Original_CHSAC_SAC_CODE_SQ_PK_FK)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class CHCPH_CHOIX_CLASSEPHARMTHERTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "CHCPH_CHOIX_CLASSEPHARMTHER"
            tableMapping.ColumnMappings.Add("CHCPH_CH_CODE_SQ_PK_FK", "CHCPH_CH_CODE_SQ_PK_FK")
            tableMapping.ColumnMappings.Add("CHCPH_CPH_CODE_PK_FK", "CHCPH_CPH_CODE_PK_FK")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [theriaque].[CHCPH_CHOIX_CLASSEPHARMTHER] WHERE (([CHCPH_CH_CODE_SQ_P"& _ 
                "K_FK] = @Original_CHCPH_CH_CODE_SQ_PK_FK) AND ([CHCPH_CPH_CODE_PK_FK] = @Origina"& _ 
                "l_CHCPH_CPH_CODE_PK_FK))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CHCPH_CH_CODE_SQ_PK_FK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CHCPH_CH_CODE_SQ_PK_FK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CHCPH_CPH_CODE_PK_FK", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CHCPH_CPH_CODE_PK_FK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [theriaque].[CHCPH_CHOIX_CLASSEPHARMTHER] ([CHCPH_CH_CODE_SQ_PK_FK], "& _ 
                "[CHCPH_CPH_CODE_PK_FK]) VALUES (@CHCPH_CH_CODE_SQ_PK_FK, @CHCPH_CPH_CODE_PK_FK);"& _ 
                ""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT CHCPH_CH_CODE_SQ_PK_FK, CHCPH_CPH_CODE_PK_FK FROM theriaque.CHCPH_CHOIX"& _ 
                "_CLASSEPHARMTHER WHERE (CHCPH_CH_CODE_SQ_PK_FK = @CHCPH_CH_CODE_SQ_PK_FK) AND (C"& _ 
                "HCPH_CPH_CODE_PK_FK = @CHCPH_CPH_CODE_PK_FK)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CHCPH_CH_CODE_SQ_PK_FK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CHCPH_CH_CODE_SQ_PK_FK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CHCPH_CPH_CODE_PK_FK", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CHCPH_CPH_CODE_PK_FK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [theriaque].[CHCPH_CHOIX_CLASSEPHARMTHER] SET [CHCPH_CH_CODE_SQ_PK_FK] = @"& _ 
                "CHCPH_CH_CODE_SQ_PK_FK, [CHCPH_CPH_CODE_PK_FK] = @CHCPH_CPH_CODE_PK_FK WHERE ((["& _ 
                "CHCPH_CH_CODE_SQ_PK_FK] = @Original_CHCPH_CH_CODE_SQ_PK_FK) AND ([CHCPH_CPH_CODE"& _ 
                "_PK_FK] = @Original_CHCPH_CPH_CODE_PK_FK));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT CHCPH_CH_CODE_SQ_PK_FK, CHCP"& _ 
                "H_CPH_CODE_PK_FK FROM theriaque.CHCPH_CHOIX_CLASSEPHARMTHER WHERE (CHCPH_CH_CODE"& _ 
                "_SQ_PK_FK = @CHCPH_CH_CODE_SQ_PK_FK) AND (CHCPH_CPH_CODE_PK_FK = @CHCPH_CPH_CODE"& _ 
                "_PK_FK)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CHCPH_CH_CODE_SQ_PK_FK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CHCPH_CH_CODE_SQ_PK_FK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CHCPH_CPH_CODE_PK_FK", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CHCPH_CPH_CODE_PK_FK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CHCPH_CH_CODE_SQ_PK_FK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CHCPH_CH_CODE_SQ_PK_FK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CHCPH_CPH_CODE_PK_FK", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CHCPH_CPH_CODE_PK_FK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Theriaque.MySettings.Default.ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT CHCPH_CH_CODE_SQ_PK_FK, CHCPH_CPH_CODE_PK_FK FROM theriaque.CHCPH_CHOIX_CL"& _ 
                "ASSEPHARMTHER"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT CHCPH_CH_CODE_SQ_PK_FK, CHCPH_CPH_CODE_PK_FK FROM theriaque.CHCPH_CHOIX_CL"& _ 
                "ASSEPHARMTHER"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE CHCPH_CH_CODE_SQ_PK_FK=@CHCPH_CH_CODE_SQ_PK_FK"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CHCPH_CH_CODE_SQ_PK_FK", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "CHCPH_CH_CODE_SQ_PK_FK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsTheriaque_CriteresChoix.CHCPH_CHOIX_CLASSEPHARMTHERDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsTheriaque_CriteresChoix.CHCPH_CHOIX_CLASSEPHARMTHERDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsTheriaque_CriteresChoix.CHCPH_CHOIX_CLASSEPHARMTHERDataTable = New dsTheriaque_CriteresChoix.CHCPH_CHOIX_CLASSEPHARMTHERDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByCode(ByVal dataTable As dsTheriaque_CriteresChoix.CHCPH_CHOIX_CLASSEPHARMTHERDataTable, ByVal CHCPH_CH_CODE_SQ_PK_FK As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(CHCPH_CH_CODE_SQ_PK_FK,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByCode(ByVal CHCPH_CH_CODE_SQ_PK_FK As Integer) As dsTheriaque_CriteresChoix.CHCPH_CHOIX_CLASSEPHARMTHERDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(CHCPH_CH_CODE_SQ_PK_FK,Integer)
            Dim dataTable As dsTheriaque_CriteresChoix.CHCPH_CHOIX_CLASSEPHARMTHERDataTable = New dsTheriaque_CriteresChoix.CHCPH_CHOIX_CLASSEPHARMTHERDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsTheriaque_CriteresChoix.CHCPH_CHOIX_CLASSEPHARMTHERDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsTheriaque_CriteresChoix) As Integer
            Return Me.Adapter.Update(dataSet, "CHCPH_CHOIX_CLASSEPHARMTHER")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_CHCPH_CH_CODE_SQ_PK_FK As Integer, ByVal Original_CHCPH_CPH_CODE_PK_FK As String) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_CHCPH_CH_CODE_SQ_PK_FK,Integer)
            If (Original_CHCPH_CPH_CODE_PK_FK Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_CHCPH_CPH_CODE_PK_FK")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_CHCPH_CPH_CODE_PK_FK,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal CHCPH_CH_CODE_SQ_PK_FK As Integer, ByVal CHCPH_CPH_CODE_PK_FK As String) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(CHCPH_CH_CODE_SQ_PK_FK,Integer)
            If (CHCPH_CPH_CODE_PK_FK Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CHCPH_CPH_CODE_PK_FK")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(CHCPH_CPH_CODE_PK_FK,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal CHCPH_CH_CODE_SQ_PK_FK As Integer, ByVal CHCPH_CPH_CODE_PK_FK As String, ByVal Original_CHCPH_CH_CODE_SQ_PK_FK As Integer, ByVal Original_CHCPH_CPH_CODE_PK_FK As String) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(CHCPH_CH_CODE_SQ_PK_FK,Integer)
            If (CHCPH_CPH_CODE_PK_FK Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CHCPH_CPH_CODE_PK_FK")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(CHCPH_CPH_CODE_PK_FK,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Original_CHCPH_CH_CODE_SQ_PK_FK,Integer)
            If (Original_CHCPH_CPH_CODE_PK_FK Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_CHCPH_CPH_CODE_PK_FK")
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(Original_CHCPH_CPH_CODE_PK_FK,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal Original_CHCPH_CH_CODE_SQ_PK_FK As Integer, ByVal Original_CHCPH_CPH_CODE_PK_FK As String) As Integer
            Return Me.Update(Original_CHCPH_CH_CODE_SQ_PK_FK, Original_CHCPH_CPH_CODE_PK_FK, Original_CHCPH_CH_CODE_SQ_PK_FK, Original_CHCPH_CPH_CODE_PK_FK)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class CHCCH_CHOIX_CLASSECHIMIQUETableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "CHCCH_CHOIX_CLASSECHIMIQUE"
            tableMapping.ColumnMappings.Add("CHCCH_CCH_CODE_PK_FK", "CHCCH_CCH_CODE_PK_FK")
            tableMapping.ColumnMappings.Add("CHCCH_CH_CODE_SQ_PK_FK", "CHCCH_CH_CODE_SQ_PK_FK")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [theriaque].[CHCCH_CHOIX_CLASSECHIMIQUE] WHERE (([CHCCH_CCH_CODE_PK_F"& _ 
                "K] = @Original_CHCCH_CCH_CODE_PK_FK) AND ([CHCCH_CH_CODE_SQ_PK_FK] = @Original_C"& _ 
                "HCCH_CH_CODE_SQ_PK_FK))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CHCCH_CCH_CODE_PK_FK", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CHCCH_CCH_CODE_PK_FK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CHCCH_CH_CODE_SQ_PK_FK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CHCCH_CH_CODE_SQ_PK_FK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [theriaque].[CHCCH_CHOIX_CLASSECHIMIQUE] ([CHCCH_CCH_CODE_PK_FK], [CH"& _ 
                "CCH_CH_CODE_SQ_PK_FK]) VALUES (@CHCCH_CCH_CODE_PK_FK, @CHCCH_CH_CODE_SQ_PK_FK);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT CHCCH_CCH_CODE_PK_FK, CHCCH_CH_CODE_SQ_PK_FK FROM theriaque.CHCCH_CHOIX_"& _ 
                "CLASSECHIMIQUE WHERE (CHCCH_CCH_CODE_PK_FK = @CHCCH_CCH_CODE_PK_FK) AND (CHCCH_C"& _ 
                "H_CODE_SQ_PK_FK = @CHCCH_CH_CODE_SQ_PK_FK)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CHCCH_CCH_CODE_PK_FK", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CHCCH_CCH_CODE_PK_FK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CHCCH_CH_CODE_SQ_PK_FK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CHCCH_CH_CODE_SQ_PK_FK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [theriaque].[CHCCH_CHOIX_CLASSECHIMIQUE] SET [CHCCH_CCH_CODE_PK_FK] = @CHC"& _ 
                "CH_CCH_CODE_PK_FK, [CHCCH_CH_CODE_SQ_PK_FK] = @CHCCH_CH_CODE_SQ_PK_FK WHERE (([C"& _ 
                "HCCH_CCH_CODE_PK_FK] = @Original_CHCCH_CCH_CODE_PK_FK) AND ([CHCCH_CH_CODE_SQ_PK"& _ 
                "_FK] = @Original_CHCCH_CH_CODE_SQ_PK_FK));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT CHCCH_CCH_CODE_PK_FK, CHCCH_C"& _ 
                "H_CODE_SQ_PK_FK FROM theriaque.CHCCH_CHOIX_CLASSECHIMIQUE WHERE (CHCCH_CCH_CODE_"& _ 
                "PK_FK = @CHCCH_CCH_CODE_PK_FK) AND (CHCCH_CH_CODE_SQ_PK_FK = @CHCCH_CH_CODE_SQ_P"& _ 
                "K_FK)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CHCCH_CCH_CODE_PK_FK", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CHCCH_CCH_CODE_PK_FK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CHCCH_CH_CODE_SQ_PK_FK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CHCCH_CH_CODE_SQ_PK_FK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CHCCH_CCH_CODE_PK_FK", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CHCCH_CCH_CODE_PK_FK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CHCCH_CH_CODE_SQ_PK_FK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CHCCH_CH_CODE_SQ_PK_FK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Theriaque.MySettings.Default.ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT CHCCH_CCH_CODE_PK_FK, CHCCH_CH_CODE_SQ_PK_FK FROM theriaque.CHCCH_CHOIX_CL"& _ 
                "ASSECHIMIQUE"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT CHCCH_CCH_CODE_PK_FK, CHCCH_CH_CODE_SQ_PK_FK FROM theriaque.CHCCH_CHOIX_CL"& _ 
                "ASSECHIMIQUE"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE CHCCH_CH_CODE_SQ_PK_FK =@CHCCH_CH_CODE_SQ_PK_FK "
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CHCCH_CH_CODE_SQ_PK_FK", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "CHCCH_CH_CODE_SQ_PK_FK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsTheriaque_CriteresChoix.CHCCH_CHOIX_CLASSECHIMIQUEDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsTheriaque_CriteresChoix.CHCCH_CHOIX_CLASSECHIMIQUEDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsTheriaque_CriteresChoix.CHCCH_CHOIX_CLASSECHIMIQUEDataTable = New dsTheriaque_CriteresChoix.CHCCH_CHOIX_CLASSECHIMIQUEDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByCode(ByVal dataTable As dsTheriaque_CriteresChoix.CHCCH_CHOIX_CLASSECHIMIQUEDataTable, ByVal CHCCH_CH_CODE_SQ_PK_FK As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(CHCCH_CH_CODE_SQ_PK_FK,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByCode(ByVal CHCCH_CH_CODE_SQ_PK_FK As Integer) As dsTheriaque_CriteresChoix.CHCCH_CHOIX_CLASSECHIMIQUEDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(CHCCH_CH_CODE_SQ_PK_FK,Integer)
            Dim dataTable As dsTheriaque_CriteresChoix.CHCCH_CHOIX_CLASSECHIMIQUEDataTable = New dsTheriaque_CriteresChoix.CHCCH_CHOIX_CLASSECHIMIQUEDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsTheriaque_CriteresChoix.CHCCH_CHOIX_CLASSECHIMIQUEDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsTheriaque_CriteresChoix) As Integer
            Return Me.Adapter.Update(dataSet, "CHCCH_CHOIX_CLASSECHIMIQUE")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_CHCCH_CCH_CODE_PK_FK As String, ByVal Original_CHCCH_CH_CODE_SQ_PK_FK As Integer) As Integer
            If (Original_CHCCH_CCH_CODE_PK_FK Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_CHCCH_CCH_CODE_PK_FK")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_CHCCH_CCH_CODE_PK_FK,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_CHCCH_CH_CODE_SQ_PK_FK,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal CHCCH_CCH_CODE_PK_FK As String, ByVal CHCCH_CH_CODE_SQ_PK_FK As Integer) As Integer
            If (CHCCH_CCH_CODE_PK_FK Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CHCCH_CCH_CODE_PK_FK")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(CHCCH_CCH_CODE_PK_FK,String)
            End If
            Me.Adapter.InsertCommand.Parameters(1).Value = CType(CHCCH_CH_CODE_SQ_PK_FK,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal CHCCH_CCH_CODE_PK_FK As String, ByVal CHCCH_CH_CODE_SQ_PK_FK As Integer, ByVal Original_CHCCH_CCH_CODE_PK_FK As String, ByVal Original_CHCCH_CH_CODE_SQ_PK_FK As Integer) As Integer
            If (CHCCH_CCH_CODE_PK_FK Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CHCCH_CCH_CODE_PK_FK")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(CHCCH_CCH_CODE_PK_FK,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(1).Value = CType(CHCCH_CH_CODE_SQ_PK_FK,Integer)
            If (Original_CHCCH_CCH_CODE_PK_FK Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_CHCCH_CCH_CODE_PK_FK")
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Original_CHCCH_CCH_CODE_PK_FK,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(3).Value = CType(Original_CHCCH_CH_CODE_SQ_PK_FK,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal Original_CHCCH_CCH_CODE_PK_FK As String, ByVal Original_CHCCH_CH_CODE_SQ_PK_FK As Integer) As Integer
            Return Me.Update(Original_CHCCH_CCH_CODE_PK_FK, Original_CHCCH_CH_CODE_SQ_PK_FK, Original_CHCCH_CCH_CODE_PK_FK, Original_CHCCH_CH_CODE_SQ_PK_FK)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class CHSAU_CHOIX_SUBAUXILIAIRETableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "CHSAU_CHOIX_SUBAUXILIAIRE"
            tableMapping.ColumnMappings.Add("CHSAU_CH_CODE_SQ_PK_FK", "CHSAU_CH_CODE_SQ_PK_FK")
            tableMapping.ColumnMappings.Add("CHSAU_SAU_CODE_SQ_PK_FK", "CHSAU_SAU_CODE_SQ_PK_FK")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [theriaque].[CHSAU_CHOIX_SUBAUXILIAIRE] ([CHSAU_CH_CODE_SQ_PK_FK], [C"& _ 
                "HSAU_SAU_CODE_SQ_PK_FK]) VALUES (@CHSAU_CH_CODE_SQ_PK_FK, @CHSAU_SAU_CODE_SQ_PK_"& _ 
                "FK)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CHSAU_CH_CODE_SQ_PK_FK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CHSAU_CH_CODE_SQ_PK_FK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CHSAU_SAU_CODE_SQ_PK_FK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CHSAU_SAU_CODE_SQ_PK_FK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Theriaque.MySettings.Default.ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT CHSAU_CH_CODE_SQ_PK_FK, CHSAU_SAU_CODE_SQ_PK_FK FROM theriaque.CHSAU_CHOIX"& _ 
                "_SUBAUXILIAIRE"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT CHSAU_CH_CODE_SQ_PK_FK, CHSAU_SAU_CODE_SQ_PK_FK FROM theriaque.CHSAU_CHOIX"& _ 
                "_SUBAUXILIAIRE"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE CHSAU_CH_CODE_SQ_PK_FK=@CHSAU_CH_CODE_SQ_PK_FK"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CHSAU_CH_CODE_SQ_PK_FK", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "CHSAU_CH_CODE_SQ_PK_FK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsTheriaque_CriteresChoix.CHSAU_CHOIX_SUBAUXILIAIREDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsTheriaque_CriteresChoix.CHSAU_CHOIX_SUBAUXILIAIREDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsTheriaque_CriteresChoix.CHSAU_CHOIX_SUBAUXILIAIREDataTable = New dsTheriaque_CriteresChoix.CHSAU_CHOIX_SUBAUXILIAIREDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByCode(ByVal dataTable As dsTheriaque_CriteresChoix.CHSAU_CHOIX_SUBAUXILIAIREDataTable, ByVal CHSAU_CH_CODE_SQ_PK_FK As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (CHSAU_CH_CODE_SQ_PK_FK.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(CHSAU_CH_CODE_SQ_PK_FK.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByCode(ByVal CHSAU_CH_CODE_SQ_PK_FK As Global.System.Nullable(Of Integer)) As dsTheriaque_CriteresChoix.CHSAU_CHOIX_SUBAUXILIAIREDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (CHSAU_CH_CODE_SQ_PK_FK.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(CHSAU_CH_CODE_SQ_PK_FK.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As dsTheriaque_CriteresChoix.CHSAU_CHOIX_SUBAUXILIAIREDataTable = New dsTheriaque_CriteresChoix.CHSAU_CHOIX_SUBAUXILIAIREDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsTheriaque_CriteresChoix.CHSAU_CHOIX_SUBAUXILIAIREDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsTheriaque_CriteresChoix) As Integer
            Return Me.Adapter.Update(dataSet, "CHSAU_CHOIX_SUBAUXILIAIRE")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal CHSAU_CH_CODE_SQ_PK_FK As Global.System.Nullable(Of Integer), ByVal CHSAU_SAU_CODE_SQ_PK_FK As Global.System.Nullable(Of Integer)) As Integer
            If (CHSAU_CH_CODE_SQ_PK_FK.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(CHSAU_CH_CODE_SQ_PK_FK.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (CHSAU_SAU_CODE_SQ_PK_FK.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(CHSAU_SAU_CODE_SQ_PK_FK.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class CHPR_CHOIX_PRODUITTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "CHPR_CHOIX_PRODUIT"
            tableMapping.ColumnMappings.Add("CHPR_CH_CODE_SQ_PK_FK", "CHPR_CH_CODE_SQ_PK_FK")
            tableMapping.ColumnMappings.Add("CHPR_PR_CODE_SQ_PK_FK", "CHPR_PR_CODE_SQ_PK_FK")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [theriaque].[CHPR_CHOIX_PRODUIT] WHERE (([CHPR_CH_CODE_SQ_PK_FK] = @O"& _ 
                "riginal_CHPR_CH_CODE_SQ_PK_FK) AND ([CHPR_PR_CODE_SQ_PK_FK] = @Original_CHPR_PR_"& _ 
                "CODE_SQ_PK_FK))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CHPR_CH_CODE_SQ_PK_FK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CHPR_CH_CODE_SQ_PK_FK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CHPR_PR_CODE_SQ_PK_FK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CHPR_PR_CODE_SQ_PK_FK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [theriaque].[CHPR_CHOIX_PRODUIT] ([CHPR_CH_CODE_SQ_PK_FK], [CHPR_PR_C"& _ 
                "ODE_SQ_PK_FK]) VALUES (@CHPR_CH_CODE_SQ_PK_FK, @CHPR_PR_CODE_SQ_PK_FK);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT "& _ 
                "CHPR_CH_CODE_SQ_PK_FK, CHPR_PR_CODE_SQ_PK_FK FROM theriaque.CHPR_CHOIX_PRODUIT W"& _ 
                "HERE (CHPR_CH_CODE_SQ_PK_FK = @CHPR_CH_CODE_SQ_PK_FK) AND (CHPR_PR_CODE_SQ_PK_FK"& _ 
                " = @CHPR_PR_CODE_SQ_PK_FK)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CHPR_CH_CODE_SQ_PK_FK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CHPR_CH_CODE_SQ_PK_FK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CHPR_PR_CODE_SQ_PK_FK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CHPR_PR_CODE_SQ_PK_FK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [theriaque].[CHPR_CHOIX_PRODUIT] SET [CHPR_CH_CODE_SQ_PK_FK] = @CHPR_CH_CO"& _ 
                "DE_SQ_PK_FK, [CHPR_PR_CODE_SQ_PK_FK] = @CHPR_PR_CODE_SQ_PK_FK WHERE (([CHPR_CH_C"& _ 
                "ODE_SQ_PK_FK] = @Original_CHPR_CH_CODE_SQ_PK_FK) AND ([CHPR_PR_CODE_SQ_PK_FK] = "& _ 
                "@Original_CHPR_PR_CODE_SQ_PK_FK));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT CHPR_CH_CODE_SQ_PK_FK, CHPR_PR_CODE_S"& _ 
                "Q_PK_FK FROM theriaque.CHPR_CHOIX_PRODUIT WHERE (CHPR_CH_CODE_SQ_PK_FK = @CHPR_C"& _ 
                "H_CODE_SQ_PK_FK) AND (CHPR_PR_CODE_SQ_PK_FK = @CHPR_PR_CODE_SQ_PK_FK)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CHPR_CH_CODE_SQ_PK_FK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CHPR_CH_CODE_SQ_PK_FK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CHPR_PR_CODE_SQ_PK_FK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CHPR_PR_CODE_SQ_PK_FK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CHPR_CH_CODE_SQ_PK_FK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CHPR_CH_CODE_SQ_PK_FK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CHPR_PR_CODE_SQ_PK_FK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CHPR_PR_CODE_SQ_PK_FK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Theriaque.MySettings.Default.ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT CHPR_CH_CODE_SQ_PK_FK, CHPR_PR_CODE_SQ_PK_FK FROM theriaque.CHPR_CHOIX_PRO"& _ 
                "DUIT"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT CHPR_CH_CODE_SQ_PK_FK, CHPR_PR_CODE_SQ_PK_FK FROM theriaque.CHPR_CHOIX_PRO"& _ 
                "DUIT"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE CHPR_CH_CODE_SQ_PK_FK=@CHPR_CH_CODE_SQ_PK_FK"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CHPR_CH_CODE_SQ_PK_FK", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "CHPR_CH_CODE_SQ_PK_FK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsTheriaque_CriteresChoix.CHPR_CHOIX_PRODUITDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsTheriaque_CriteresChoix.CHPR_CHOIX_PRODUITDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsTheriaque_CriteresChoix.CHPR_CHOIX_PRODUITDataTable = New dsTheriaque_CriteresChoix.CHPR_CHOIX_PRODUITDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByCode(ByVal dataTable As dsTheriaque_CriteresChoix.CHPR_CHOIX_PRODUITDataTable, ByVal CHPR_CH_CODE_SQ_PK_FK As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(CHPR_CH_CODE_SQ_PK_FK,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByCode(ByVal CHPR_CH_CODE_SQ_PK_FK As Integer) As dsTheriaque_CriteresChoix.CHPR_CHOIX_PRODUITDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(CHPR_CH_CODE_SQ_PK_FK,Integer)
            Dim dataTable As dsTheriaque_CriteresChoix.CHPR_CHOIX_PRODUITDataTable = New dsTheriaque_CriteresChoix.CHPR_CHOIX_PRODUITDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsTheriaque_CriteresChoix.CHPR_CHOIX_PRODUITDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsTheriaque_CriteresChoix) As Integer
            Return Me.Adapter.Update(dataSet, "CHPR_CHOIX_PRODUIT")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_CHPR_CH_CODE_SQ_PK_FK As Integer, ByVal Original_CHPR_PR_CODE_SQ_PK_FK As Integer) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_CHPR_CH_CODE_SQ_PK_FK,Integer)
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_CHPR_PR_CODE_SQ_PK_FK,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal CHPR_CH_CODE_SQ_PK_FK As Integer, ByVal CHPR_PR_CODE_SQ_PK_FK As Integer) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(CHPR_CH_CODE_SQ_PK_FK,Integer)
            Me.Adapter.InsertCommand.Parameters(1).Value = CType(CHPR_PR_CODE_SQ_PK_FK,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal CHPR_CH_CODE_SQ_PK_FK As Integer, ByVal CHPR_PR_CODE_SQ_PK_FK As Integer, ByVal Original_CHPR_CH_CODE_SQ_PK_FK As Integer, ByVal Original_CHPR_PR_CODE_SQ_PK_FK As Integer) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(CHPR_CH_CODE_SQ_PK_FK,Integer)
            Me.Adapter.UpdateCommand.Parameters(1).Value = CType(CHPR_PR_CODE_SQ_PK_FK,Integer)
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Original_CHPR_CH_CODE_SQ_PK_FK,Integer)
            Me.Adapter.UpdateCommand.Parameters(3).Value = CType(Original_CHPR_PR_CODE_SQ_PK_FK,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal Original_CHPR_CH_CODE_SQ_PK_FK As Integer, ByVal Original_CHPR_PR_CODE_SQ_PK_FK As Integer) As Integer
            Return Me.Update(Original_CHPR_CH_CODE_SQ_PK_FK, Original_CHPR_PR_CODE_SQ_PK_FK, Original_CHPR_CH_CODE_SQ_PK_FK, Original_CHPR_PR_CODE_SQ_PK_FK)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class CHCATC_CHOIX_CLASSEATCTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "CHCATC_CHOIX_CLASSEATC"
            tableMapping.ColumnMappings.Add("CHCATC_CH_CODE_SQ_PK_FK", "CHCATC_CH_CODE_SQ_PK_FK")
            tableMapping.ColumnMappings.Add("CHCATC_CATC_CODE_PK_FK", "CHCATC_CATC_CODE_PK_FK")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [theriaque].[CHCATC_CHOIX_CLASSEATC] WHERE (([CHCATC_CH_CODE_SQ_PK_FK"& _ 
                "] = @Original_CHCATC_CH_CODE_SQ_PK_FK) AND ([CHCATC_CATC_CODE_PK_FK] = @Original"& _ 
                "_CHCATC_CATC_CODE_PK_FK))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CHCATC_CH_CODE_SQ_PK_FK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CHCATC_CH_CODE_SQ_PK_FK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CHCATC_CATC_CODE_PK_FK", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CHCATC_CATC_CODE_PK_FK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [theriaque].[CHCATC_CHOIX_CLASSEATC] ([CHCATC_CH_CODE_SQ_PK_FK], [CHC"& _ 
                "ATC_CATC_CODE_PK_FK]) VALUES (@CHCATC_CH_CODE_SQ_PK_FK, @CHCATC_CATC_CODE_PK_FK)"& _ 
                ";"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT CHCATC_CH_CODE_SQ_PK_FK, CHCATC_CATC_CODE_PK_FK FROM theriaque.CHCATC_"& _ 
                "CHOIX_CLASSEATC WHERE (CHCATC_CATC_CODE_PK_FK = @CHCATC_CATC_CODE_PK_FK) AND (CH"& _ 
                "CATC_CH_CODE_SQ_PK_FK = @CHCATC_CH_CODE_SQ_PK_FK)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CHCATC_CH_CODE_SQ_PK_FK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CHCATC_CH_CODE_SQ_PK_FK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CHCATC_CATC_CODE_PK_FK", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CHCATC_CATC_CODE_PK_FK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [theriaque].[CHCATC_CHOIX_CLASSEATC] SET [CHCATC_CH_CODE_SQ_PK_FK] = @CHCA"& _ 
                "TC_CH_CODE_SQ_PK_FK, [CHCATC_CATC_CODE_PK_FK] = @CHCATC_CATC_CODE_PK_FK WHERE (("& _ 
                "[CHCATC_CH_CODE_SQ_PK_FK] = @Original_CHCATC_CH_CODE_SQ_PK_FK) AND ([CHCATC_CATC"& _ 
                "_CODE_PK_FK] = @Original_CHCATC_CATC_CODE_PK_FK));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT CHCATC_CH_CODE_SQ_PK_"& _ 
                "FK, CHCATC_CATC_CODE_PK_FK FROM theriaque.CHCATC_CHOIX_CLASSEATC WHERE (CHCATC_C"& _ 
                "ATC_CODE_PK_FK = @CHCATC_CATC_CODE_PK_FK) AND (CHCATC_CH_CODE_SQ_PK_FK = @CHCATC"& _ 
                "_CH_CODE_SQ_PK_FK)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CHCATC_CH_CODE_SQ_PK_FK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CHCATC_CH_CODE_SQ_PK_FK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CHCATC_CATC_CODE_PK_FK", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CHCATC_CATC_CODE_PK_FK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CHCATC_CH_CODE_SQ_PK_FK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CHCATC_CH_CODE_SQ_PK_FK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CHCATC_CATC_CODE_PK_FK", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CHCATC_CATC_CODE_PK_FK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Theriaque.MySettings.Default.ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT CHCATC_CH_CODE_SQ_PK_FK, CHCATC_CATC_CODE_PK_FK FROM theriaque.CHCATC_CHOI"& _ 
                "X_CLASSEATC"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT CHCATC_CH_CODE_SQ_PK_FK, CHCATC_CATC_CODE_PK_FK FROM theriaque.CHCATC_CHOI"& _ 
                "X_CLASSEATC"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE  CHCATC_CH_CODE_SQ_PK_FK=@CHCATC_CH_CODE_SQ_PK_FK"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CHCATC_CH_CODE_SQ_PK_FK", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "CHCATC_CH_CODE_SQ_PK_FK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsTheriaque_CriteresChoix.CHCATC_CHOIX_CLASSEATCDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsTheriaque_CriteresChoix.CHCATC_CHOIX_CLASSEATCDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsTheriaque_CriteresChoix.CHCATC_CHOIX_CLASSEATCDataTable = New dsTheriaque_CriteresChoix.CHCATC_CHOIX_CLASSEATCDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByCode(ByVal dataTable As dsTheriaque_CriteresChoix.CHCATC_CHOIX_CLASSEATCDataTable, ByVal CHCATC_CH_CODE_SQ_PK_FK As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(CHCATC_CH_CODE_SQ_PK_FK,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByCode(ByVal CHCATC_CH_CODE_SQ_PK_FK As Integer) As dsTheriaque_CriteresChoix.CHCATC_CHOIX_CLASSEATCDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(CHCATC_CH_CODE_SQ_PK_FK,Integer)
            Dim dataTable As dsTheriaque_CriteresChoix.CHCATC_CHOIX_CLASSEATCDataTable = New dsTheriaque_CriteresChoix.CHCATC_CHOIX_CLASSEATCDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsTheriaque_CriteresChoix.CHCATC_CHOIX_CLASSEATCDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsTheriaque_CriteresChoix) As Integer
            Return Me.Adapter.Update(dataSet, "CHCATC_CHOIX_CLASSEATC")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_CHCATC_CH_CODE_SQ_PK_FK As Integer, ByVal Original_CHCATC_CATC_CODE_PK_FK As String) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_CHCATC_CH_CODE_SQ_PK_FK,Integer)
            If (Original_CHCATC_CATC_CODE_PK_FK Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_CHCATC_CATC_CODE_PK_FK")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_CHCATC_CATC_CODE_PK_FK,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal CHCATC_CH_CODE_SQ_PK_FK As Integer, ByVal CHCATC_CATC_CODE_PK_FK As String) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(CHCATC_CH_CODE_SQ_PK_FK,Integer)
            If (CHCATC_CATC_CODE_PK_FK Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CHCATC_CATC_CODE_PK_FK")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(CHCATC_CATC_CODE_PK_FK,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal CHCATC_CH_CODE_SQ_PK_FK As Integer, ByVal CHCATC_CATC_CODE_PK_FK As String, ByVal Original_CHCATC_CH_CODE_SQ_PK_FK As Integer, ByVal Original_CHCATC_CATC_CODE_PK_FK As String) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(CHCATC_CH_CODE_SQ_PK_FK,Integer)
            If (CHCATC_CATC_CODE_PK_FK Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CHCATC_CATC_CODE_PK_FK")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(CHCATC_CATC_CODE_PK_FK,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Original_CHCATC_CH_CODE_SQ_PK_FK,Integer)
            If (Original_CHCATC_CATC_CODE_PK_FK Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_CHCATC_CATC_CODE_PK_FK")
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(Original_CHCATC_CATC_CODE_PK_FK,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal Original_CHCATC_CH_CODE_SQ_PK_FK As Integer, ByVal Original_CHCATC_CATC_CODE_PK_FK As String) As Integer
            Return Me.Update(Original_CHCATC_CH_CODE_SQ_PK_FK, Original_CHCATC_CATC_CODE_PK_FK, Original_CHCATC_CH_CODE_SQ_PK_FK, Original_CHCATC_CATC_CODE_PK_FK)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class FTHCPH_FIT_CLASSEPHARMTHERTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "FTHCPH_FIT_CLASSEPHARMTHER"
            tableMapping.ColumnMappings.Add("FTHCPH_FTH_CODE_SQ_PK_FK", "FTHCPH_FTH_CODE_SQ_PK_FK")
            tableMapping.ColumnMappings.Add("FTHCPH_CPH_CODE_PK_FK", "FTHCPH_CPH_CODE_PK_FK")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [theriaque].[FTHCPH_FIT_CLASSEPHARMTHER] WHERE (([FTHCPH_FTH_CODE_SQ_"& _ 
                "PK_FK] = @Original_FTHCPH_FTH_CODE_SQ_PK_FK) AND ([FTHCPH_CPH_CODE_PK_FK] = @Ori"& _ 
                "ginal_FTHCPH_CPH_CODE_PK_FK))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FTHCPH_FTH_CODE_SQ_PK_FK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FTHCPH_FTH_CODE_SQ_PK_FK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FTHCPH_CPH_CODE_PK_FK", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FTHCPH_CPH_CODE_PK_FK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [theriaque].[FTHCPH_FIT_CLASSEPHARMTHER] ([FTHCPH_FTH_CODE_SQ_PK_FK],"& _ 
                " [FTHCPH_CPH_CODE_PK_FK]) VALUES (@FTHCPH_FTH_CODE_SQ_PK_FK, @FTHCPH_CPH_CODE_PK"& _ 
                "_FK);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT FTHCPH_FTH_CODE_SQ_PK_FK, FTHCPH_CPH_CODE_PK_FK FROM theriaque.FTH"& _ 
                "CPH_FIT_CLASSEPHARMTHER WHERE (FTHCPH_CPH_CODE_PK_FK = @FTHCPH_CPH_CODE_PK_FK) A"& _ 
                "ND (FTHCPH_FTH_CODE_SQ_PK_FK = @FTHCPH_FTH_CODE_SQ_PK_FK)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FTHCPH_FTH_CODE_SQ_PK_FK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FTHCPH_FTH_CODE_SQ_PK_FK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FTHCPH_CPH_CODE_PK_FK", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FTHCPH_CPH_CODE_PK_FK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [theriaque].[FTHCPH_FIT_CLASSEPHARMTHER] SET [FTHCPH_FTH_CODE_SQ_PK_FK] = "& _ 
                "@FTHCPH_FTH_CODE_SQ_PK_FK, [FTHCPH_CPH_CODE_PK_FK] = @FTHCPH_CPH_CODE_PK_FK WHER"& _ 
                "E (([FTHCPH_FTH_CODE_SQ_PK_FK] = @Original_FTHCPH_FTH_CODE_SQ_PK_FK) AND ([FTHCP"& _ 
                "H_CPH_CODE_PK_FK] = @Original_FTHCPH_CPH_CODE_PK_FK));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT FTHCPH_FTH_CODE_S"& _ 
                "Q_PK_FK, FTHCPH_CPH_CODE_PK_FK FROM theriaque.FTHCPH_FIT_CLASSEPHARMTHER WHERE ("& _ 
                "FTHCPH_CPH_CODE_PK_FK = @FTHCPH_CPH_CODE_PK_FK) AND (FTHCPH_FTH_CODE_SQ_PK_FK = "& _ 
                "@FTHCPH_FTH_CODE_SQ_PK_FK)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FTHCPH_FTH_CODE_SQ_PK_FK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FTHCPH_FTH_CODE_SQ_PK_FK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FTHCPH_CPH_CODE_PK_FK", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FTHCPH_CPH_CODE_PK_FK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FTHCPH_FTH_CODE_SQ_PK_FK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FTHCPH_FTH_CODE_SQ_PK_FK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FTHCPH_CPH_CODE_PK_FK", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FTHCPH_CPH_CODE_PK_FK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Theriaque.MySettings.Default.ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT FTHCPH_FTH_CODE_SQ_PK_FK, FTHCPH_CPH_CODE_PK_FK FROM theriaque.FTHCPH_FIT_"& _ 
                "CLASSEPHARMTHER"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT FTHCPH_FTH_CODE_SQ_PK_FK, FTHCPH_CPH_CODE_PK_FK FROM theriaque.FTHCPH_FIT_"& _ 
                "CLASSEPHARMTHER"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE FTHCPH_FTH_CODE_SQ_PK_FK=@FTHCPH_FTH_CODE_SQ_PK_FK"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FTHCPH_FTH_CODE_SQ_PK_FK", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "FTHCPH_FTH_CODE_SQ_PK_FK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsTheriaque_CriteresChoix.FTHCPH_FIT_CLASSEPHARMTHERDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsTheriaque_CriteresChoix.FTHCPH_FIT_CLASSEPHARMTHERDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsTheriaque_CriteresChoix.FTHCPH_FIT_CLASSEPHARMTHERDataTable = New dsTheriaque_CriteresChoix.FTHCPH_FIT_CLASSEPHARMTHERDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByCode(ByVal dataTable As dsTheriaque_CriteresChoix.FTHCPH_FIT_CLASSEPHARMTHERDataTable, ByVal FTHCPH_FTH_CODE_SQ_PK_FK As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(FTHCPH_FTH_CODE_SQ_PK_FK,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByCode(ByVal FTHCPH_FTH_CODE_SQ_PK_FK As Integer) As dsTheriaque_CriteresChoix.FTHCPH_FIT_CLASSEPHARMTHERDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(FTHCPH_FTH_CODE_SQ_PK_FK,Integer)
            Dim dataTable As dsTheriaque_CriteresChoix.FTHCPH_FIT_CLASSEPHARMTHERDataTable = New dsTheriaque_CriteresChoix.FTHCPH_FIT_CLASSEPHARMTHERDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsTheriaque_CriteresChoix.FTHCPH_FIT_CLASSEPHARMTHERDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsTheriaque_CriteresChoix) As Integer
            Return Me.Adapter.Update(dataSet, "FTHCPH_FIT_CLASSEPHARMTHER")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_FTHCPH_FTH_CODE_SQ_PK_FK As Integer, ByVal Original_FTHCPH_CPH_CODE_PK_FK As String) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_FTHCPH_FTH_CODE_SQ_PK_FK,Integer)
            If (Original_FTHCPH_CPH_CODE_PK_FK Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_FTHCPH_CPH_CODE_PK_FK")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_FTHCPH_CPH_CODE_PK_FK,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal FTHCPH_FTH_CODE_SQ_PK_FK As Integer, ByVal FTHCPH_CPH_CODE_PK_FK As String) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(FTHCPH_FTH_CODE_SQ_PK_FK,Integer)
            If (FTHCPH_CPH_CODE_PK_FK Is Nothing) Then
                Throw New Global.System.ArgumentNullException("FTHCPH_CPH_CODE_PK_FK")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(FTHCPH_CPH_CODE_PK_FK,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal FTHCPH_FTH_CODE_SQ_PK_FK As Integer, ByVal FTHCPH_CPH_CODE_PK_FK As String, ByVal Original_FTHCPH_FTH_CODE_SQ_PK_FK As Integer, ByVal Original_FTHCPH_CPH_CODE_PK_FK As String) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(FTHCPH_FTH_CODE_SQ_PK_FK,Integer)
            If (FTHCPH_CPH_CODE_PK_FK Is Nothing) Then
                Throw New Global.System.ArgumentNullException("FTHCPH_CPH_CODE_PK_FK")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(FTHCPH_CPH_CODE_PK_FK,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Original_FTHCPH_FTH_CODE_SQ_PK_FK,Integer)
            If (Original_FTHCPH_CPH_CODE_PK_FK Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_FTHCPH_CPH_CODE_PK_FK")
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(Original_FTHCPH_CPH_CODE_PK_FK,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal Original_FTHCPH_FTH_CODE_SQ_PK_FK As Integer, ByVal Original_FTHCPH_CPH_CODE_PK_FK As String) As Integer
            Return Me.Update(Original_FTHCPH_FTH_CODE_SQ_PK_FK, Original_FTHCPH_CPH_CODE_PK_FK, Original_FTHCPH_FTH_CODE_SQ_PK_FK, Original_FTHCPH_CPH_CODE_PK_FK)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class FTHCCH_FIT_CLASSECHIMIQUETableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "FTHCCH_FIT_CLASSECHIMIQUE"
            tableMapping.ColumnMappings.Add("FTHCCH_FTH_CODE_SQ_PK_FK", "FTHCCH_FTH_CODE_SQ_PK_FK")
            tableMapping.ColumnMappings.Add("FTHCCH_CCH_CODE_PK_FK", "FTHCCH_CCH_CODE_PK_FK")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [theriaque].[FTHCCH_FIT_CLASSECHIMIQUE] ([FTHCCH_FTH_CODE_SQ_PK_FK], "& _ 
                "[FTHCCH_CCH_CODE_PK_FK]) VALUES (@FTHCCH_FTH_CODE_SQ_PK_FK, @FTHCCH_CCH_CODE_PK_"& _ 
                "FK)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FTHCCH_FTH_CODE_SQ_PK_FK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FTHCCH_FTH_CODE_SQ_PK_FK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FTHCCH_CCH_CODE_PK_FK", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FTHCCH_CCH_CODE_PK_FK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Theriaque.MySettings.Default.ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT FTHCCH_FTH_CODE_SQ_PK_FK, FTHCCH_CCH_CODE_PK_FK FROM theriaque.FTHCCH_FIT_"& _ 
                "CLASSECHIMIQUE"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT FTHCCH_FTH_CODE_SQ_PK_FK, FTHCCH_CCH_CODE_PK_FK FROM theriaque.FTHCCH_FIT_"& _ 
                "CLASSECHIMIQUE"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE FTHCCH_FTH_CODE_SQ_PK_FK=@FTHCCH_FTH_CODE_SQ_PK_FK"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FTHCCH_FTH_CODE_SQ_PK_FK", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "FTHCCH_FTH_CODE_SQ_PK_FK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsTheriaque_CriteresChoix.FTHCCH_FIT_CLASSECHIMIQUEDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsTheriaque_CriteresChoix.FTHCCH_FIT_CLASSECHIMIQUEDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsTheriaque_CriteresChoix.FTHCCH_FIT_CLASSECHIMIQUEDataTable = New dsTheriaque_CriteresChoix.FTHCCH_FIT_CLASSECHIMIQUEDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByCode(ByVal dataTable As dsTheriaque_CriteresChoix.FTHCCH_FIT_CLASSECHIMIQUEDataTable, ByVal FTHCCH_FTH_CODE_SQ_PK_FK As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (FTHCCH_FTH_CODE_SQ_PK_FK.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(FTHCCH_FTH_CODE_SQ_PK_FK.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByCode(ByVal FTHCCH_FTH_CODE_SQ_PK_FK As Global.System.Nullable(Of Integer)) As dsTheriaque_CriteresChoix.FTHCCH_FIT_CLASSECHIMIQUEDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (FTHCCH_FTH_CODE_SQ_PK_FK.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(FTHCCH_FTH_CODE_SQ_PK_FK.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As dsTheriaque_CriteresChoix.FTHCCH_FIT_CLASSECHIMIQUEDataTable = New dsTheriaque_CriteresChoix.FTHCCH_FIT_CLASSECHIMIQUEDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsTheriaque_CriteresChoix.FTHCCH_FIT_CLASSECHIMIQUEDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsTheriaque_CriteresChoix) As Integer
            Return Me.Adapter.Update(dataSet, "FTHCCH_FIT_CLASSECHIMIQUE")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal FTHCCH_FTH_CODE_SQ_PK_FK As Global.System.Nullable(Of Integer), ByVal FTHCCH_CCH_CODE_PK_FK As String) As Integer
            If (FTHCCH_FTH_CODE_SQ_PK_FK.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(FTHCCH_FTH_CODE_SQ_PK_FK.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (FTHCCH_CCH_CODE_PK_FK Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(FTHCCH_CCH_CODE_PK_FK,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class FTHSAC_FIT_SUBACTIVETableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "FTHSAC_FIT_SUBACTIVE"
            tableMapping.ColumnMappings.Add("FTHSAC_FTH_CODE_SQ_PK_FK", "FTHSAC_FTH_CODE_SQ_PK_FK")
            tableMapping.ColumnMappings.Add("FTHSAC_SAC_CODE_SQ_PK_FK", "FTHSAC_SAC_CODE_SQ_PK_FK")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [theriaque].[FTHSAC_FIT_SUBACTIVE] WHERE (([FTHSAC_FTH_CODE_SQ_PK_FK]"& _ 
                " = @Original_FTHSAC_FTH_CODE_SQ_PK_FK) AND ([FTHSAC_SAC_CODE_SQ_PK_FK] = @Origin"& _ 
                "al_FTHSAC_SAC_CODE_SQ_PK_FK))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FTHSAC_FTH_CODE_SQ_PK_FK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FTHSAC_FTH_CODE_SQ_PK_FK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FTHSAC_SAC_CODE_SQ_PK_FK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FTHSAC_SAC_CODE_SQ_PK_FK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [theriaque].[FTHSAC_FIT_SUBACTIVE] ([FTHSAC_FTH_CODE_SQ_PK_FK], [FTHS"& _ 
                "AC_SAC_CODE_SQ_PK_FK]) VALUES (@FTHSAC_FTH_CODE_SQ_PK_FK, @FTHSAC_SAC_CODE_SQ_PK"& _ 
                "_FK);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT FTHSAC_FTH_CODE_SQ_PK_FK, FTHSAC_SAC_CODE_SQ_PK_FK FROM theriaque."& _ 
                "FTHSAC_FIT_SUBACTIVE WHERE (FTHSAC_FTH_CODE_SQ_PK_FK = @FTHSAC_FTH_CODE_SQ_PK_FK"& _ 
                ") AND (FTHSAC_SAC_CODE_SQ_PK_FK = @FTHSAC_SAC_CODE_SQ_PK_FK)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FTHSAC_FTH_CODE_SQ_PK_FK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FTHSAC_FTH_CODE_SQ_PK_FK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FTHSAC_SAC_CODE_SQ_PK_FK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FTHSAC_SAC_CODE_SQ_PK_FK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [theriaque].[FTHSAC_FIT_SUBACTIVE] SET [FTHSAC_FTH_CODE_SQ_PK_FK] = @FTHSA"& _ 
                "C_FTH_CODE_SQ_PK_FK, [FTHSAC_SAC_CODE_SQ_PK_FK] = @FTHSAC_SAC_CODE_SQ_PK_FK WHER"& _ 
                "E (([FTHSAC_FTH_CODE_SQ_PK_FK] = @Original_FTHSAC_FTH_CODE_SQ_PK_FK) AND ([FTHSA"& _ 
                "C_SAC_CODE_SQ_PK_FK] = @Original_FTHSAC_SAC_CODE_SQ_PK_FK));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT FTHSAC_FTH_"& _ 
                "CODE_SQ_PK_FK, FTHSAC_SAC_CODE_SQ_PK_FK FROM theriaque.FTHSAC_FIT_SUBACTIVE WHER"& _ 
                "E (FTHSAC_FTH_CODE_SQ_PK_FK = @FTHSAC_FTH_CODE_SQ_PK_FK) AND (FTHSAC_SAC_CODE_SQ"& _ 
                "_PK_FK = @FTHSAC_SAC_CODE_SQ_PK_FK)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FTHSAC_FTH_CODE_SQ_PK_FK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FTHSAC_FTH_CODE_SQ_PK_FK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FTHSAC_SAC_CODE_SQ_PK_FK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FTHSAC_SAC_CODE_SQ_PK_FK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FTHSAC_FTH_CODE_SQ_PK_FK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FTHSAC_FTH_CODE_SQ_PK_FK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FTHSAC_SAC_CODE_SQ_PK_FK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FTHSAC_SAC_CODE_SQ_PK_FK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Theriaque.MySettings.Default.ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT FTHSAC_FTH_CODE_SQ_PK_FK, FTHSAC_SAC_CODE_SQ_PK_FK FROM theriaque.FTHSAC_F"& _ 
                "IT_SUBACTIVE"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT FTHSAC_FTH_CODE_SQ_PK_FK, FTHSAC_SAC_CODE_SQ_PK_FK FROM theriaque.FTHSAC_F"& _ 
                "IT_SUBACTIVE"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE FTHSAC_FTH_CODE_SQ_PK_FK=@FTHSAC_FTH_CODE_SQ_PK_FK"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FTHSAC_FTH_CODE_SQ_PK_FK", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "FTHSAC_FTH_CODE_SQ_PK_FK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsTheriaque_CriteresChoix.FTHSAC_FIT_SUBACTIVEDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsTheriaque_CriteresChoix.FTHSAC_FIT_SUBACTIVEDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsTheriaque_CriteresChoix.FTHSAC_FIT_SUBACTIVEDataTable = New dsTheriaque_CriteresChoix.FTHSAC_FIT_SUBACTIVEDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByCode(ByVal dataTable As dsTheriaque_CriteresChoix.FTHSAC_FIT_SUBACTIVEDataTable, ByVal FTHSAC_FTH_CODE_SQ_PK_FK As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(FTHSAC_FTH_CODE_SQ_PK_FK,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByCode(ByVal FTHSAC_FTH_CODE_SQ_PK_FK As Integer) As dsTheriaque_CriteresChoix.FTHSAC_FIT_SUBACTIVEDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(FTHSAC_FTH_CODE_SQ_PK_FK,Integer)
            Dim dataTable As dsTheriaque_CriteresChoix.FTHSAC_FIT_SUBACTIVEDataTable = New dsTheriaque_CriteresChoix.FTHSAC_FIT_SUBACTIVEDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsTheriaque_CriteresChoix.FTHSAC_FIT_SUBACTIVEDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsTheriaque_CriteresChoix) As Integer
            Return Me.Adapter.Update(dataSet, "FTHSAC_FIT_SUBACTIVE")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_FTHSAC_FTH_CODE_SQ_PK_FK As Integer, ByVal Original_FTHSAC_SAC_CODE_SQ_PK_FK As Integer) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_FTHSAC_FTH_CODE_SQ_PK_FK,Integer)
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_FTHSAC_SAC_CODE_SQ_PK_FK,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal FTHSAC_FTH_CODE_SQ_PK_FK As Integer, ByVal FTHSAC_SAC_CODE_SQ_PK_FK As Integer) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(FTHSAC_FTH_CODE_SQ_PK_FK,Integer)
            Me.Adapter.InsertCommand.Parameters(1).Value = CType(FTHSAC_SAC_CODE_SQ_PK_FK,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal FTHSAC_FTH_CODE_SQ_PK_FK As Integer, ByVal FTHSAC_SAC_CODE_SQ_PK_FK As Integer, ByVal Original_FTHSAC_FTH_CODE_SQ_PK_FK As Integer, ByVal Original_FTHSAC_SAC_CODE_SQ_PK_FK As Integer) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(FTHSAC_FTH_CODE_SQ_PK_FK,Integer)
            Me.Adapter.UpdateCommand.Parameters(1).Value = CType(FTHSAC_SAC_CODE_SQ_PK_FK,Integer)
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Original_FTHSAC_FTH_CODE_SQ_PK_FK,Integer)
            Me.Adapter.UpdateCommand.Parameters(3).Value = CType(Original_FTHSAC_SAC_CODE_SQ_PK_FK,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal Original_FTHSAC_FTH_CODE_SQ_PK_FK As Integer, ByVal Original_FTHSAC_SAC_CODE_SQ_PK_FK As Integer) As Integer
            Return Me.Update(Original_FTHSAC_FTH_CODE_SQ_PK_FK, Original_FTHSAC_SAC_CODE_SQ_PK_FK, Original_FTHSAC_FTH_CODE_SQ_PK_FK, Original_FTHSAC_SAC_CODE_SQ_PK_FK)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class FTHSAU_FIT_SUBAUXILIAIRETableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "FTHSAU_FIT_SUBAUXILIAIRE"
            tableMapping.ColumnMappings.Add("FTHSAU_FTH_CODE_SQ_PK_FK", "FTHSAU_FTH_CODE_SQ_PK_FK")
            tableMapping.ColumnMappings.Add("FTHSAU_SAU_CODE_SQ_PK_FK", "FTHSAU_SAU_CODE_SQ_PK_FK")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [theriaque].[FTHSAU_FIT_SUBAUXILIAIRE] WHERE (([FTHSAU_FTH_CODE_SQ_PK"& _ 
                "_FK] = @Original_FTHSAU_FTH_CODE_SQ_PK_FK) AND ([FTHSAU_SAU_CODE_SQ_PK_FK] = @Or"& _ 
                "iginal_FTHSAU_SAU_CODE_SQ_PK_FK))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FTHSAU_FTH_CODE_SQ_PK_FK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FTHSAU_FTH_CODE_SQ_PK_FK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FTHSAU_SAU_CODE_SQ_PK_FK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FTHSAU_SAU_CODE_SQ_PK_FK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [theriaque].[FTHSAU_FIT_SUBAUXILIAIRE] ([FTHSAU_FTH_CODE_SQ_PK_FK], ["& _ 
                "FTHSAU_SAU_CODE_SQ_PK_FK]) VALUES (@FTHSAU_FTH_CODE_SQ_PK_FK, @FTHSAU_SAU_CODE_S"& _ 
                "Q_PK_FK);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT FTHSAU_FTH_CODE_SQ_PK_FK, FTHSAU_SAU_CODE_SQ_PK_FK FROM theria"& _ 
                "que.FTHSAU_FIT_SUBAUXILIAIRE WHERE (FTHSAU_FTH_CODE_SQ_PK_FK = @FTHSAU_FTH_CODE_"& _ 
                "SQ_PK_FK) AND (FTHSAU_SAU_CODE_SQ_PK_FK = @FTHSAU_SAU_CODE_SQ_PK_FK)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FTHSAU_FTH_CODE_SQ_PK_FK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FTHSAU_FTH_CODE_SQ_PK_FK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FTHSAU_SAU_CODE_SQ_PK_FK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FTHSAU_SAU_CODE_SQ_PK_FK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [theriaque].[FTHSAU_FIT_SUBAUXILIAIRE] SET [FTHSAU_FTH_CODE_SQ_PK_FK] = @F"& _ 
                "THSAU_FTH_CODE_SQ_PK_FK, [FTHSAU_SAU_CODE_SQ_PK_FK] = @FTHSAU_SAU_CODE_SQ_PK_FK "& _ 
                "WHERE (([FTHSAU_FTH_CODE_SQ_PK_FK] = @Original_FTHSAU_FTH_CODE_SQ_PK_FK) AND ([F"& _ 
                "THSAU_SAU_CODE_SQ_PK_FK] = @Original_FTHSAU_SAU_CODE_SQ_PK_FK));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT FTHSAU_"& _ 
                "FTH_CODE_SQ_PK_FK, FTHSAU_SAU_CODE_SQ_PK_FK FROM theriaque.FTHSAU_FIT_SUBAUXILIA"& _ 
                "IRE WHERE (FTHSAU_FTH_CODE_SQ_PK_FK = @FTHSAU_FTH_CODE_SQ_PK_FK) AND (FTHSAU_SAU"& _ 
                "_CODE_SQ_PK_FK = @FTHSAU_SAU_CODE_SQ_PK_FK)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FTHSAU_FTH_CODE_SQ_PK_FK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FTHSAU_FTH_CODE_SQ_PK_FK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FTHSAU_SAU_CODE_SQ_PK_FK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FTHSAU_SAU_CODE_SQ_PK_FK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FTHSAU_FTH_CODE_SQ_PK_FK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FTHSAU_FTH_CODE_SQ_PK_FK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FTHSAU_SAU_CODE_SQ_PK_FK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FTHSAU_SAU_CODE_SQ_PK_FK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Theriaque.MySettings.Default.ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT FTHSAU_FTH_CODE_SQ_PK_FK, FTHSAU_SAU_CODE_SQ_PK_FK FROM theriaque.FTHSAU_F"& _ 
                "IT_SUBAUXILIAIRE"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT FTHSAU_FTH_CODE_SQ_PK_FK, FTHSAU_SAU_CODE_SQ_PK_FK FROM theriaque.FTHSAU_F"& _ 
                "IT_SUBAUXILIAIRE"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE FTHSAU_FTH_CODE_SQ_PK_FK=@FTHSAU_FTH_CODE_SQ_PK_FK"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FTHSAU_FTH_CODE_SQ_PK_FK", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "FTHSAU_FTH_CODE_SQ_PK_FK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsTheriaque_CriteresChoix.FTHSAU_FIT_SUBAUXILIAIREDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsTheriaque_CriteresChoix.FTHSAU_FIT_SUBAUXILIAIREDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsTheriaque_CriteresChoix.FTHSAU_FIT_SUBAUXILIAIREDataTable = New dsTheriaque_CriteresChoix.FTHSAU_FIT_SUBAUXILIAIREDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByCode(ByVal dataTable As dsTheriaque_CriteresChoix.FTHSAU_FIT_SUBAUXILIAIREDataTable, ByVal FTHSAU_FTH_CODE_SQ_PK_FK As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(FTHSAU_FTH_CODE_SQ_PK_FK,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByCode(ByVal FTHSAU_FTH_CODE_SQ_PK_FK As Integer) As dsTheriaque_CriteresChoix.FTHSAU_FIT_SUBAUXILIAIREDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(FTHSAU_FTH_CODE_SQ_PK_FK,Integer)
            Dim dataTable As dsTheriaque_CriteresChoix.FTHSAU_FIT_SUBAUXILIAIREDataTable = New dsTheriaque_CriteresChoix.FTHSAU_FIT_SUBAUXILIAIREDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsTheriaque_CriteresChoix.FTHSAU_FIT_SUBAUXILIAIREDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsTheriaque_CriteresChoix) As Integer
            Return Me.Adapter.Update(dataSet, "FTHSAU_FIT_SUBAUXILIAIRE")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_FTHSAU_FTH_CODE_SQ_PK_FK As Integer, ByVal Original_FTHSAU_SAU_CODE_SQ_PK_FK As Integer) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_FTHSAU_FTH_CODE_SQ_PK_FK,Integer)
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_FTHSAU_SAU_CODE_SQ_PK_FK,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal FTHSAU_FTH_CODE_SQ_PK_FK As Integer, ByVal FTHSAU_SAU_CODE_SQ_PK_FK As Integer) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(FTHSAU_FTH_CODE_SQ_PK_FK,Integer)
            Me.Adapter.InsertCommand.Parameters(1).Value = CType(FTHSAU_SAU_CODE_SQ_PK_FK,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal FTHSAU_FTH_CODE_SQ_PK_FK As Integer, ByVal FTHSAU_SAU_CODE_SQ_PK_FK As Integer, ByVal Original_FTHSAU_FTH_CODE_SQ_PK_FK As Integer, ByVal Original_FTHSAU_SAU_CODE_SQ_PK_FK As Integer) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(FTHSAU_FTH_CODE_SQ_PK_FK,Integer)
            Me.Adapter.UpdateCommand.Parameters(1).Value = CType(FTHSAU_SAU_CODE_SQ_PK_FK,Integer)
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Original_FTHSAU_FTH_CODE_SQ_PK_FK,Integer)
            Me.Adapter.UpdateCommand.Parameters(3).Value = CType(Original_FTHSAU_SAU_CODE_SQ_PK_FK,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal Original_FTHSAU_FTH_CODE_SQ_PK_FK As Integer, ByVal Original_FTHSAU_SAU_CODE_SQ_PK_FK As Integer) As Integer
            Return Me.Update(Original_FTHSAU_FTH_CODE_SQ_PK_FK, Original_FTHSAU_SAU_CODE_SQ_PK_FK, Original_FTHSAU_FTH_CODE_SQ_PK_FK, Original_FTHSAU_SAU_CODE_SQ_PK_FK)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class FTHPR_FIT_PRODUITTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "FTHPR_FIT_PRODUIT"
            tableMapping.ColumnMappings.Add("FTHPR_FTH_CODE_SQ_PK_FK", "FTHPR_FTH_CODE_SQ_PK_FK")
            tableMapping.ColumnMappings.Add("FTHPR_PR_CODE_SQ_PK_FK", "FTHPR_PR_CODE_SQ_PK_FK")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [theriaque].[FTHPR_FIT_PRODUIT] WHERE (([FTHPR_FTH_CODE_SQ_PK_FK] = @"& _ 
                "Original_FTHPR_FTH_CODE_SQ_PK_FK) AND ([FTHPR_PR_CODE_SQ_PK_FK] = @Original_FTHP"& _ 
                "R_PR_CODE_SQ_PK_FK))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FTHPR_FTH_CODE_SQ_PK_FK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FTHPR_FTH_CODE_SQ_PK_FK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FTHPR_PR_CODE_SQ_PK_FK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FTHPR_PR_CODE_SQ_PK_FK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [theriaque].[FTHPR_FIT_PRODUIT] ([FTHPR_FTH_CODE_SQ_PK_FK], [FTHPR_PR"& _ 
                "_CODE_SQ_PK_FK]) VALUES (@FTHPR_FTH_CODE_SQ_PK_FK, @FTHPR_PR_CODE_SQ_PK_FK);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SE"& _ 
                "LECT FTHPR_FTH_CODE_SQ_PK_FK, FTHPR_PR_CODE_SQ_PK_FK FROM theriaque.FTHPR_FIT_PR"& _ 
                "ODUIT WHERE (FTHPR_FTH_CODE_SQ_PK_FK = @FTHPR_FTH_CODE_SQ_PK_FK) AND (FTHPR_PR_C"& _ 
                "ODE_SQ_PK_FK = @FTHPR_PR_CODE_SQ_PK_FK)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FTHPR_FTH_CODE_SQ_PK_FK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FTHPR_FTH_CODE_SQ_PK_FK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FTHPR_PR_CODE_SQ_PK_FK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FTHPR_PR_CODE_SQ_PK_FK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [theriaque].[FTHPR_FIT_PRODUIT] SET [FTHPR_FTH_CODE_SQ_PK_FK] = @FTHPR_FTH"& _ 
                "_CODE_SQ_PK_FK, [FTHPR_PR_CODE_SQ_PK_FK] = @FTHPR_PR_CODE_SQ_PK_FK WHERE (([FTHP"& _ 
                "R_FTH_CODE_SQ_PK_FK] = @Original_FTHPR_FTH_CODE_SQ_PK_FK) AND ([FTHPR_PR_CODE_SQ"& _ 
                "_PK_FK] = @Original_FTHPR_PR_CODE_SQ_PK_FK));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT FTHPR_FTH_CODE_SQ_PK_FK, F"& _ 
                "THPR_PR_CODE_SQ_PK_FK FROM theriaque.FTHPR_FIT_PRODUIT WHERE (FTHPR_FTH_CODE_SQ_"& _ 
                "PK_FK = @FTHPR_FTH_CODE_SQ_PK_FK) AND (FTHPR_PR_CODE_SQ_PK_FK = @FTHPR_PR_CODE_S"& _ 
                "Q_PK_FK)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FTHPR_FTH_CODE_SQ_PK_FK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FTHPR_FTH_CODE_SQ_PK_FK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FTHPR_PR_CODE_SQ_PK_FK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FTHPR_PR_CODE_SQ_PK_FK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FTHPR_FTH_CODE_SQ_PK_FK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FTHPR_FTH_CODE_SQ_PK_FK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FTHPR_PR_CODE_SQ_PK_FK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FTHPR_PR_CODE_SQ_PK_FK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Theriaque.MySettings.Default.ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT FTHPR_FTH_CODE_SQ_PK_FK, FTHPR_PR_CODE_SQ_PK_FK FROM theriaque.FTHPR_FIT_P"& _ 
                "RODUIT"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT FTHPR_FTH_CODE_SQ_PK_FK, FTHPR_PR_CODE_SQ_PK_FK FROM theriaque.FTHPR_FIT_P"& _ 
                "RODUIT"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE FTHPR_FTH_CODE_SQ_PK_FK=@FTHPR_FTH_CODE_SQ_PK_FK"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FTHPR_FTH_CODE_SQ_PK_FK", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "FTHPR_FTH_CODE_SQ_PK_FK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsTheriaque_CriteresChoix.FTHPR_FIT_PRODUITDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsTheriaque_CriteresChoix.FTHPR_FIT_PRODUITDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsTheriaque_CriteresChoix.FTHPR_FIT_PRODUITDataTable = New dsTheriaque_CriteresChoix.FTHPR_FIT_PRODUITDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByCode(ByVal dataTable As dsTheriaque_CriteresChoix.FTHPR_FIT_PRODUITDataTable, ByVal FTHPR_FTH_CODE_SQ_PK_FK As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(FTHPR_FTH_CODE_SQ_PK_FK,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByCode(ByVal FTHPR_FTH_CODE_SQ_PK_FK As Integer) As dsTheriaque_CriteresChoix.FTHPR_FIT_PRODUITDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(FTHPR_FTH_CODE_SQ_PK_FK,Integer)
            Dim dataTable As dsTheriaque_CriteresChoix.FTHPR_FIT_PRODUITDataTable = New dsTheriaque_CriteresChoix.FTHPR_FIT_PRODUITDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsTheriaque_CriteresChoix.FTHPR_FIT_PRODUITDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsTheriaque_CriteresChoix) As Integer
            Return Me.Adapter.Update(dataSet, "FTHPR_FIT_PRODUIT")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_FTHPR_FTH_CODE_SQ_PK_FK As Integer, ByVal Original_FTHPR_PR_CODE_SQ_PK_FK As Integer) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_FTHPR_FTH_CODE_SQ_PK_FK,Integer)
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_FTHPR_PR_CODE_SQ_PK_FK,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal FTHPR_FTH_CODE_SQ_PK_FK As Integer, ByVal FTHPR_PR_CODE_SQ_PK_FK As Integer) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(FTHPR_FTH_CODE_SQ_PK_FK,Integer)
            Me.Adapter.InsertCommand.Parameters(1).Value = CType(FTHPR_PR_CODE_SQ_PK_FK,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal FTHPR_FTH_CODE_SQ_PK_FK As Integer, ByVal FTHPR_PR_CODE_SQ_PK_FK As Integer, ByVal Original_FTHPR_FTH_CODE_SQ_PK_FK As Integer, ByVal Original_FTHPR_PR_CODE_SQ_PK_FK As Integer) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(FTHPR_FTH_CODE_SQ_PK_FK,Integer)
            Me.Adapter.UpdateCommand.Parameters(1).Value = CType(FTHPR_PR_CODE_SQ_PK_FK,Integer)
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Original_FTHPR_FTH_CODE_SQ_PK_FK,Integer)
            Me.Adapter.UpdateCommand.Parameters(3).Value = CType(Original_FTHPR_PR_CODE_SQ_PK_FK,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal Original_FTHPR_FTH_CODE_SQ_PK_FK As Integer, ByVal Original_FTHPR_PR_CODE_SQ_PK_FK As Integer) As Integer
            Return Me.Update(Original_FTHPR_FTH_CODE_SQ_PK_FK, Original_FTHPR_PR_CODE_SQ_PK_FK, Original_FTHPR_FTH_CODE_SQ_PK_FK, Original_FTHPR_PR_CODE_SQ_PK_FK)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class FTHCATC_FIT_CLASSEATCTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "FTHCATC_FIT_CLASSEATC"
            tableMapping.ColumnMappings.Add("FTHCATC_FTH_CODE_SQ_PK_FK", "FTHCATC_FTH_CODE_SQ_PK_FK")
            tableMapping.ColumnMappings.Add("FTHCATC_CATC_CODE_PK_FK", "FTHCATC_CATC_CODE_PK_FK")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [theriaque].[FTHCATC_FIT_CLASSEATC] WHERE (([FTHCATC_FTH_CODE_SQ_PK_F"& _ 
                "K] = @Original_FTHCATC_FTH_CODE_SQ_PK_FK) AND ([FTHCATC_CATC_CODE_PK_FK] = @Orig"& _ 
                "inal_FTHCATC_CATC_CODE_PK_FK))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FTHCATC_FTH_CODE_SQ_PK_FK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FTHCATC_FTH_CODE_SQ_PK_FK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FTHCATC_CATC_CODE_PK_FK", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FTHCATC_CATC_CODE_PK_FK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [theriaque].[FTHCATC_FIT_CLASSEATC] ([FTHCATC_FTH_CODE_SQ_PK_FK], [FT"& _ 
                "HCATC_CATC_CODE_PK_FK]) VALUES (@FTHCATC_FTH_CODE_SQ_PK_FK, @FTHCATC_CATC_CODE_P"& _ 
                "K_FK);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT FTHCATC_FTH_CODE_SQ_PK_FK, FTHCATC_CATC_CODE_PK_FK FROM theriaque"& _ 
                ".FTHCATC_FIT_CLASSEATC WHERE (FTHCATC_CATC_CODE_PK_FK = @FTHCATC_CATC_CODE_PK_FK"& _ 
                ") AND (FTHCATC_FTH_CODE_SQ_PK_FK = @FTHCATC_FTH_CODE_SQ_PK_FK)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FTHCATC_FTH_CODE_SQ_PK_FK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FTHCATC_FTH_CODE_SQ_PK_FK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FTHCATC_CATC_CODE_PK_FK", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FTHCATC_CATC_CODE_PK_FK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [theriaque].[FTHCATC_FIT_CLASSEATC] SET [FTHCATC_FTH_CODE_SQ_PK_FK] = @FTH"& _ 
                "CATC_FTH_CODE_SQ_PK_FK, [FTHCATC_CATC_CODE_PK_FK] = @FTHCATC_CATC_CODE_PK_FK WHE"& _ 
                "RE (([FTHCATC_FTH_CODE_SQ_PK_FK] = @Original_FTHCATC_FTH_CODE_SQ_PK_FK) AND ([FT"& _ 
                "HCATC_CATC_CODE_PK_FK] = @Original_FTHCATC_CATC_CODE_PK_FK));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT FTHCATC_FT"& _ 
                "H_CODE_SQ_PK_FK, FTHCATC_CATC_CODE_PK_FK FROM theriaque.FTHCATC_FIT_CLASSEATC WH"& _ 
                "ERE (FTHCATC_CATC_CODE_PK_FK = @FTHCATC_CATC_CODE_PK_FK) AND (FTHCATC_FTH_CODE_S"& _ 
                "Q_PK_FK = @FTHCATC_FTH_CODE_SQ_PK_FK)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FTHCATC_FTH_CODE_SQ_PK_FK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FTHCATC_FTH_CODE_SQ_PK_FK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FTHCATC_CATC_CODE_PK_FK", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FTHCATC_CATC_CODE_PK_FK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FTHCATC_FTH_CODE_SQ_PK_FK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FTHCATC_FTH_CODE_SQ_PK_FK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FTHCATC_CATC_CODE_PK_FK", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FTHCATC_CATC_CODE_PK_FK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Theriaque.MySettings.Default.ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT FTHCATC_FTH_CODE_SQ_PK_FK, FTHCATC_CATC_CODE_PK_FK FROM theriaque.FTHCATC_"& _ 
                "FIT_CLASSEATC"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT FTHCATC_FTH_CODE_SQ_PK_FK, FTHCATC_CATC_CODE_PK_FK FROM theriaque.FTHCATC_"& _ 
                "FIT_CLASSEATC"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE FTHCATC_FTH_CODE_SQ_PK_FK=@FTHCATC_FTH_CODE_SQ_PK_FK"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FTHCATC_FTH_CODE_SQ_PK_FK", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "FTHCATC_FTH_CODE_SQ_PK_FK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsTheriaque_CriteresChoix.FTHCATC_FIT_CLASSEATCDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsTheriaque_CriteresChoix.FTHCATC_FIT_CLASSEATCDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsTheriaque_CriteresChoix.FTHCATC_FIT_CLASSEATCDataTable = New dsTheriaque_CriteresChoix.FTHCATC_FIT_CLASSEATCDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByCode(ByVal dataTable As dsTheriaque_CriteresChoix.FTHCATC_FIT_CLASSEATCDataTable, ByVal FTHCATC_FTH_CODE_SQ_PK_FK As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(FTHCATC_FTH_CODE_SQ_PK_FK,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByCode(ByVal FTHCATC_FTH_CODE_SQ_PK_FK As Integer) As dsTheriaque_CriteresChoix.FTHCATC_FIT_CLASSEATCDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(FTHCATC_FTH_CODE_SQ_PK_FK,Integer)
            Dim dataTable As dsTheriaque_CriteresChoix.FTHCATC_FIT_CLASSEATCDataTable = New dsTheriaque_CriteresChoix.FTHCATC_FIT_CLASSEATCDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsTheriaque_CriteresChoix.FTHCATC_FIT_CLASSEATCDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsTheriaque_CriteresChoix) As Integer
            Return Me.Adapter.Update(dataSet, "FTHCATC_FIT_CLASSEATC")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_FTHCATC_FTH_CODE_SQ_PK_FK As Integer, ByVal Original_FTHCATC_CATC_CODE_PK_FK As String) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_FTHCATC_FTH_CODE_SQ_PK_FK,Integer)
            If (Original_FTHCATC_CATC_CODE_PK_FK Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_FTHCATC_CATC_CODE_PK_FK")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_FTHCATC_CATC_CODE_PK_FK,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal FTHCATC_FTH_CODE_SQ_PK_FK As Integer, ByVal FTHCATC_CATC_CODE_PK_FK As String) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(FTHCATC_FTH_CODE_SQ_PK_FK,Integer)
            If (FTHCATC_CATC_CODE_PK_FK Is Nothing) Then
                Throw New Global.System.ArgumentNullException("FTHCATC_CATC_CODE_PK_FK")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(FTHCATC_CATC_CODE_PK_FK,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal FTHCATC_FTH_CODE_SQ_PK_FK As Integer, ByVal FTHCATC_CATC_CODE_PK_FK As String, ByVal Original_FTHCATC_FTH_CODE_SQ_PK_FK As Integer, ByVal Original_FTHCATC_CATC_CODE_PK_FK As String) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(FTHCATC_FTH_CODE_SQ_PK_FK,Integer)
            If (FTHCATC_CATC_CODE_PK_FK Is Nothing) Then
                Throw New Global.System.ArgumentNullException("FTHCATC_CATC_CODE_PK_FK")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(FTHCATC_CATC_CODE_PK_FK,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Original_FTHCATC_FTH_CODE_SQ_PK_FK,Integer)
            If (Original_FTHCATC_CATC_CODE_PK_FK Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_FTHCATC_CATC_CODE_PK_FK")
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(Original_FTHCATC_CATC_CODE_PK_FK,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal Original_FTHCATC_FTH_CODE_SQ_PK_FK As Integer, ByVal Original_FTHCATC_CATC_CODE_PK_FK As String) As Integer
            Return Me.Update(Original_FTHCATC_FTH_CODE_SQ_PK_FK, Original_FTHCATC_CATC_CODE_PK_FK, Original_FTHCATC_FTH_CODE_SQ_PK_FK, Original_FTHCATC_CATC_CODE_PK_FK)
        End Function
    End Class
End Namespace
